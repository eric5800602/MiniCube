

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Dec 30 21:12:10 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    29                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    33                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    34                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    35  0000                     
    36                           ; Version 2.10
    37                           ; Generated 31/07/2019 GMT
    38                           ; 
    39                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC18F4520 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     _PORTD	set	3971
    71  0000                     _PR2	set	4043
    72  0000                     _INTCONbits	set	4082
    73  0000                     _RCONbits	set	4048
    74  0000                     _IPR1bits	set	3999
    75  0000                     _PIE1bits	set	3997
    76  0000                     _T2CONbits	set	4042
    77  0000                     _OSCCONbits	set	4051
    78  0000                     _TRISCbits	set	3988
    79  0000                     _TRISD	set	3989
    80  0000                     _PORTCbits	set	3970
    81  0000                     _PIR1bits	set	3998
    82  0000                     _TRISC	set	3988
    83  0000                     _PORTC	set	3970
    84  0000                     _TRISB	set	3987
    85  0000                     _PORTB	set	3969
    86  0000                     _TRISA	set	3986
    87  0000                     _PORTA	set	3968
    88  0000                     _RC1	set	31761
    89  0000                     _RC0	set	31760
    90                           
    91                           	psect	smallconst
    92  000600                     __psmallconst:
    93                           	opt callstack 0
    94  000600  00                 	db	0
    95  000601                     STR_2:
    96  000601  2D                 	db	45
    97  000602  2D                 	db	45
    98  000603  2D                 	db	45
    99  000604  2D                 	db	45
   100  000605  2D                 	db	45
   101  000606  2D                 	db	45
   102  000607  54                 	db	84	;'T'
   103  000608  69                 	db	105	;'i'
   104  000609  6D                 	db	109	;'m'
   105  00060A  65                 	db	101	;'e'
   106  00060B  3A                 	db	58	;':'
   107  00060C  2D                 	db	45
   108  00060D  2D                 	db	45
   109  00060E  2D                 	db	45
   110  00060F  2D                 	db	45
   111  000610  2D                 	db	45
   112  000611  2D                 	db	45
   113  000612  00                 	db	0
   114  000613                     STR_1:
   115  000613  25                 	db	37
   116  000614  64                 	db	100	;'d'
   117  000615  2E                 	db	46
   118  000616  25                 	db	37
   119  000617  64                 	db	100	;'d'
   120  000618  00                 	db	0
   121                           
   122                           ; #config settings
   123  000619  00                 	db	0	; dummy byte at the end
   124  0000                     
   125                           	psect	cinit
   126  001326                     __pcinit:
   127                           	opt callstack 0
   128  001326                     start_initialization:
   129                           	opt callstack 0
   130  001326                     __initialization:
   131                           	opt callstack 0
   132                           
   133                           ; Clear objects allocated to BANK0 (36 bytes)
   134  001326  EE00  F080         	lfsr	0,__pbssBANK0
   135  00132A  0E24               	movlw	36
   136  00132C                     clear_0:
   137  00132C  6AEE               	clrf	postinc0,c
   138  00132E  06E8               	decf	wreg,f,c
   139  001330  E1FD               	bnz	clear_0
   140                           
   141                           ; Clear objects allocated to COMRAM (15 bytes)
   142  001332  EE00  F066         	lfsr	0,__pbssCOMRAM
   143  001336  0E0F               	movlw	15
   144  001338                     clear_1:
   145  001338  6AEE               	clrf	postinc0,c
   146  00133A  06E8               	decf	wreg,f,c
   147  00133C  E1FD               	bnz	clear_1
   148  00133E                     end_of_initialization:
   149                           	opt callstack 0
   150  00133E                     __end_of__initialization:
   151                           	opt callstack 0
   152  00133E  9075               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   153  001340  9275               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   154  001342  0E00               	movlw	low (__Lmediumconst shr (0+16))
   155  001344  6EF8               	movwf	tblptru,c
   156  001346  0100               	movlb	0
   157  001348  EF49  F007         	goto	_main	;jump to C main() function
   158                           
   159                           	psect	bssCOMRAM
   160  000066                     __pbssCOMRAM:
   161                           	opt callstack 0
   162  000066                     _lcd:
   163                           	opt callstack 0
   164  000066                     	ds	5
   165  00006B                     _width:
   166                           	opt callstack 0
   167  00006B                     	ds	2
   168  00006D                     _prec:
   169                           	opt callstack 0
   170  00006D                     	ds	2
   171  00006F                     _flags:
   172                           	opt callstack 0
   173  00006F                     	ds	2
   174  000071                     _run:
   175                           	opt callstack 0
   176  000071                     	ds	2
   177  000073                     _times:
   178                           	opt callstack 0
   179  000073                     	ds	2
   180                           
   181                           	psect	bssBANK0
   182  000080                     __pbssBANK0:
   183                           	opt callstack 0
   184  000080                     _nout:
   185                           	opt callstack 0
   186  000080                     	ds	2
   187  000082                     _i:
   188                           	opt callstack 0
   189  000082                     	ds	2
   190  000084                     _dbuf:
   191                           	opt callstack 0
   192  000084                     	ds	32
   193                           
   194                           	psect	cstackBANK0
   195  0000A4                     __pcstackBANK0:
   196                           	opt callstack 0
   197  0000A4                     	ds	2
   198  0000A6                     sprintf@ap:
   199                           	opt callstack 0
   200                           
   201                           ; 2 bytes @ 0x2
   202  0000A6                     	ds	2
   203  0000A8                     sprintf@f:
   204                           	opt callstack 0
   205                           
   206                           ; 6 bytes @ 0x4
   207  0000A8                     	ds	6
   208  0000AE                     main@s:
   209                           	opt callstack 0
   210                           
   211                           ; 10 bytes @ 0xA
   212  0000AE                     	ds	10
   213                           
   214                           	psect	cstackCOMRAM
   215  000001                     __pcstackCOMRAM:
   216                           	opt callstack 0
   217  000001                     i2Delay_us@us:
   218                           	opt callstack 0
   219                           
   220                           ; 2 bytes @ 0x0
   221  000001                     	ds	2
   222  000003                     ??i2_Delay_us:
   223                           
   224                           ; 1 bytes @ 0x2
   225  000003                     	ds	2
   226  000005                     i2Cmd@Value:
   227                           	opt callstack 0
   228                           
   229                           ; 2 bytes @ 0x4
   230  000005                     	ds	2
   231  000007                     ?_strlen:
   232                           	opt callstack 0
   233  000007                     ?___aodiv:
   234                           	opt callstack 0
   235  000007                     ?___aomod:
   236                           	opt callstack 0
   237  000007                     Delay_us@us:
   238                           	opt callstack 0
   239  000007                     fputc@c:
   240                           	opt callstack 0
   241  000007                     strlen@s:
   242                           	opt callstack 0
   243  000007                     ___aodiv@dividend:
   244                           	opt callstack 0
   245  000007                     ___aomod@dividend:
   246                           	opt callstack 0
   247                           
   248                           ; 8 bytes @ 0x6
   249  000007                     	ds	2
   250  000009                     ??_Delay_us:
   251  000009                     fputc@fp:
   252                           	opt callstack 0
   253  000009                     strlen@a:
   254                           	opt callstack 0
   255                           
   256                           ; 2 bytes @ 0x8
   257  000009                     	ds	2
   258  00000B                     ??_fputc:
   259  00000B                     Data@v:
   260                           	opt callstack 0
   261  00000B                     Cmd@Value:
   262                           	opt callstack 0
   263                           
   264                           ; 2 bytes @ 0xA
   265  00000B                     	ds	1
   266  00000C                     Data@Value:
   267                           	opt callstack 0
   268                           
   269                           ; 1 bytes @ 0xB
   270  00000C                     	ds	1
   271  00000D                     Send2Lcd@Lcd:
   272                           	opt callstack 0
   273                           
   274                           ; 2 bytes @ 0xC
   275  00000D                     	ds	2
   276  00000F                     Send2Lcd@Adr:
   277                           	opt callstack 0
   278  00000F                     ___aodiv@divisor:
   279                           	opt callstack 0
   280  00000F                     ___aomod@divisor:
   281                           	opt callstack 0
   282                           
   283                           ; 8 bytes @ 0xE
   284  00000F                     	ds	1
   285  000010                     fputs@s:
   286                           	opt callstack 0
   287                           
   288                           ; 2 bytes @ 0xF
   289  000010                     	ds	2
   290  000012                     fputs@fp:
   291                           	opt callstack 0
   292                           
   293                           ; 2 bytes @ 0x11
   294  000012                     	ds	2
   295  000014                     fputs@c:
   296                           	opt callstack 0
   297                           
   298                           ; 1 bytes @ 0x13
   299  000014                     	ds	1
   300  000015                     fputs@i:
   301                           	opt callstack 0
   302                           
   303                           ; 2 bytes @ 0x14
   304  000015                     	ds	2
   305  000017                     ?_pad:
   306                           	opt callstack 0
   307  000017                     ___aodiv@counter:
   308                           	opt callstack 0
   309  000017                     ___aomod@counter:
   310                           	opt callstack 0
   311  000017                     pad@fp:
   312                           	opt callstack 0
   313                           
   314                           ; 2 bytes @ 0x16
   315  000017                     	ds	1
   316  000018                     ___aodiv@sign:
   317                           	opt callstack 0
   318  000018                     ___aomod@sign:
   319                           	opt callstack 0
   320                           
   321                           ; 1 bytes @ 0x17
   322  000018                     	ds	1
   323  000019                     ?_abs:
   324                           	opt callstack 0
   325  000019                     pad@buf:
   326                           	opt callstack 0
   327  000019                     abs@a:
   328                           	opt callstack 0
   329  000019                     ___aodiv@quotient:
   330                           	opt callstack 0
   331                           
   332                           ; 8 bytes @ 0x18
   333  000019                     	ds	2
   334  00001B                     ??_abs:
   335  00001B                     pad@p:
   336                           	opt callstack 0
   337                           
   338                           ; 2 bytes @ 0x1A
   339  00001B                     	ds	2
   340  00001D                     ??_pad:
   341                           
   342                           ; 1 bytes @ 0x1C
   343  00001D                     	ds	1
   344  00001E                     pad@i:
   345                           	opt callstack 0
   346                           
   347                           ; 2 bytes @ 0x1D
   348  00001E                     	ds	2
   349  000020                     pad@w:
   350                           	opt callstack 0
   351                           
   352                           ; 2 bytes @ 0x1F
   353  000020                     	ds	2
   354  000022                     ?_dtoa:
   355                           	opt callstack 0
   356  000022                     dtoa@fp:
   357                           	opt callstack 0
   358                           
   359                           ; 2 bytes @ 0x21
   360  000022                     	ds	2
   361  000024                     dtoa@d:
   362                           	opt callstack 0
   363                           
   364                           ; 8 bytes @ 0x23
   365  000024                     	ds	8
   366  00002C                     ??_dtoa:
   367                           
   368                           ; 1 bytes @ 0x2B
   369  00002C                     	ds	8
   370  000034                     _dtoa$648:
   371                           	opt callstack 0
   372                           
   373                           ; 2 bytes @ 0x33
   374  000034                     	ds	2
   375  000036                     dtoa@p:
   376                           	opt callstack 0
   377                           
   378                           ; 2 bytes @ 0x35
   379  000036                     	ds	2
   380  000038                     dtoa@w:
   381                           	opt callstack 0
   382                           
   383                           ; 2 bytes @ 0x37
   384  000038                     	ds	2
   385  00003A                     dtoa@s:
   386                           	opt callstack 0
   387                           
   388                           ; 2 bytes @ 0x39
   389  00003A                     	ds	2
   390  00003C                     dtoa@n:
   391                           	opt callstack 0
   392                           
   393                           ; 8 bytes @ 0x3B
   394  00003C                     	ds	8
   395  000044                     dtoa@i:
   396                           	opt callstack 0
   397                           
   398                           ; 2 bytes @ 0x43
   399  000044                     	ds	2
   400  000046                     ?_vfpfcnvrt:
   401                           	opt callstack 0
   402  000046                     vfpfcnvrt@fp:
   403                           	opt callstack 0
   404                           
   405                           ; 2 bytes @ 0x45
   406  000046                     	ds	2
   407  000048                     vfpfcnvrt@fmt:
   408                           	opt callstack 0
   409                           
   410                           ; 2 bytes @ 0x47
   411  000048                     	ds	2
   412  00004A                     vfpfcnvrt@ap:
   413                           	opt callstack 0
   414                           
   415                           ; 2 bytes @ 0x49
   416  00004A                     	ds	2
   417  00004C                     ??_vfpfcnvrt:
   418                           
   419                           ; 1 bytes @ 0x4B
   420  00004C                     	ds	2
   421  00004E                     vfpfcnvrt@ll:
   422                           	opt callstack 0
   423                           
   424                           ; 8 bytes @ 0x4D
   425  00004E                     	ds	8
   426  000056                     ?_vfprintf:
   427                           	opt callstack 0
   428  000056                     vfprintf@fp:
   429                           	opt callstack 0
   430                           
   431                           ; 2 bytes @ 0x55
   432  000056                     	ds	2
   433  000058                     vfprintf@fmt:
   434                           	opt callstack 0
   435                           
   436                           ; 2 bytes @ 0x57
   437  000058                     	ds	2
   438  00005A                     vfprintf@ap:
   439                           	opt callstack 0
   440                           
   441                           ; 2 bytes @ 0x59
   442  00005A                     	ds	2
   443  00005C                     vfprintf@cfmt:
   444                           	opt callstack 0
   445                           
   446                           ; 2 bytes @ 0x5B
   447  00005C                     	ds	2
   448  00005E                     ?_sprintf:
   449                           	opt callstack 0
   450  00005E                     sprintf@s:
   451                           	opt callstack 0
   452                           
   453                           ; 2 bytes @ 0x5D
   454  00005E                     	ds	2
   455  000060                     sprintf@fmt:
   456                           	opt callstack 0
   457                           
   458                           ; 2 bytes @ 0x5F
   459  000060                     	ds	6
   460  000066                     
   461                           ; 1 bytes @ 0x65
   462 ;;
   463 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   464 ;;
   465 ;; *************** function _main *****************
   466 ;; Defined at:
   467 ;;		line 118 in file "main.c"
   468 ;; Parameters:    Size  Location     Type
   469 ;;		None
   470 ;; Auto vars:     Size  Location     Type
   471 ;;  s              10   10[BANK0 ] unsigned char [10]
   472 ;; Return value:  Size  Location     Type
   473 ;;                  1    wreg      void 
   474 ;; Registers used:
   475 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   476 ;; Tracked objects:
   477 ;;		On entry : 0/0
   478 ;;		On exit  : 0/0
   479 ;;		Unchanged: 0/0
   480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   481 ;;      Params:         0       0       0       0       0       0       0
   482 ;;      Locals:         0      10       0       0       0       0       0
   483 ;;      Temps:          0       0       0       0       0       0       0
   484 ;;      Totals:         0      10       0       0       0       0       0
   485 ;;Total ram usage:       10 bytes
   486 ;; Hardware stack levels required when called:   11
   487 ;; This function calls:
   488 ;;		_Cmd
   489 ;;		_Delay_us
   490 ;;		_Send2Lcd
   491 ;;		_sprintf
   492 ;; This function is called by:
   493 ;;		Startup code after reset
   494 ;; This function uses a non-reentrant model
   495 ;;
   496                           
   497                           	psect	text0
   498  000E92                     __ptext0:
   499                           	opt callstack 0
   500  000E92                     _main:
   501                           	opt callstack 20
   502  000E92                     
   503                           ;main.c: 120:     TRISC=0X00;
   504  000E92  0E00               	movlw	0
   505  000E94  6E94               	movwf	148,c	;volatile
   506                           
   507                           ;main.c: 121:     TRISD=0X00;
   508  000E96  0E00               	movlw	0
   509  000E98  6E95               	movwf	149,c	;volatile
   510  000E9A                     
   511                           ;main.c: 122:     TRISCbits.RC4 = 1;
   512  000E9A  8894               	bsf	148,4,c	;volatile
   513  000E9C                     
   514                           ;main.c: 123:     TRISCbits.RC5 = 1;
   515  000E9C  8A94               	bsf	148,5,c	;volatile
   516  000E9E                     
   517                           ;main.c: 124:     TRISCbits.RC3 = 1;
   518  000E9E  8694               	bsf	148,3,c	;volatile
   519  000EA0                     
   520                           ;main.c: 125:     OSCCONbits.IRCF0 = 0;
   521  000EA0  98D3               	bcf	211,4,c	;volatile
   522  000EA2                     
   523                           ;main.c: 126:     OSCCONbits.IRCF1 = 1;
   524  000EA2  8AD3               	bsf	211,5,c	;volatile
   525  000EA4                     
   526                           ;main.c: 127:     OSCCONbits.IRCF2 = 1;
   527  000EA4  8CD3               	bsf	211,6,c	;volatile
   528  000EA6                     
   529                           ;main.c: 128:     T2CONbits.TMR2ON = 1;
   530  000EA6  84CA               	bsf	202,2,c	;volatile
   531  000EA8                     
   532                           ;main.c: 129:     T2CONbits.T2OUTPS3 = 1;
   533  000EA8  8CCA               	bsf	202,6,c	;volatile
   534  000EAA                     
   535                           ;main.c: 130:     T2CONbits.T2OUTPS2 = 1;
   536  000EAA  8ACA               	bsf	202,5,c	;volatile
   537  000EAC                     
   538                           ;main.c: 131:     T2CONbits.T2OUTPS1 = 1;
   539  000EAC  88CA               	bsf	202,4,c	;volatile
   540  000EAE                     
   541                           ;main.c: 132:     T2CONbits.T2OUTPS0 = 1;
   542  000EAE  86CA               	bsf	202,3,c	;volatile
   543  000EB0                     
   544                           ;main.c: 133:     T2CONbits.T2CKPS1 = 1;
   545  000EB0  82CA               	bsf	202,1,c	;volatile
   546  000EB2                     
   547                           ;main.c: 134:     PIR1bits.TMR2IF = 0;
   548  000EB2  929E               	bcf	158,1,c	;volatile
   549  000EB4                     
   550                           ;main.c: 135:     PIE1bits.TMR2IE = 1;
   551  000EB4  829D               	bsf	157,1,c	;volatile
   552  000EB6                     
   553                           ;main.c: 136:     IPR1bits.TMR2IP = 1;
   554  000EB6  829F               	bsf	159,1,c	;volatile
   555  000EB8                     
   556                           ;main.c: 137:     RCONbits.IPEN = 0x01;
   557  000EB8  8ED0               	bsf	208,7,c	;volatile
   558  000EBA                     
   559                           ;main.c: 138:     INTCONbits.GIE = 1;
   560  000EBA  8EF2               	bsf	242,7,c	;volatile
   561                           
   562                           ;main.c: 139:     PR2 = 39;
   563  000EBC  0E27               	movlw	39
   564  000EBE  6ECB               	movwf	203,c	;volatile
   565  000EC0                     
   566                           ;main.c: 140:     Delay_us(25);
   567  000EC0  0E00               	movlw	0
   568  000EC2  6E08               	movwf	(Delay_us@us+1)^0,c
   569  000EC4  0E19               	movlw	25
   570  000EC6  6E07               	movwf	Delay_us@us^0,c
   571  000EC8  EC67  F009         	call	_Delay_us	;wreg free
   572  000ECC                     
   573                           ;main.c: 141:     Cmd(0X38);
   574  000ECC  0E00               	movlw	0
   575  000ECE  6E0C               	movwf	(Cmd@Value+1)^0,c
   576  000ED0  0E38               	movlw	56
   577  000ED2  6E0B               	movwf	Cmd@Value^0,c
   578  000ED4  ECB5  F009         	call	_Cmd	;wreg free
   579  000ED8                     
   580                           ;main.c: 142:     Cmd(0X0C);
   581  000ED8  0E00               	movlw	0
   582  000EDA  6E0C               	movwf	(Cmd@Value+1)^0,c
   583  000EDC  0E0C               	movlw	12
   584  000EDE  6E0B               	movwf	Cmd@Value^0,c
   585  000EE0  ECB5  F009         	call	_Cmd	;wreg free
   586  000EE4                     
   587                           ;main.c: 143:     Cmd(0X01);
   588  000EE4  0E00               	movlw	0
   589  000EE6  6E0C               	movwf	(Cmd@Value+1)^0,c
   590  000EE8  0E01               	movlw	1
   591  000EEA  6E0B               	movwf	Cmd@Value^0,c
   592  000EEC  ECB5  F009         	call	_Cmd	;wreg free
   593  000EF0                     
   594                           ;main.c: 144:     Cmd(0X06);
   595  000EF0  0E00               	movlw	0
   596  000EF2  6E0C               	movwf	(Cmd@Value+1)^0,c
   597  000EF4  0E06               	movlw	6
   598  000EF6  6E0B               	movwf	Cmd@Value^0,c
   599  000EF8  ECB5  F009         	call	_Cmd	;wreg free
   600  000EFC                     
   601                           ;main.c: 145:     run = 0;
   602  000EFC  0E00               	movlw	0
   603  000EFE  6E72               	movwf	(_run+1)^0,c
   604  000F00  0E00               	movlw	0
   605  000F02  6E71               	movwf	_run^0,c
   606  000F04                     l2182:
   607                           
   608                           ;main.c: 147:         if(run == 1){
   609  000F04  0471               	decf	_run^0,w,c
   610  000F06  1072               	iorwf	(_run+1)^0,w,c
   611  000F08  A4D8               	btfss	status,2,c
   612  000F0A  EF89  F007         	goto	u1871
   613  000F0E  EF8B  F007         	goto	u1870
   614  000F12                     u1871:
   615  000F12  EF82  F007         	goto	l2182
   616  000F16                     u1870:
   617  000F16                     
   618                           ;main.c: 148:             Delay_us(1000);
   619  000F16  0E03               	movlw	3
   620  000F18  6E08               	movwf	(Delay_us@us+1)^0,c
   621  000F1A  0EE8               	movlw	232
   622  000F1C  6E07               	movwf	Delay_us@us^0,c
   623  000F1E  EC67  F009         	call	_Delay_us	;wreg free
   624  000F22                     
   625                           ;main.c: 149:             char s[10];;main.c: 150:             sprintf(s,"%d.%d",i,times
      +                          );
   626  000F22  0EAE               	movlw	low main@s
   627  000F24  6E5E               	movwf	sprintf@s^0,c
   628  000F26  0E00               	movlw	high main@s
   629  000F28  6E5F               	movwf	(sprintf@s+1)^0,c
   630  000F2A  0E13               	movlw	low STR_1
   631  000F2C  6E60               	movwf	sprintf@fmt^0,c
   632  000F2E  0E06               	movlw	high STR_1
   633  000F30  6E61               	movwf	(sprintf@fmt+1)^0,c
   634  000F32  C082  F062         	movff	_i,?_sprintf+4
   635  000F36  C083  F063         	movff	_i+1,?_sprintf+5
   636  000F3A  C073  F064         	movff	_times,?_sprintf+6
   637  000F3E  C074  F065         	movff	_times+1,?_sprintf+7
   638  000F42  ECE1  F008         	call	_sprintf	;wreg free
   639  000F46                     
   640                           ;main.c: 151:             Send2Lcd(0x80,"------Time:------");
   641  000F46  0E01               	movlw	low STR_2
   642  000F48  6E0D               	movwf	Send2Lcd@Lcd^0,c
   643  000F4A  0E06               	movlw	high STR_2
   644  000F4C  6E0E               	movwf	(Send2Lcd@Lcd+1)^0,c
   645  000F4E  0E80               	movlw	128
   646  000F50  EC7B  F008         	call	_Send2Lcd
   647  000F54                     
   648                           ;main.c: 152:             Send2Lcd(0xC6,s);
   649  000F54  0EAE               	movlw	low main@s
   650  000F56  6E0D               	movwf	Send2Lcd@Lcd^0,c
   651  000F58  0E00               	movlw	high main@s
   652  000F5A  6E0E               	movwf	(Send2Lcd@Lcd+1)^0,c
   653  000F5C  0EC6               	movlw	198
   654  000F5E  EC7B  F008         	call	_Send2Lcd
   655  000F62  EF82  F007         	goto	l2182
   656  000F66  EF07  F000         	goto	start
   657  000F6A                     __end_of_main:
   658                           	opt callstack 0
   659                           
   660 ;; *************** function _sprintf *****************
   661 ;; Defined at:
   662 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
   663 ;; Parameters:    Size  Location     Type
   664 ;;  s               2   93[COMRAM] PTR unsigned char 
   665 ;;		 -> main@s(10), 
   666 ;;  fmt             2   95[COMRAM] PTR const unsigned char 
   667 ;;		 -> STR_1(6), 
   668 ;; Auto vars:     Size  Location     Type
   669 ;;  f               6    4[BANK0 ] struct _IO_FILE
   670 ;;  ap              2    2[BANK0 ] PTR void [1]
   671 ;;		 -> ?_sprintf(2), 
   672 ;;  ret             2    0        int 
   673 ;; Return value:  Size  Location     Type
   674 ;;                  2   93[COMRAM] int 
   675 ;; Registers used:
   676 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   677 ;; Tracked objects:
   678 ;;		On entry : 0/0
   679 ;;		On exit  : 0/0
   680 ;;		Unchanged: 0/0
   681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   682 ;;      Params:         8       0       0       0       0       0       0
   683 ;;      Locals:         0      10       0       0       0       0       0
   684 ;;      Temps:          0       0       0       0       0       0       0
   685 ;;      Totals:         8      10       0       0       0       0       0
   686 ;;Total ram usage:       18 bytes
   687 ;; Hardware stack levels used:    1
   688 ;; Hardware stack levels required when called:   10
   689 ;; This function calls:
   690 ;;		_vfprintf
   691 ;; This function is called by:
   692 ;;		_main
   693 ;; This function uses a non-reentrant model
   694 ;;
   695                           
   696                           	psect	text1
   697  0011C2                     __ptext1:
   698                           	opt callstack 0
   699  0011C2                     _sprintf:
   700                           	opt callstack 20
   701  0011C2  0E62               	movlw	low (?_sprintf+4)
   702  0011C4  0100               	movlb	0	; () banked
   703  0011C6  6FA6               	movwf	sprintf@ap& (0+255),b
   704  0011C8  0E00               	movlw	high (?_sprintf+4)
   705  0011CA  6FA7               	movwf	(sprintf@ap+1)& (0+255),b
   706  0011CC  C05E  F0A8         	movff	sprintf@s,sprintf@f
   707  0011D0  C05F  F0A9         	movff	sprintf@s+1,sprintf@f+1
   708  0011D4                     
   709                           ; BSR set to: 0
   710  0011D4  0E00               	movlw	0
   711  0011D6  6FAB               	movwf	(sprintf@f+3)& (0+255),b
   712  0011D8  0E00               	movlw	0
   713  0011DA  6FAA               	movwf	(sprintf@f+2)& (0+255),b
   714  0011DC                     
   715                           ; BSR set to: 0
   716  0011DC  0E00               	movlw	0
   717  0011DE  6FAD               	movwf	(sprintf@f+5)& (0+255),b
   718  0011E0  0E00               	movlw	0
   719  0011E2  6FAC               	movwf	(sprintf@f+4)& (0+255),b
   720  0011E4                     
   721                           ; BSR set to: 0
   722  0011E4  0EA8               	movlw	low sprintf@f
   723  0011E6  6E56               	movwf	vfprintf@fp^0,c
   724  0011E8  0E00               	movlw	high sprintf@f
   725  0011EA  6E57               	movwf	(vfprintf@fp+1)^0,c
   726  0011EC  C060  F058         	movff	sprintf@fmt,vfprintf@fmt
   727  0011F0  C061  F059         	movff	sprintf@fmt+1,vfprintf@fmt+1
   728  0011F4  0EA6               	movlw	low sprintf@ap
   729  0011F6  6E5A               	movwf	vfprintf@ap^0,c
   730  0011F8  0E00               	movlw	high sprintf@ap
   731  0011FA  6E5B               	movwf	(vfprintf@ap+1)^0,c
   732  0011FC  ECB0  F008         	call	_vfprintf	;wreg free
   733  001200  0100               	movlb	0	; () banked
   734  001202  51AA               	movf	(sprintf@f+2)& (0+255),w,b
   735  001204  245E               	addwf	sprintf@s^0,w,c
   736  001206  6ED9               	movwf	fsr2l,c
   737  001208  51AB               	movf	(sprintf@f+3)& (0+255),w,b
   738  00120A  205F               	addwfc	(sprintf@s+1)^0,w,c
   739  00120C  6EDA               	movwf	fsr2h,c
   740  00120E  0E00               	movlw	0
   741  001210  6EDF               	movwf	indf2,c
   742  001212                     
   743                           ; BSR set to: 0
   744  001212  0012               	return		;funcret
   745  001214                     __end_of_sprintf:
   746                           	opt callstack 0
   747                           
   748 ;; *************** function _vfprintf *****************
   749 ;; Defined at:
   750 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
   751 ;; Parameters:    Size  Location     Type
   752 ;;  fp              2   85[COMRAM] PTR struct _IO_FILE
   753 ;;		 -> sprintf@f(6), 
   754 ;;  fmt             2   87[COMRAM] PTR const unsigned char 
   755 ;;		 -> STR_1(6), 
   756 ;;  ap              2   89[COMRAM] PTR PTR void 
   757 ;;		 -> sprintf@ap(2), 
   758 ;; Auto vars:     Size  Location     Type
   759 ;;  cfmt            2   91[COMRAM] PTR unsigned char 
   760 ;;		 -> STR_1(6), 
   761 ;; Return value:  Size  Location     Type
   762 ;;                  2   85[COMRAM] int 
   763 ;; Registers used:
   764 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   765 ;; Tracked objects:
   766 ;;		On entry : 0/0
   767 ;;		On exit  : 0/0
   768 ;;		Unchanged: 0/0
   769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   770 ;;      Params:         6       0       0       0       0       0       0
   771 ;;      Locals:         2       0       0       0       0       0       0
   772 ;;      Temps:          0       0       0       0       0       0       0
   773 ;;      Totals:         8       0       0       0       0       0       0
   774 ;;Total ram usage:        8 bytes
   775 ;; Hardware stack levels used:    1
   776 ;; Hardware stack levels required when called:    9
   777 ;; This function calls:
   778 ;;		_vfpfcnvrt
   779 ;; This function is called by:
   780 ;;		_sprintf
   781 ;; This function uses a non-reentrant model
   782 ;;
   783                           
   784                           	psect	text2
   785  001160                     __ptext2:
   786                           	opt callstack 0
   787  001160                     _vfprintf:
   788                           	opt callstack 20
   789  001160                     
   790                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
   791  001160  C058  F05C         	movff	vfprintf@fmt,vfprintf@cfmt
   792  001164  C059  F05D         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
   793  001168                     
   794                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
   795  001168  0E00               	movlw	0
   796  00116A  0100               	movlb	0	; () banked
   797  00116C  6F81               	movwf	(_nout+1)& (0+255),b
   798  00116E  0E00               	movlw	0
   799  001170  6F80               	movwf	_nout& (0+255),b
   800                           
   801                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
   802  001172  EFCE  F008         	goto	l2120
   803  001176                     l2118:
   804                           
   805                           ; BSR set to: 0
   806                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
   807  001176  C056  F046         	movff	vfprintf@fp,vfpfcnvrt@fp
   808  00117A  C057  F047         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
   809  00117E  0E5C               	movlw	low vfprintf@cfmt
   810  001180  6E48               	movwf	vfpfcnvrt@fmt^0,c
   811  001182  0E00               	movlw	high vfprintf@cfmt
   812  001184  6E49               	movwf	(vfpfcnvrt@fmt+1)^0,c
   813  001186  C05A  F04A         	movff	vfprintf@ap,vfpfcnvrt@ap
   814  00118A  C05B  F04B         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
   815  00118E  EC7C  F004         	call	_vfpfcnvrt	;wreg free
   816  001192  5046               	movf	?_vfpfcnvrt^0,w,c
   817  001194  0100               	movlb	0	; () banked
   818  001196  2780               	addwf	_nout& (0+255),f,b
   819  001198  5047               	movf	(?_vfpfcnvrt+1)^0,w,c
   820  00119A  2381               	addwfc	(_nout+1)& (0+255),f,b
   821  00119C                     l2120:
   822                           
   823                           ; BSR set to: 0
   824                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
   825  00119C  C05C  FFF6         	movff	vfprintf@cfmt,tblptrl
   826  0011A0  C05D  FFF7         	movff	vfprintf@cfmt+1,tblptrh
   827  0011A4                     	if	0	;tblptru may be non-zero
   828  0011A4                     	endif
   829  0011A4                     	if	0	;tblptru may be non-zero
   830  0011A4                     	endif
   831  0011A4  0008               	tblrd		*
   832  0011A6  50F5               	movf	tablat,w,c
   833  0011A8  0900               	iorlw	0
   834  0011AA  A4D8               	btfss	status,2,c
   835  0011AC  EFDA  F008         	goto	u1861
   836  0011B0  EFDC  F008         	goto	u1860
   837  0011B4                     u1861:
   838  0011B4  EFBB  F008         	goto	l2118
   839  0011B8                     u1860:
   840  0011B8                     
   841                           ; BSR set to: 0
   842                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
   843  0011B8  C080  F056         	movff	_nout,?_vfprintf
   844  0011BC  C081  F057         	movff	_nout+1,?_vfprintf+1
   845  0011C0                     
   846                           ; BSR set to: 0
   847  0011C0  0012               	return		;funcret
   848  0011C2                     __end_of_vfprintf:
   849                           	opt callstack 0
   850                           
   851 ;; *************** function _vfpfcnvrt *****************
   852 ;; Defined at:
   853 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
   854 ;; Parameters:    Size  Location     Type
   855 ;;  fp              2   69[COMRAM] PTR struct _IO_FILE
   856 ;;		 -> sprintf@f(6), 
   857 ;;  fmt             2   71[COMRAM] PTR PTR unsigned char 
   858 ;;		 -> vfprintf@cfmt(2), 
   859 ;;  ap              2   73[COMRAM] PTR PTR void 
   860 ;;		 -> sprintf@ap(2), 
   861 ;; Auto vars:     Size  Location     Type
   862 ;;  ll              8   77[COMRAM] long long 
   863 ;;  llu             8    0        unsigned long long 
   864 ;;  f               4    0        unsigned long long 
   865 ;;  vp              3    0        PTR void 
   866 ;;  ct              3    0        unsigned char [3]
   867 ;;  cp              3    0        PTR unsigned char 
   868 ;;  i               2    0        int 
   869 ;;  done            2    0        int 
   870 ;;  c               1    0        unsigned char 
   871 ;; Return value:  Size  Location     Type
   872 ;;                  2   69[COMRAM] int 
   873 ;; Registers used:
   874 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   875 ;; Tracked objects:
   876 ;;		On entry : 0/0
   877 ;;		On exit  : 0/0
   878 ;;		Unchanged: 0/0
   879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   880 ;;      Params:         6       0       0       0       0       0       0
   881 ;;      Locals:         8       0       0       0       0       0       0
   882 ;;      Temps:          2       0       0       0       0       0       0
   883 ;;      Totals:        16       0       0       0       0       0       0
   884 ;;Total ram usage:       16 bytes
   885 ;; Hardware stack levels used:    1
   886 ;; Hardware stack levels required when called:    8
   887 ;; This function calls:
   888 ;;		_dtoa
   889 ;;		_fputc
   890 ;; This function is called by:
   891 ;;		_vfprintf
   892 ;; This function uses a non-reentrant model
   893 ;;
   894                           
   895                           	psect	text3
   896  0008F8                     __ptext3:
   897                           	opt callstack 0
   898  0008F8                     _vfpfcnvrt:
   899                           	opt callstack 20
   900  0008F8                     
   901                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
   902  0008F8  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   903  0008FC  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   904  000900  CFDE FFF6          	movff	postinc2,tblptrl
   905  000904  CFDD FFF7          	movff	postdec2,tblptrh
   906  000908                     	if	0	;tblptru may be non-zero
   907  000908                     	endif
   908  000908                     	if	0	;tblptru may be non-zero
   909  000908                     	endif
   910  000908  0008               	tblrd		*
   911  00090A  50F5               	movf	tablat,w,c
   912  00090C  0A25               	xorlw	37
   913  00090E  A4D8               	btfss	status,2,c
   914  000910  EF8C  F004         	goto	u1821
   915  000914  EF8E  F004         	goto	u1820
   916  000918                     u1821:
   917  000918  EF39  F005         	goto	l2106
   918  00091C                     u1820:
   919  00091C                     
   920                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
   921  00091C  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   922  000920  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   923  000924  2ADE               	incf	postinc2,f,c
   924  000926  0E00               	movlw	0
   925  000928  22DD               	addwfc	postdec2,f,c
   926  00092A                     
   927                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
   928  00092A  0E00               	movlw	0
   929  00092C  6E6C               	movwf	(_width+1)^0,c
   930  00092E  0E00               	movlw	0
   931  000930  6E6B               	movwf	_width^0,c
   932  000932  C06B  F06F         	movff	_width,_flags
   933  000936  C06C  F070         	movff	_width+1,_flags+1
   934  00093A                     
   935                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
   936  00093A  686D               	setf	_prec^0,c
   937  00093C  686E               	setf	(_prec+1)^0,c
   938  00093E                     
   939                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
   940  00093E  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   941  000942  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   942  000946  CFDE FFF6          	movff	postinc2,tblptrl
   943  00094A  CFDD FFF7          	movff	postdec2,tblptrh
   944  00094E                     	if	0	;tblptru may be non-zero
   945  00094E                     	endif
   946  00094E                     	if	0	;tblptru may be non-zero
   947  00094E                     	endif
   948  00094E  0008               	tblrd		*
   949  000950  50F5               	movf	tablat,w,c
   950  000952  0A64               	xorlw	100
   951  000954  B4D8               	btfsc	status,2,c
   952  000956  EFAF  F004         	goto	u1831
   953  00095A  EFB1  F004         	goto	u1830
   954  00095E                     u1831:
   955  00095E  EFC3  F004         	goto	l2084
   956  000962                     u1830:
   957  000962  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   958  000966  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   959  00096A  CFDE FFF6          	movff	postinc2,tblptrl
   960  00096E  CFDD FFF7          	movff	postdec2,tblptrh
   961  000972                     	if	0	;tblptru may be non-zero
   962  000972                     	endif
   963  000972                     	if	0	;tblptru may be non-zero
   964  000972                     	endif
   965  000972  0008               	tblrd		*
   966  000974  50F5               	movf	tablat,w,c
   967  000976  0A69               	xorlw	105
   968  000978  A4D8               	btfss	status,2,c
   969  00097A  EFC1  F004         	goto	u1841
   970  00097E  EFC3  F004         	goto	u1840
   971  000982                     u1841:
   972  000982  EF03  F005         	goto	l2090
   973  000986                     u1840:
   974  000986                     l2084:
   975                           
   976                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
   977  000986  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   978  00098A  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   979  00098E  2ADE               	incf	postinc2,f,c
   980  000990  0E00               	movlw	0
   981  000992  22DD               	addwfc	postdec2,f,c
   982                           
   983                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
   984  000994  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
   985  000998  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
   986  00099C  CFDF F04C          	movff	indf2,??_vfpfcnvrt
   987  0009A0  0E02               	movlw	2
   988  0009A2  26DE               	addwf	postinc2,f,c
   989  0009A4  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
   990  0009A8  0E00               	movlw	0
   991  0009AA  22DD               	addwfc	postdec2,f,c
   992  0009AC  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
   993  0009B0  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
   994  0009B4  CFDE F04E          	movff	postinc2,vfpfcnvrt@ll
   995  0009B8  CFDD F04F          	movff	postdec2,vfpfcnvrt@ll+1
   996  0009BC  0E00               	movlw	0
   997  0009BE  BE4F               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
   998  0009C0  0EFF               	movlw	-1
   999  0009C2  6E50               	movwf	(vfpfcnvrt@ll+2)^0,c
  1000  0009C4  6E51               	movwf	(vfpfcnvrt@ll+3)^0,c
  1001  0009C6  6E52               	movwf	(vfpfcnvrt@ll+4)^0,c
  1002  0009C8  6E53               	movwf	(vfpfcnvrt@ll+5)^0,c
  1003  0009CA  6E54               	movwf	(vfpfcnvrt@ll+6)^0,c
  1004  0009CC  6E55               	movwf	(vfpfcnvrt@ll+7)^0,c
  1005  0009CE                     
  1006                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  1007  0009CE  C046  F022         	movff	vfpfcnvrt@fp,dtoa@fp
  1008  0009D2  C047  F023         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1009  0009D6  C04E  F024         	movff	vfpfcnvrt@ll,dtoa@d
  1010  0009DA  C04F  F025         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1011  0009DE  C050  F026         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1012  0009E2  C051  F027         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1013  0009E6  C052  F028         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1014  0009EA  C053  F029         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1015  0009EE  C054  F02A         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1016  0009F2  C055  F02B         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1017  0009F6  EC0D  F003         	call	_dtoa	;wreg free
  1018  0009FA  C022  F046         	movff	?_dtoa,?_vfpfcnvrt
  1019  0009FE  C023  F047         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1020  000A02  EF54  F005         	goto	l216
  1021  000A06                     l2090:
  1022                           
  1023                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  1024  000A06  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1025  000A0A  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1026  000A0E  CFDE FFF6          	movff	postinc2,tblptrl
  1027  000A12  CFDD FFF7          	movff	postdec2,tblptrh
  1028  000A16                     	if	0	;tblptru may be non-zero
  1029  000A16                     	endif
  1030  000A16                     	if	0	;tblptru may be non-zero
  1031  000A16                     	endif
  1032  000A16  0008               	tblrd		*
  1033  000A18  50F5               	movf	tablat,w,c
  1034  000A1A  0A25               	xorlw	37
  1035  000A1C  A4D8               	btfss	status,2,c
  1036  000A1E  EF13  F005         	goto	u1851
  1037  000A22  EF15  F005         	goto	u1850
  1038  000A26                     u1851:
  1039  000A26  EF2C  F005         	goto	l2100
  1040  000A2A                     u1850:
  1041  000A2A                     
  1042                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  1043  000A2A  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1044  000A2E  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1045  000A32  2ADE               	incf	postinc2,f,c
  1046  000A34  0E00               	movlw	0
  1047  000A36  22DD               	addwfc	postdec2,f,c
  1048  000A38                     
  1049                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  1050  000A38  0E00               	movlw	0
  1051  000A3A  6E08               	movwf	(fputc@c+1)^0,c
  1052  000A3C  0E25               	movlw	37
  1053  000A3E  6E07               	movwf	fputc@c^0,c
  1054  000A40  C046  F009         	movff	vfpfcnvrt@fp,fputc@fp
  1055  000A44  C047  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1056  000A48  ECB5  F007         	call	_fputc	;wreg free
  1057  000A4C                     l2096:
  1058                           
  1059                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  1060  000A4C  0E00               	movlw	0
  1061  000A4E  6E47               	movwf	(?_vfpfcnvrt+1)^0,c
  1062  000A50  0E01               	movlw	1
  1063  000A52  6E46               	movwf	?_vfpfcnvrt^0,c
  1064  000A54  EF54  F005         	goto	l216
  1065  000A58                     l2100:
  1066                           
  1067                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  1068  000A58  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1069  000A5C  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1070  000A60  2ADE               	incf	postinc2,f,c
  1071  000A62  0E00               	movlw	0
  1072  000A64  22DD               	addwfc	postdec2,f,c
  1073  000A66                     
  1074                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  1075  000A66  0E00               	movlw	0
  1076  000A68  6E47               	movwf	(?_vfpfcnvrt+1)^0,c
  1077  000A6A  0E00               	movlw	0
  1078  000A6C  6E46               	movwf	?_vfpfcnvrt^0,c
  1079  000A6E  EF54  F005         	goto	l216
  1080  000A72                     l2106:
  1081                           
  1082                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  1083  000A72  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1084  000A76  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1085  000A7A  CFDE FFF6          	movff	postinc2,tblptrl
  1086  000A7E  CFDD FFF7          	movff	postdec2,tblptrh
  1087  000A82                     	if	0	;tblptru may be non-zero
  1088  000A82                     	endif
  1089  000A82                     	if	0	;tblptru may be non-zero
  1090  000A82                     	endif
  1091  000A82  0008               	tblrd		*
  1092  000A84  50F5               	movf	tablat,w,c
  1093  000A86  6E07               	movwf	fputc@c^0,c
  1094  000A88  6A08               	clrf	(fputc@c+1)^0,c
  1095  000A8A  C046  F009         	movff	vfpfcnvrt@fp,fputc@fp
  1096  000A8E  C047  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1097  000A92  ECB5  F007         	call	_fputc	;wreg free
  1098  000A96                     
  1099                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  1100  000A96  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1101  000A9A  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1102  000A9E  2ADE               	incf	postinc2,f,c
  1103  000AA0  0E00               	movlw	0
  1104  000AA2  22DD               	addwfc	postdec2,f,c
  1105  000AA4  EF26  F005         	goto	l2096
  1106  000AA8                     l216:
  1107  000AA8  0012               	return		;funcret
  1108  000AAA                     __end_of_vfpfcnvrt:
  1109                           	opt callstack 0
  1110                           
  1111 ;; *************** function _dtoa *****************
  1112 ;; Defined at:
  1113 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1114 ;; Parameters:    Size  Location     Type
  1115 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
  1116 ;;		 -> sprintf@f(6), 
  1117 ;;  d               8   35[COMRAM] long long 
  1118 ;; Auto vars:     Size  Location     Type
  1119 ;;  n               8   59[COMRAM] long long 
  1120 ;;  i               2   67[COMRAM] int 
  1121 ;;  s               2   57[COMRAM] int 
  1122 ;;  w               2   55[COMRAM] int 
  1123 ;;  p               2   53[COMRAM] int 
  1124 ;; Return value:  Size  Location     Type
  1125 ;;                  2   33[COMRAM] int 
  1126 ;; Registers used:
  1127 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1128 ;; Tracked objects:
  1129 ;;		On entry : 0/0
  1130 ;;		On exit  : 0/0
  1131 ;;		Unchanged: 0/0
  1132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1133 ;;      Params:        10       0       0       0       0       0       0
  1134 ;;      Locals:        18       0       0       0       0       0       0
  1135 ;;      Temps:          8       0       0       0       0       0       0
  1136 ;;      Totals:        36       0       0       0       0       0       0
  1137 ;;Total ram usage:       36 bytes
  1138 ;; Hardware stack levels used:    1
  1139 ;; Hardware stack levels required when called:    7
  1140 ;; This function calls:
  1141 ;;		___aodiv
  1142 ;;		___aomod
  1143 ;;		_abs
  1144 ;;		_pad
  1145 ;; This function is called by:
  1146 ;;		_vfpfcnvrt
  1147 ;; This function uses a non-reentrant model
  1148 ;;
  1149                           
  1150                           	psect	text4
  1151  00061A                     __ptext4:
  1152                           	opt callstack 0
  1153  00061A                     _dtoa:
  1154                           	opt callstack 20
  1155  00061A                     
  1156                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
  1157  00061A  C024  F03C         	movff	dtoa@d,dtoa@n
  1158  00061E  C025  F03D         	movff	dtoa@d+1,dtoa@n+1
  1159  000622  C026  F03E         	movff	dtoa@d+2,dtoa@n+2
  1160  000626  C027  F03F         	movff	dtoa@d+3,dtoa@n+3
  1161  00062A  C028  F040         	movff	dtoa@d+4,dtoa@n+4
  1162  00062E  C029  F041         	movff	dtoa@d+5,dtoa@n+5
  1163  000632  C02A  F042         	movff	dtoa@d+6,dtoa@n+6
  1164  000636  C02B  F043         	movff	dtoa@d+7,dtoa@n+7
  1165  00063A                     
  1166                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  1167  00063A  BE43               	btfsc	(dtoa@n+7)^0,7,c
  1168  00063C  EF22  F003         	goto	u1671
  1169  000640  EF25  F003         	goto	u1670
  1170  000644                     u1671:
  1171  000644  0E01               	movlw	1
  1172  000646  EF26  F003         	goto	u1680
  1173  00064A                     u1670:
  1174  00064A  0E00               	movlw	0
  1175  00064C                     u1680:
  1176  00064C  6E3A               	movwf	dtoa@s^0,c
  1177  00064E  6A3B               	clrf	(dtoa@s+1)^0,c
  1178                           
  1179                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  1180  000650  503A               	movf	dtoa@s^0,w,c
  1181  000652  103B               	iorwf	(dtoa@s+1)^0,w,c
  1182  000654  B4D8               	btfsc	status,2,c
  1183  000656  EF2F  F003         	goto	u1691
  1184  00065A  EF31  F003         	goto	u1690
  1185  00065E                     u1691:
  1186  00065E  EF41  F003         	goto	l2016
  1187  000662                     u1690:
  1188  000662                     
  1189                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  1190  000662  1E43               	comf	(dtoa@n+7)^0,f,c
  1191  000664  1E42               	comf	(dtoa@n+6)^0,f,c
  1192  000666  1E41               	comf	(dtoa@n+5)^0,f,c
  1193  000668  1E40               	comf	(dtoa@n+4)^0,f,c
  1194  00066A  1E3F               	comf	(dtoa@n+3)^0,f,c
  1195  00066C  1E3E               	comf	(dtoa@n+2)^0,f,c
  1196  00066E  1E3D               	comf	(dtoa@n+1)^0,f,c
  1197  000670  6C3C               	negf	dtoa@n^0,c
  1198  000672  0E00               	movlw	0
  1199  000674  223D               	addwfc	(dtoa@n+1)^0,f,c
  1200  000676  223E               	addwfc	(dtoa@n+2)^0,f,c
  1201  000678  223F               	addwfc	(dtoa@n+3)^0,f,c
  1202  00067A  2240               	addwfc	(dtoa@n+4)^0,f,c
  1203  00067C  2241               	addwfc	(dtoa@n+5)^0,f,c
  1204  00067E  2242               	addwfc	(dtoa@n+6)^0,f,c
  1205  000680  2243               	addwfc	(dtoa@n+7)^0,f,c
  1206  000682                     l2016:
  1207                           
  1208                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  1209  000682  BE6E               	btfsc	(_prec+1)^0,7,c
  1210  000684  EF46  F003         	goto	u1701
  1211  000688  EF48  F003         	goto	u1700
  1212  00068C                     u1701:
  1213  00068C  EF49  F003         	goto	l2020
  1214  000690                     u1700:
  1215  000690                     
  1216                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  1217  000690  926F               	bcf	_flags^0,1,c
  1218  000692                     l2020:
  1219                           
  1220                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  1221  000692  BE6E               	btfsc	(_prec+1)^0,7,c
  1222  000694  EF56  F003         	goto	u1710
  1223  000698  506E               	movf	(_prec+1)^0,w,c
  1224  00069A  E106               	bnz	u1711
  1225  00069C  046D               	decf	_prec^0,w,c
  1226  00069E  B0D8               	btfsc	status,0,c
  1227  0006A0  EF54  F003         	goto	u1711
  1228  0006A4  EF56  F003         	goto	u1710
  1229  0006A8                     u1711:
  1230  0006A8  EF5C  F003         	goto	l189
  1231  0006AC                     u1710:
  1232  0006AC  0E00               	movlw	0
  1233  0006AE  6E37               	movwf	(dtoa@p+1)^0,c
  1234  0006B0  0E01               	movlw	1
  1235  0006B2  6E36               	movwf	dtoa@p^0,c
  1236  0006B4  EF60  F003         	goto	l191
  1237  0006B8                     l189:
  1238  0006B8  C06D  F036         	movff	_prec,dtoa@p
  1239  0006BC  C06E  F037         	movff	_prec+1,dtoa@p+1
  1240  0006C0                     l191:
  1241                           
  1242                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  1243  0006C0  C06B  F038         	movff	_width,dtoa@w
  1244  0006C4  C06C  F039         	movff	_width+1,dtoa@w+1
  1245  0006C8                     
  1246                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  1247  0006C8  503A               	movf	dtoa@s^0,w,c
  1248  0006CA  103B               	iorwf	(dtoa@s+1)^0,w,c
  1249  0006CC  A4D8               	btfss	status,2,c
  1250  0006CE  EF6B  F003         	goto	u1721
  1251  0006D2  EF6D  F003         	goto	u1720
  1252  0006D6                     u1721:
  1253  0006D6  EF74  F003         	goto	l2028
  1254  0006DA                     u1720:
  1255  0006DA  A46F               	btfss	_flags^0,2,c
  1256  0006DC  EF72  F003         	goto	u1731
  1257  0006E0  EF74  F003         	goto	u1730
  1258  0006E4                     u1731:
  1259  0006E4  EF77  F003         	goto	l2030
  1260  0006E8                     u1730:
  1261  0006E8                     l2028:
  1262                           
  1263                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  1264  0006E8  0638               	decf	dtoa@w^0,f,c
  1265  0006EA  A0D8               	btfss	status,0,c
  1266  0006EC  0639               	decf	(dtoa@w+1)^0,f,c
  1267  0006EE                     l2030:
  1268                           
  1269                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  1270  0006EE  0E00               	movlw	0
  1271  0006F0  6E45               	movwf	(dtoa@i+1)^0,c
  1272  0006F2  0E1F               	movlw	31
  1273  0006F4  6E44               	movwf	dtoa@i^0,c
  1274  0006F6                     
  1275                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  1276  0006F6  0E00               	movlw	0
  1277  0006F8  0100               	movlb	0	; () banked
  1278  0006FA  6FA3               	movwf	(_dbuf+31)& (0+255),b
  1279                           
  1280                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1281  0006FC  EFFC  F003         	goto	l2044
  1282  000700                     l2034:
  1283                           
  1284                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  1285  000700  0644               	decf	dtoa@i^0,f,c
  1286  000702  A0D8               	btfss	status,0,c
  1287  000704  0645               	decf	(dtoa@i+1)^0,f,c
  1288  000706                     
  1289                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  1290  000706  0E84               	movlw	low _dbuf
  1291  000708  2444               	addwf	dtoa@i^0,w,c
  1292  00070A  6ED9               	movwf	fsr2l,c
  1293  00070C  0E00               	movlw	high _dbuf
  1294  00070E  2045               	addwfc	(dtoa@i+1)^0,w,c
  1295  000710  6EDA               	movwf	fsr2h,c
  1296  000712  C03C  F007         	movff	dtoa@n,___aomod@dividend
  1297  000716  C03D  F008         	movff	dtoa@n+1,___aomod@dividend+1
  1298  00071A  C03E  F009         	movff	dtoa@n+2,___aomod@dividend+2
  1299  00071E  C03F  F00A         	movff	dtoa@n+3,___aomod@dividend+3
  1300  000722  C040  F00B         	movff	dtoa@n+4,___aomod@dividend+4
  1301  000726  C041  F00C         	movff	dtoa@n+5,___aomod@dividend+5
  1302  00072A  C042  F00D         	movff	dtoa@n+6,___aomod@dividend+6
  1303  00072E  C043  F00E         	movff	dtoa@n+7,___aomod@dividend+7
  1304  000732  0E0A               	movlw	10
  1305  000734  6E0F               	movwf	___aomod@divisor^0,c
  1306  000736  0E00               	movlw	0
  1307  000738  6E10               	movwf	(___aomod@divisor+1)^0,c
  1308  00073A  0E00               	movlw	0
  1309  00073C  6E11               	movwf	(___aomod@divisor+2)^0,c
  1310  00073E  0E00               	movlw	0
  1311  000740  6E12               	movwf	(___aomod@divisor+3)^0,c
  1312  000742  0E00               	movlw	0
  1313  000744  6E13               	movwf	(___aomod@divisor+4)^0,c
  1314  000746  0E00               	movlw	0
  1315  000748  6E14               	movwf	(___aomod@divisor+5)^0,c
  1316  00074A  0E00               	movlw	0
  1317  00074C  6E15               	movwf	(___aomod@divisor+6)^0,c
  1318  00074E  0E00               	movlw	0
  1319  000750  6E16               	movwf	(___aomod@divisor+7)^0,c
  1320  000752  EC19  F006         	call	___aomod	;wreg free
  1321  000756  C007  F02C         	movff	?___aomod,??_dtoa
  1322  00075A  C008  F02D         	movff	?___aomod+1,??_dtoa+1
  1323  00075E  C009  F02E         	movff	?___aomod+2,??_dtoa+2
  1324  000762  C00A  F02F         	movff	?___aomod+3,??_dtoa+3
  1325  000766  C00B  F030         	movff	?___aomod+4,??_dtoa+4
  1326  00076A  C00C  F031         	movff	?___aomod+5,??_dtoa+5
  1327  00076E  C00D  F032         	movff	?___aomod+6,??_dtoa+6
  1328  000772  C00E  F033         	movff	?___aomod+7,??_dtoa+7
  1329  000776  C02C  F019         	movff	??_dtoa,abs@a
  1330  00077A  C02E  F01A         	movff	??_dtoa+2,abs@a+1
  1331  00077E  EC2C  F009         	call	_abs	;wreg free
  1332  000782  5019               	movf	?_abs^0,w,c
  1333  000784  0F30               	addlw	48
  1334  000786  6EDF               	movwf	indf2,c
  1335  000788                     
  1336                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  1337  000788  0636               	decf	dtoa@p^0,f,c
  1338  00078A  A0D8               	btfss	status,0,c
  1339  00078C  0637               	decf	(dtoa@p+1)^0,f,c
  1340  00078E                     
  1341                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  1342  00078E  0638               	decf	dtoa@w^0,f,c
  1343  000790  A0D8               	btfss	status,0,c
  1344  000792  0639               	decf	(dtoa@w+1)^0,f,c
  1345  000794                     
  1346                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  1347  000794  C03C  F007         	movff	dtoa@n,___aodiv@dividend
  1348  000798  C03D  F008         	movff	dtoa@n+1,___aodiv@dividend+1
  1349  00079C  C03E  F009         	movff	dtoa@n+2,___aodiv@dividend+2
  1350  0007A0  C03F  F00A         	movff	dtoa@n+3,___aodiv@dividend+3
  1351  0007A4  C040  F00B         	movff	dtoa@n+4,___aodiv@dividend+4
  1352  0007A8  C041  F00C         	movff	dtoa@n+5,___aodiv@dividend+5
  1353  0007AC  C042  F00D         	movff	dtoa@n+6,___aodiv@dividend+6
  1354  0007B0  C043  F00E         	movff	dtoa@n+7,___aodiv@dividend+7
  1355  0007B4  0E0A               	movlw	10
  1356  0007B6  6E0F               	movwf	___aodiv@divisor^0,c
  1357  0007B8  0E00               	movlw	0
  1358  0007BA  6E10               	movwf	(___aodiv@divisor+1)^0,c
  1359  0007BC  0E00               	movlw	0
  1360  0007BE  6E11               	movwf	(___aodiv@divisor+2)^0,c
  1361  0007C0  0E00               	movlw	0
  1362  0007C2  6E12               	movwf	(___aodiv@divisor+3)^0,c
  1363  0007C4  0E00               	movlw	0
  1364  0007C6  6E13               	movwf	(___aodiv@divisor+4)^0,c
  1365  0007C8  0E00               	movlw	0
  1366  0007CA  6E14               	movwf	(___aodiv@divisor+5)^0,c
  1367  0007CC  0E00               	movlw	0
  1368  0007CE  6E15               	movwf	(___aodiv@divisor+6)^0,c
  1369  0007D0  0E00               	movlw	0
  1370  0007D2  6E16               	movwf	(___aodiv@divisor+7)^0,c
  1371  0007D4  EC55  F005         	call	___aodiv	;wreg free
  1372  0007D8  C007  F03C         	movff	?___aodiv,dtoa@n
  1373  0007DC  C008  F03D         	movff	?___aodiv+1,dtoa@n+1
  1374  0007E0  C009  F03E         	movff	?___aodiv+2,dtoa@n+2
  1375  0007E4  C00A  F03F         	movff	?___aodiv+3,dtoa@n+3
  1376  0007E8  C00B  F040         	movff	?___aodiv+4,dtoa@n+4
  1377  0007EC  C00C  F041         	movff	?___aodiv+5,dtoa@n+5
  1378  0007F0  C00D  F042         	movff	?___aodiv+6,dtoa@n+6
  1379  0007F4  C00E  F043         	movff	?___aodiv+7,dtoa@n+7
  1380  0007F8                     l2044:
  1381                           
  1382                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1383  0007F8  BE45               	btfsc	(dtoa@i+1)^0,7,c
  1384  0007FA  EF07  F004         	goto	u1741
  1385  0007FE  5045               	movf	(dtoa@i+1)^0,w,c
  1386  000800  E108               	bnz	u1740
  1387  000802  0444               	decf	dtoa@i^0,w,c
  1388  000804  A0D8               	btfss	status,0,c
  1389  000806  EF07  F004         	goto	u1741
  1390  00080A  EF09  F004         	goto	u1740
  1391  00080E                     u1741:
  1392  00080E  EF39  F004         	goto	l2054
  1393  000812                     u1740:
  1394  000812  503C               	movf	dtoa@n^0,w,c
  1395  000814  103D               	iorwf	(dtoa@n+1)^0,w,c
  1396  000816  103E               	iorwf	(dtoa@n+2)^0,w,c
  1397  000818  103F               	iorwf	(dtoa@n+3)^0,w,c
  1398  00081A  1040               	iorwf	(dtoa@n+4)^0,w,c
  1399  00081C  1041               	iorwf	(dtoa@n+5)^0,w,c
  1400  00081E  1042               	iorwf	(dtoa@n+6)^0,w,c
  1401  000820  1043               	iorwf	(dtoa@n+7)^0,w,c
  1402  000822  A4D8               	btfss	status,2,c
  1403  000824  EF16  F004         	goto	u1751
  1404  000828  EF18  F004         	goto	u1750
  1405  00082C                     u1751:
  1406  00082C  EF80  F003         	goto	l2034
  1407  000830                     u1750:
  1408  000830  BE37               	btfsc	(dtoa@p+1)^0,7,c
  1409  000832  EF25  F004         	goto	u1760
  1410  000836  5037               	movf	(dtoa@p+1)^0,w,c
  1411  000838  E106               	bnz	u1761
  1412  00083A  0436               	decf	dtoa@p^0,w,c
  1413  00083C  B0D8               	btfsc	status,0,c
  1414  00083E  EF23  F004         	goto	u1761
  1415  000842  EF25  F004         	goto	u1760
  1416  000846                     u1761:
  1417  000846  EF80  F003         	goto	l2034
  1418  00084A                     u1760:
  1419  00084A  BE39               	btfsc	(dtoa@w+1)^0,7,c
  1420  00084C  EF30  F004         	goto	u1771
  1421  000850  5039               	movf	(dtoa@w+1)^0,w,c
  1422  000852  E108               	bnz	u1770
  1423  000854  0438               	decf	dtoa@w^0,w,c
  1424  000856  A0D8               	btfss	status,0,c
  1425  000858  EF30  F004         	goto	u1771
  1426  00085C  EF32  F004         	goto	u1770
  1427  000860                     u1771:
  1428  000860  EF39  F004         	goto	l2054
  1429  000864                     u1770:
  1430  000864  B26F               	btfsc	_flags^0,1,c
  1431  000866  EF37  F004         	goto	u1781
  1432  00086A  EF39  F004         	goto	u1780
  1433  00086E                     u1781:
  1434  00086E  EF80  F003         	goto	l2034
  1435  000872                     u1780:
  1436  000872                     l2054:
  1437                           
  1438                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  1439  000872  503A               	movf	dtoa@s^0,w,c
  1440  000874  103B               	iorwf	(dtoa@s+1)^0,w,c
  1441  000876  A4D8               	btfss	status,2,c
  1442  000878  EF40  F004         	goto	u1791
  1443  00087C  EF42  F004         	goto	u1790
  1444  000880                     u1791:
  1445  000880  EF49  F004         	goto	l2058
  1446  000884                     u1790:
  1447  000884  A46F               	btfss	_flags^0,2,c
  1448  000886  EF47  F004         	goto	u1801
  1449  00088A  EF49  F004         	goto	u1800
  1450  00088E                     u1801:
  1451  00088E  EF67  F004         	goto	l2068
  1452  000892                     u1800:
  1453  000892                     l2058:
  1454                           
  1455                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  1456  000892  0644               	decf	dtoa@i^0,f,c
  1457  000894  A0D8               	btfss	status,0,c
  1458  000896  0645               	decf	(dtoa@i+1)^0,f,c
  1459  000898                     
  1460                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  1461  000898  503A               	movf	dtoa@s^0,w,c
  1462  00089A  103B               	iorwf	(dtoa@s+1)^0,w,c
  1463  00089C  A4D8               	btfss	status,2,c
  1464  00089E  EF53  F004         	goto	u1811
  1465  0008A2  EF55  F004         	goto	u1810
  1466  0008A6                     u1811:
  1467  0008A6  EF5B  F004         	goto	l2064
  1468  0008AA                     u1810:
  1469  0008AA  0E00               	movlw	0
  1470  0008AC  6E35               	movwf	(_dtoa$648+1)^0,c
  1471  0008AE  0E2B               	movlw	43
  1472  0008B0  6E34               	movwf	_dtoa$648^0,c
  1473  0008B2  EF5F  F004         	goto	l2066
  1474  0008B6                     l2064:
  1475  0008B6  0E00               	movlw	0
  1476  0008B8  6E35               	movwf	(_dtoa$648+1)^0,c
  1477  0008BA  0E2D               	movlw	45
  1478  0008BC  6E34               	movwf	_dtoa$648^0,c
  1479  0008BE                     l2066:
  1480  0008BE  0E84               	movlw	low _dbuf
  1481  0008C0  2444               	addwf	dtoa@i^0,w,c
  1482  0008C2  6ED9               	movwf	fsr2l,c
  1483  0008C4  0E00               	movlw	high _dbuf
  1484  0008C6  2045               	addwfc	(dtoa@i+1)^0,w,c
  1485  0008C8  6EDA               	movwf	fsr2h,c
  1486  0008CA  C034  FFDF         	movff	_dtoa$648,indf2
  1487  0008CE                     l2068:
  1488                           
  1489                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  1490  0008CE  C022  F017         	movff	dtoa@fp,pad@fp
  1491  0008D2  C023  F018         	movff	dtoa@fp+1,pad@fp+1
  1492  0008D6  0E84               	movlw	low _dbuf
  1493  0008D8  2444               	addwf	dtoa@i^0,w,c
  1494  0008DA  6E19               	movwf	pad@buf^0,c
  1495  0008DC  0E00               	movlw	high _dbuf
  1496  0008DE  2045               	addwfc	(dtoa@i+1)^0,w,c
  1497  0008E0  6E1A               	movwf	(pad@buf+1)^0,c
  1498  0008E2  C038  F01B         	movff	dtoa@w,pad@p
  1499  0008E6  C039  F01C         	movff	dtoa@w+1,pad@p+1
  1500  0008EA  EC1A  F008         	call	_pad	;wreg free
  1501  0008EE  C017  F022         	movff	?_pad,?_dtoa
  1502  0008F2  C018  F023         	movff	?_pad+1,?_dtoa+1
  1503  0008F6  0012               	return		;funcret
  1504  0008F8                     __end_of_dtoa:
  1505                           	opt callstack 0
  1506                           
  1507 ;; *************** function _pad *****************
  1508 ;; Defined at:
  1509 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1510 ;; Parameters:    Size  Location     Type
  1511 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
  1512 ;;		 -> sprintf@f(6), 
  1513 ;;  buf             2   24[COMRAM] PTR unsigned char 
  1514 ;;		 -> dbuf(32), 
  1515 ;;  p               2   26[COMRAM] int 
  1516 ;; Auto vars:     Size  Location     Type
  1517 ;;  w               2   31[COMRAM] int 
  1518 ;;  i               2   29[COMRAM] int 
  1519 ;; Return value:  Size  Location     Type
  1520 ;;                  2   22[COMRAM] int 
  1521 ;; Registers used:
  1522 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1523 ;; Tracked objects:
  1524 ;;		On entry : 0/0
  1525 ;;		On exit  : 0/0
  1526 ;;		Unchanged: 0/0
  1527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1528 ;;      Params:         6       0       0       0       0       0       0
  1529 ;;      Locals:         4       0       0       0       0       0       0
  1530 ;;      Temps:          1       0       0       0       0       0       0
  1531 ;;      Totals:        11       0       0       0       0       0       0
  1532 ;;Total ram usage:       11 bytes
  1533 ;; Hardware stack levels used:    1
  1534 ;; Hardware stack levels required when called:    6
  1535 ;; This function calls:
  1536 ;;		_fputc
  1537 ;;		_fputs
  1538 ;;		_strlen
  1539 ;; This function is called by:
  1540 ;;		_dtoa
  1541 ;; This function uses a non-reentrant model
  1542 ;;
  1543                           
  1544                           	psect	text5
  1545  001034                     __ptext5:
  1546                           	opt callstack 0
  1547  001034                     _pad:
  1548                           	opt callstack 20
  1549  001034                     
  1550                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  1551  001034  A06F               	btfss	_flags^0,0,c
  1552  001036  EF1F  F008         	goto	u1491
  1553  00103A  EF21  F008         	goto	u1490
  1554  00103E                     u1491:
  1555  00103E  EF2B  F008         	goto	l1908
  1556  001042                     u1490:
  1557  001042                     
  1558                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  1559  001042  C019  F010         	movff	pad@buf,fputs@s
  1560  001046  C01A  F011         	movff	pad@buf+1,fputs@s+1
  1561  00104A  C017  F012         	movff	pad@fp,fputs@fp
  1562  00104E  C018  F013         	movff	pad@fp+1,fputs@fp+1
  1563  001052  EC0A  F009         	call	_fputs	;wreg free
  1564  001056                     l1908:
  1565                           
  1566                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  1567  001056  BE1C               	btfsc	(pad@p+1)^0,7,c
  1568  001058  EF30  F008         	goto	u1501
  1569  00105C  EF32  F008         	goto	u1500
  1570  001060                     u1501:
  1571  001060  EF38  F008         	goto	l1912
  1572  001064                     u1500:
  1573  001064  C01B  F020         	movff	pad@p,pad@w
  1574  001068  C01C  F021         	movff	pad@p+1,pad@w+1
  1575  00106C  EF3C  F008         	goto	l178
  1576  001070                     l1912:
  1577  001070  0E00               	movlw	0
  1578  001072  6E21               	movwf	(pad@w+1)^0,c
  1579  001074  0E00               	movlw	0
  1580  001076  6E20               	movwf	pad@w^0,c
  1581  001078                     l178:
  1582                           
  1583                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  1584  001078  0E00               	movlw	0
  1585  00107A  6E1F               	movwf	(pad@i+1)^0,c
  1586  00107C  0E00               	movlw	0
  1587  00107E  6E1E               	movwf	pad@i^0,c
  1588                           
  1589                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  1590  001080  EF4E  F008         	goto	l1918
  1591  001084                     l1914:
  1592                           
  1593                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  1594  001084  0E00               	movlw	0
  1595  001086  6E08               	movwf	(fputc@c+1)^0,c
  1596  001088  0E20               	movlw	32
  1597  00108A  6E07               	movwf	fputc@c^0,c
  1598  00108C  C017  F009         	movff	pad@fp,fputc@fp
  1599  001090  C018  F00A         	movff	pad@fp+1,fputc@fp+1
  1600  001094  ECB5  F007         	call	_fputc	;wreg free
  1601  001098                     
  1602                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  1603  001098  4A1E               	infsnz	pad@i^0,f,c
  1604  00109A  2A1F               	incf	(pad@i+1)^0,f,c
  1605  00109C                     l1918:
  1606                           
  1607                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  1608  00109C  5020               	movf	pad@w^0,w,c
  1609  00109E  5C1E               	subwf	pad@i^0,w,c
  1610  0010A0  501F               	movf	(pad@i+1)^0,w,c
  1611  0010A2  0A80               	xorlw	128
  1612  0010A4  6E1D               	movwf	??_pad^0,c
  1613  0010A6  5021               	movf	(pad@w+1)^0,w,c
  1614  0010A8  0A80               	xorlw	128
  1615  0010AA  581D               	subwfb	??_pad^0,w,c
  1616  0010AC  A0D8               	btfss	status,0,c
  1617  0010AE  EF5B  F008         	goto	u1511
  1618  0010B2  EF5D  F008         	goto	u1510
  1619  0010B6                     u1511:
  1620  0010B6  EF42  F008         	goto	l1914
  1621  0010BA                     u1510:
  1622  0010BA                     
  1623                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  1624  0010BA  B06F               	btfsc	_flags^0,0,c
  1625  0010BC  EF62  F008         	goto	u1521
  1626  0010C0  EF64  F008         	goto	u1520
  1627  0010C4                     u1521:
  1628  0010C4  EF6E  F008         	goto	l1922
  1629  0010C8                     u1520:
  1630  0010C8                     
  1631                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  1632  0010C8  C019  F010         	movff	pad@buf,fputs@s
  1633  0010CC  C01A  F011         	movff	pad@buf+1,fputs@s+1
  1634  0010D0  C017  F012         	movff	pad@fp,fputs@fp
  1635  0010D4  C018  F013         	movff	pad@fp+1,fputs@fp+1
  1636  0010D8  EC0A  F009         	call	_fputs	;wreg free
  1637  0010DC                     l1922:
  1638                           
  1639                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  1640  0010DC  C019  F007         	movff	pad@buf,strlen@s
  1641  0010E0  C01A  F008         	movff	pad@buf+1,strlen@s+1
  1642  0010E4  EC4C  F009         	call	_strlen	;wreg free
  1643  0010E8  5020               	movf	pad@w^0,w,c
  1644  0010EA  2407               	addwf	?_strlen^0,w,c
  1645  0010EC  6E17               	movwf	?_pad^0,c
  1646  0010EE  5021               	movf	(pad@w+1)^0,w,c
  1647  0010F0  2008               	addwfc	(?_strlen+1)^0,w,c
  1648  0010F2  6E18               	movwf	(?_pad+1)^0,c
  1649  0010F4  0012               	return		;funcret
  1650  0010F6                     __end_of_pad:
  1651                           	opt callstack 0
  1652                           
  1653 ;; *************** function _strlen *****************
  1654 ;; Defined at:
  1655 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  1656 ;; Parameters:    Size  Location     Type
  1657 ;;  s               2    6[COMRAM] PTR const unsigned char 
  1658 ;;		 -> dbuf(32), 
  1659 ;; Auto vars:     Size  Location     Type
  1660 ;;  a               2    8[COMRAM] PTR const unsigned char 
  1661 ;;		 -> dbuf(32), 
  1662 ;; Return value:  Size  Location     Type
  1663 ;;                  2    6[COMRAM] unsigned int 
  1664 ;; Registers used:
  1665 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1666 ;; Tracked objects:
  1667 ;;		On entry : 0/0
  1668 ;;		On exit  : 0/0
  1669 ;;		Unchanged: 0/0
  1670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1671 ;;      Params:         2       0       0       0       0       0       0
  1672 ;;      Locals:         2       0       0       0       0       0       0
  1673 ;;      Temps:          0       0       0       0       0       0       0
  1674 ;;      Totals:         4       0       0       0       0       0       0
  1675 ;;Total ram usage:        4 bytes
  1676 ;; Hardware stack levels used:    1
  1677 ;; Hardware stack levels required when called:    3
  1678 ;; This function calls:
  1679 ;;		Nothing
  1680 ;; This function is called by:
  1681 ;;		_pad
  1682 ;; This function uses a non-reentrant model
  1683 ;;
  1684                           
  1685                           	psect	text6
  1686  001298                     __ptext6:
  1687                           	opt callstack 0
  1688  001298                     _strlen:
  1689                           	opt callstack 22
  1690  001298  C007  F009         	movff	strlen@s,strlen@a
  1691  00129C  C008  F00A         	movff	strlen@s+1,strlen@a+1
  1692  0012A0  EF54  F009         	goto	l1898
  1693  0012A4                     l1896:
  1694  0012A4  4A07               	infsnz	strlen@s^0,f,c
  1695  0012A6  2A08               	incf	(strlen@s+1)^0,f,c
  1696  0012A8                     l1898:
  1697  0012A8  C007  FFD9         	movff	strlen@s,fsr2l
  1698  0012AC  C008  FFDA         	movff	strlen@s+1,fsr2h
  1699  0012B0  50DF               	movf	indf2,w,c
  1700  0012B2  A4D8               	btfss	status,2,c
  1701  0012B4  EF5E  F009         	goto	u1481
  1702  0012B8  EF60  F009         	goto	u1480
  1703  0012BC                     u1481:
  1704  0012BC  EF52  F009         	goto	l1896
  1705  0012C0                     u1480:
  1706  0012C0  5009               	movf	strlen@a^0,w,c
  1707  0012C2  5C07               	subwf	strlen@s^0,w,c
  1708  0012C4  6E07               	movwf	?_strlen^0,c
  1709  0012C6  500A               	movf	(strlen@a+1)^0,w,c
  1710  0012C8  5808               	subwfb	(strlen@s+1)^0,w,c
  1711  0012CA  6E08               	movwf	(?_strlen+1)^0,c
  1712  0012CC  0012               	return		;funcret
  1713  0012CE                     __end_of_strlen:
  1714                           	opt callstack 0
  1715                           
  1716 ;; *************** function _fputs *****************
  1717 ;; Defined at:
  1718 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  1719 ;; Parameters:    Size  Location     Type
  1720 ;;  s               2   15[COMRAM] PTR const unsigned char 
  1721 ;;		 -> dbuf(32), 
  1722 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  1723 ;;		 -> sprintf@f(6), 
  1724 ;; Auto vars:     Size  Location     Type
  1725 ;;  i               2   20[COMRAM] int 
  1726 ;;  c               1   19[COMRAM] unsigned char 
  1727 ;; Return value:  Size  Location     Type
  1728 ;;                  2   15[COMRAM] int 
  1729 ;; Registers used:
  1730 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1731 ;; Tracked objects:
  1732 ;;		On entry : 0/0
  1733 ;;		On exit  : 0/0
  1734 ;;		Unchanged: 0/0
  1735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1736 ;;      Params:         4       0       0       0       0       0       0
  1737 ;;      Locals:         3       0       0       0       0       0       0
  1738 ;;      Temps:          0       0       0       0       0       0       0
  1739 ;;      Totals:         7       0       0       0       0       0       0
  1740 ;;Total ram usage:        7 bytes
  1741 ;; Hardware stack levels used:    1
  1742 ;; Hardware stack levels required when called:    5
  1743 ;; This function calls:
  1744 ;;		_fputc
  1745 ;; This function is called by:
  1746 ;;		_pad
  1747 ;; This function uses a non-reentrant model
  1748 ;;
  1749                           
  1750                           	psect	text7
  1751  001214                     __ptext7:
  1752                           	opt callstack 0
  1753  001214                     _fputs:
  1754                           	opt callstack 20
  1755  001214  0E00               	movlw	0
  1756  001216  6E16               	movwf	(fputs@i+1)^0,c
  1757  001218  0E00               	movlw	0
  1758  00121A  6E15               	movwf	fputs@i^0,c
  1759  00121C  EF1B  F009         	goto	l1892
  1760  001220                     l1888:
  1761  001220  C014  F007         	movff	fputs@c,fputc@c
  1762  001224  6A08               	clrf	(fputc@c+1)^0,c
  1763  001226  C012  F009         	movff	fputs@fp,fputc@fp
  1764  00122A  C013  F00A         	movff	fputs@fp+1,fputc@fp+1
  1765  00122E  ECB5  F007         	call	_fputc	;wreg free
  1766  001232  4A15               	infsnz	fputs@i^0,f,c
  1767  001234  2A16               	incf	(fputs@i+1)^0,f,c
  1768  001236                     l1892:
  1769  001236  5015               	movf	fputs@i^0,w,c
  1770  001238  2410               	addwf	fputs@s^0,w,c
  1771  00123A  6ED9               	movwf	fsr2l,c
  1772  00123C  5016               	movf	(fputs@i+1)^0,w,c
  1773  00123E  2011               	addwfc	(fputs@s+1)^0,w,c
  1774  001240  6EDA               	movwf	fsr2h,c
  1775  001242  50DF               	movf	indf2,w,c
  1776  001244  6E14               	movwf	fputs@c^0,c
  1777  001246  5014               	movf	fputs@c^0,w,c
  1778  001248  A4D8               	btfss	status,2,c
  1779  00124A  EF29  F009         	goto	u1471
  1780  00124E  EF2B  F009         	goto	u1470
  1781  001252                     u1471:
  1782  001252  EF10  F009         	goto	l1888
  1783  001256                     u1470:
  1784  001256  0012               	return		;funcret
  1785  001258                     __end_of_fputs:
  1786                           	opt callstack 0
  1787                           
  1788 ;; *************** function _fputc *****************
  1789 ;; Defined at:
  1790 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  1791 ;; Parameters:    Size  Location     Type
  1792 ;;  c               2    6[COMRAM] int 
  1793 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
  1794 ;;		 -> sprintf@f(6), 
  1795 ;; Auto vars:     Size  Location     Type
  1796 ;;		None
  1797 ;; Return value:  Size  Location     Type
  1798 ;;                  2    6[COMRAM] int 
  1799 ;; Registers used:
  1800 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1801 ;; Tracked objects:
  1802 ;;		On entry : 0/0
  1803 ;;		On exit  : 0/0
  1804 ;;		Unchanged: 0/0
  1805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1806 ;;      Params:         4       0       0       0       0       0       0
  1807 ;;      Locals:         0       0       0       0       0       0       0
  1808 ;;      Temps:          5       0       0       0       0       0       0
  1809 ;;      Totals:         9       0       0       0       0       0       0
  1810 ;;Total ram usage:        9 bytes
  1811 ;; Hardware stack levels used:    1
  1812 ;; Hardware stack levels required when called:    4
  1813 ;; This function calls:
  1814 ;;		_putch
  1815 ;; This function is called by:
  1816 ;;		_pad
  1817 ;;		_vfpfcnvrt
  1818 ;;		_fputs
  1819 ;; This function uses a non-reentrant model
  1820 ;;
  1821                           
  1822                           	psect	text8
  1823  000F6A                     __ptext8:
  1824                           	opt callstack 0
  1825  000F6A                     _fputc:
  1826                           	opt callstack 23
  1827  000F6A  5009               	movf	fputc@fp^0,w,c
  1828  000F6C  100A               	iorwf	(fputc@fp+1)^0,w,c
  1829  000F6E  B4D8               	btfsc	status,2,c
  1830  000F70  EFBC  F007         	goto	u1431
  1831  000F74  EFBE  F007         	goto	u1430
  1832  000F78                     u1431:
  1833  000F78  EFC7  F007         	goto	l1876
  1834  000F7C                     u1430:
  1835  000F7C  5009               	movf	fputc@fp^0,w,c
  1836  000F7E  100A               	iorwf	(fputc@fp+1)^0,w,c
  1837  000F80  A4D8               	btfss	status,2,c
  1838  000F82  EFC5  F007         	goto	u1441
  1839  000F86  EFC7  F007         	goto	u1440
  1840  000F8A                     u1441:
  1841  000F8A  EFCC  F007         	goto	l1878
  1842  000F8E                     u1440:
  1843  000F8E                     l1876:
  1844  000F8E  5007               	movf	fputc@c^0,w,c
  1845  000F90  ECCD  F009         	call	_putch
  1846  000F94  EF19  F008         	goto	l916
  1847  000F98                     l1878:
  1848  000F98  EE20 F004          	lfsr	2,4
  1849  000F9C  5009               	movf	fputc@fp^0,w,c
  1850  000F9E  26D9               	addwf	fsr2l,f,c
  1851  000FA0  500A               	movf	(fputc@fp+1)^0,w,c
  1852  000FA2  22DA               	addwfc	fsr2h,f,c
  1853  000FA4  50DE               	movf	postinc2,w,c
  1854  000FA6  10DE               	iorwf	postinc2,w,c
  1855  000FA8  B4D8               	btfsc	status,2,c
  1856  000FAA  EFD9  F007         	goto	u1451
  1857  000FAE  EFDB  F007         	goto	u1450
  1858  000FB2                     u1451:
  1859  000FB2  EFF6  F007         	goto	l1882
  1860  000FB6                     u1450:
  1861  000FB6  EE20 F004          	lfsr	2,4
  1862  000FBA  5009               	movf	fputc@fp^0,w,c
  1863  000FBC  26D9               	addwf	fsr2l,f,c
  1864  000FBE  500A               	movf	(fputc@fp+1)^0,w,c
  1865  000FC0  22DA               	addwfc	fsr2h,f,c
  1866  000FC2  EE10 F002          	lfsr	1,2
  1867  000FC6  5009               	movf	fputc@fp^0,w,c
  1868  000FC8  26E1               	addwf	fsr1l,f,c
  1869  000FCA  500A               	movf	(fputc@fp+1)^0,w,c
  1870  000FCC  22E2               	addwfc	fsr1h,f,c
  1871  000FCE  50DE               	movf	postinc2,w,c
  1872  000FD0  5CE6               	subwf	postinc1,w,c
  1873  000FD2  50E6               	movf	postinc1,w,c
  1874  000FD4  0A80               	xorlw	128
  1875  000FD6  6E0F               	movwf	(??_fputc+4)^0,c
  1876  000FD8  50DE               	movf	postinc2,w,c
  1877  000FDA  0A80               	xorlw	128
  1878  000FDC  580F               	subwfb	(??_fputc+4)^0,w,c
  1879  000FDE  B0D8               	btfsc	status,0,c
  1880  000FE0  EFF4  F007         	goto	u1461
  1881  000FE4  EFF6  F007         	goto	u1460
  1882  000FE8                     u1461:
  1883  000FE8  EF19  F008         	goto	l916
  1884  000FEC                     u1460:
  1885  000FEC                     l1882:
  1886  000FEC  EE20 F002          	lfsr	2,2
  1887  000FF0  5009               	movf	fputc@fp^0,w,c
  1888  000FF2  26D9               	addwf	fsr2l,f,c
  1889  000FF4  500A               	movf	(fputc@fp+1)^0,w,c
  1890  000FF6  22DA               	addwfc	fsr2h,f,c
  1891  000FF8  CFDE F00B          	movff	postinc2,??_fputc
  1892  000FFC  CFDD F00C          	movff	postdec2,??_fputc+1
  1893  001000  C009  FFD9         	movff	fputc@fp,fsr2l
  1894  001004  C00A  FFDA         	movff	fputc@fp+1,fsr2h
  1895  001008  CFDE F00D          	movff	postinc2,??_fputc+2
  1896  00100C  CFDD F00E          	movff	postdec2,??_fputc+3
  1897  001010  500B               	movf	??_fputc^0,w,c
  1898  001012  240D               	addwf	(??_fputc+2)^0,w,c
  1899  001014  6ED9               	movwf	fsr2l,c
  1900  001016  500C               	movf	(??_fputc+1)^0,w,c
  1901  001018  200E               	addwfc	(??_fputc+3)^0,w,c
  1902  00101A  6EDA               	movwf	fsr2h,c
  1903  00101C  C007  FFDF         	movff	fputc@c,indf2
  1904  001020  EE20 F002          	lfsr	2,2
  1905  001024  5009               	movf	fputc@fp^0,w,c
  1906  001026  26D9               	addwf	fsr2l,f,c
  1907  001028  500A               	movf	(fputc@fp+1)^0,w,c
  1908  00102A  22DA               	addwfc	fsr2h,f,c
  1909  00102C  2ADE               	incf	postinc2,f,c
  1910  00102E  0E00               	movlw	0
  1911  001030  22DD               	addwfc	postdec2,f,c
  1912  001032                     l916:
  1913  001032  0012               	return		;funcret
  1914  001034                     __end_of_fputc:
  1915                           	opt callstack 0
  1916                           
  1917 ;; *************** function _putch *****************
  1918 ;; Defined at:
  1919 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  1920 ;; Parameters:    Size  Location     Type
  1921 ;;  c               1    wreg     unsigned char 
  1922 ;; Auto vars:     Size  Location     Type
  1923 ;;  c               1    0[COMRAM] unsigned char 
  1924 ;; Return value:  Size  Location     Type
  1925 ;;                  1    wreg      void 
  1926 ;; Registers used:
  1927 ;;		wreg
  1928 ;; Tracked objects:
  1929 ;;		On entry : 0/0
  1930 ;;		On exit  : 0/0
  1931 ;;		Unchanged: 0/0
  1932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1933 ;;      Params:         0       0       0       0       0       0       0
  1934 ;;      Locals:         0       0       0       0       0       0       0
  1935 ;;      Temps:          0       0       0       0       0       0       0
  1936 ;;      Totals:         0       0       0       0       0       0       0
  1937 ;;Total ram usage:        0 bytes
  1938 ;; Hardware stack levels used:    1
  1939 ;; Hardware stack levels required when called:    3
  1940 ;; This function calls:
  1941 ;;		Nothing
  1942 ;; This function is called by:
  1943 ;;		_fputc
  1944 ;; This function uses a non-reentrant model
  1945 ;;
  1946                           
  1947                           	psect	text9
  1948  00139A                     __ptext9:
  1949                           	opt callstack 0
  1950  00139A                     _putch:
  1951                           	opt callstack 23
  1952  00139A  0012               	return		;funcret
  1953  00139C                     __end_of_putch:
  1954                           	opt callstack 0
  1955                           
  1956 ;; *************** function _abs *****************
  1957 ;; Defined at:
  1958 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  1959 ;; Parameters:    Size  Location     Type
  1960 ;;  a               2   24[COMRAM] int 
  1961 ;; Auto vars:     Size  Location     Type
  1962 ;;		None
  1963 ;; Return value:  Size  Location     Type
  1964 ;;                  2   24[COMRAM] int 
  1965 ;; Registers used:
  1966 ;;		wreg, status,2, status,0
  1967 ;; Tracked objects:
  1968 ;;		On entry : 0/0
  1969 ;;		On exit  : 0/0
  1970 ;;		Unchanged: 0/0
  1971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1972 ;;      Params:         2       0       0       0       0       0       0
  1973 ;;      Locals:         0       0       0       0       0       0       0
  1974 ;;      Temps:          2       0       0       0       0       0       0
  1975 ;;      Totals:         4       0       0       0       0       0       0
  1976 ;;Total ram usage:        4 bytes
  1977 ;; Hardware stack levels used:    1
  1978 ;; Hardware stack levels required when called:    3
  1979 ;; This function calls:
  1980 ;;		Nothing
  1981 ;; This function is called by:
  1982 ;;		_dtoa
  1983 ;; This function uses a non-reentrant model
  1984 ;;
  1985                           
  1986                           	psect	text10
  1987  001258                     __ptext10:
  1988                           	opt callstack 0
  1989  001258                     _abs:
  1990                           	opt callstack 23
  1991  001258  BE1A               	btfsc	(abs@a+1)^0,7,c
  1992  00125A  EF39  F009         	goto	u1530
  1993  00125E  501A               	movf	(abs@a+1)^0,w,c
  1994  001260  E106               	bnz	u1531
  1995  001262  0419               	decf	abs@a^0,w,c
  1996  001264  B0D8               	btfsc	status,0,c
  1997  001266  EF37  F009         	goto	u1531
  1998  00126A  EF39  F009         	goto	u1530
  1999  00126E                     u1531:
  2000  00126E  EF47  F009         	goto	l901
  2001  001272                     u1530:
  2002  001272  C019  F01B         	movff	abs@a,??_abs
  2003  001276  C01A  F01C         	movff	abs@a+1,??_abs+1
  2004  00127A  1E1B               	comf	??_abs^0,f,c
  2005  00127C  1E1C               	comf	(??_abs+1)^0,f,c
  2006  00127E  4A1B               	infsnz	??_abs^0,f,c
  2007  001280  2A1C               	incf	(??_abs+1)^0,f,c
  2008  001282  C01B  F019         	movff	??_abs,?_abs
  2009  001286  C01C  F01A         	movff	??_abs+1,?_abs+1
  2010  00128A  EF4B  F009         	goto	l904
  2011  00128E                     l901:
  2012  00128E  C019  F019         	movff	abs@a,?_abs
  2013  001292  C01A  F01A         	movff	abs@a+1,?_abs+1
  2014  001296                     l904:
  2015  001296  0012               	return		;funcret
  2016  001298                     __end_of_abs:
  2017                           	opt callstack 0
  2018                           
  2019 ;; *************** function ___aomod *****************
  2020 ;; Defined at:
  2021 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
  2022 ;; Parameters:    Size  Location     Type
  2023 ;;  dividend        8    6[COMRAM] long long 
  2024 ;;  divisor         8   14[COMRAM] long long 
  2025 ;; Auto vars:     Size  Location     Type
  2026 ;;  sign            1   23[COMRAM] unsigned char 
  2027 ;;  counter         1   22[COMRAM] unsigned char 
  2028 ;; Return value:  Size  Location     Type
  2029 ;;                  8    6[COMRAM] long long 
  2030 ;; Registers used:
  2031 ;;		wreg, status,2, status,0
  2032 ;; Tracked objects:
  2033 ;;		On entry : 0/0
  2034 ;;		On exit  : 0/0
  2035 ;;		Unchanged: 0/0
  2036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2037 ;;      Params:        16       0       0       0       0       0       0
  2038 ;;      Locals:         2       0       0       0       0       0       0
  2039 ;;      Temps:          0       0       0       0       0       0       0
  2040 ;;      Totals:        18       0       0       0       0       0       0
  2041 ;;Total ram usage:       18 bytes
  2042 ;; Hardware stack levels used:    1
  2043 ;; Hardware stack levels required when called:    3
  2044 ;; This function calls:
  2045 ;;		Nothing
  2046 ;; This function is called by:
  2047 ;;		_dtoa
  2048 ;; This function uses a non-reentrant model
  2049 ;;
  2050                           
  2051                           	psect	text11
  2052  000C32                     __ptext11:
  2053                           	opt callstack 0
  2054  000C32                     ___aomod:
  2055                           	opt callstack 23
  2056  000C32  0E00               	movlw	0
  2057  000C34  6E18               	movwf	___aomod@sign^0,c
  2058  000C36  BE0E               	btfsc	(___aomod@dividend+7)^0,7,c
  2059  000C38  EF22  F006         	goto	u1610
  2060  000C3C  EF20  F006         	goto	u1611
  2061  000C40                     u1611:
  2062  000C40  EF34  F006         	goto	l1982
  2063  000C44                     u1610:
  2064  000C44  1E0E               	comf	(___aomod@dividend+7)^0,f,c
  2065  000C46  1E0D               	comf	(___aomod@dividend+6)^0,f,c
  2066  000C48  1E0C               	comf	(___aomod@dividend+5)^0,f,c
  2067  000C4A  1E0B               	comf	(___aomod@dividend+4)^0,f,c
  2068  000C4C  1E0A               	comf	(___aomod@dividend+3)^0,f,c
  2069  000C4E  1E09               	comf	(___aomod@dividend+2)^0,f,c
  2070  000C50  1E08               	comf	(___aomod@dividend+1)^0,f,c
  2071  000C52  6C07               	negf	___aomod@dividend^0,c
  2072  000C54  0E00               	movlw	0
  2073  000C56  2208               	addwfc	(___aomod@dividend+1)^0,f,c
  2074  000C58  2209               	addwfc	(___aomod@dividend+2)^0,f,c
  2075  000C5A  220A               	addwfc	(___aomod@dividend+3)^0,f,c
  2076  000C5C  220B               	addwfc	(___aomod@dividend+4)^0,f,c
  2077  000C5E  220C               	addwfc	(___aomod@dividend+5)^0,f,c
  2078  000C60  220D               	addwfc	(___aomod@dividend+6)^0,f,c
  2079  000C62  220E               	addwfc	(___aomod@dividend+7)^0,f,c
  2080  000C64  0E01               	movlw	1
  2081  000C66  6E18               	movwf	___aomod@sign^0,c
  2082  000C68                     l1982:
  2083  000C68  BE16               	btfsc	(___aomod@divisor+7)^0,7,c
  2084  000C6A  EF3B  F006         	goto	u1620
  2085  000C6E  EF39  F006         	goto	u1621
  2086  000C72                     u1621:
  2087  000C72  EF4B  F006         	goto	l1986
  2088  000C76                     u1620:
  2089  000C76  1E16               	comf	(___aomod@divisor+7)^0,f,c
  2090  000C78  1E15               	comf	(___aomod@divisor+6)^0,f,c
  2091  000C7A  1E14               	comf	(___aomod@divisor+5)^0,f,c
  2092  000C7C  1E13               	comf	(___aomod@divisor+4)^0,f,c
  2093  000C7E  1E12               	comf	(___aomod@divisor+3)^0,f,c
  2094  000C80  1E11               	comf	(___aomod@divisor+2)^0,f,c
  2095  000C82  1E10               	comf	(___aomod@divisor+1)^0,f,c
  2096  000C84  6C0F               	negf	___aomod@divisor^0,c
  2097  000C86  0E00               	movlw	0
  2098  000C88  2210               	addwfc	(___aomod@divisor+1)^0,f,c
  2099  000C8A  2211               	addwfc	(___aomod@divisor+2)^0,f,c
  2100  000C8C  2212               	addwfc	(___aomod@divisor+3)^0,f,c
  2101  000C8E  2213               	addwfc	(___aomod@divisor+4)^0,f,c
  2102  000C90  2214               	addwfc	(___aomod@divisor+5)^0,f,c
  2103  000C92  2215               	addwfc	(___aomod@divisor+6)^0,f,c
  2104  000C94  2216               	addwfc	(___aomod@divisor+7)^0,f,c
  2105  000C96                     l1986:
  2106  000C96  500F               	movf	___aomod@divisor^0,w,c
  2107  000C98  1010               	iorwf	(___aomod@divisor+1)^0,w,c
  2108  000C9A  1011               	iorwf	(___aomod@divisor+2)^0,w,c
  2109  000C9C  1012               	iorwf	(___aomod@divisor+3)^0,w,c
  2110  000C9E  1013               	iorwf	(___aomod@divisor+4)^0,w,c
  2111  000CA0  1014               	iorwf	(___aomod@divisor+5)^0,w,c
  2112  000CA2  1015               	iorwf	(___aomod@divisor+6)^0,w,c
  2113  000CA4  1016               	iorwf	(___aomod@divisor+7)^0,w,c
  2114  000CA6  B4D8               	btfsc	status,2,c
  2115  000CA8  EF58  F006         	goto	u1631
  2116  000CAC  EF5A  F006         	goto	u1630
  2117  000CB0                     u1631:
  2118  000CB0  EFA2  F006         	goto	l2002
  2119  000CB4                     u1630:
  2120  000CB4  0E01               	movlw	1
  2121  000CB6  6E17               	movwf	___aomod@counter^0,c
  2122  000CB8  EF68  F006         	goto	l1992
  2123  000CBC                     l1990:
  2124  000CBC  90D8               	bcf	status,0,c
  2125  000CBE  360F               	rlcf	___aomod@divisor^0,f,c
  2126  000CC0  3610               	rlcf	(___aomod@divisor+1)^0,f,c
  2127  000CC2  3611               	rlcf	(___aomod@divisor+2)^0,f,c
  2128  000CC4  3612               	rlcf	(___aomod@divisor+3)^0,f,c
  2129  000CC6  3613               	rlcf	(___aomod@divisor+4)^0,f,c
  2130  000CC8  3614               	rlcf	(___aomod@divisor+5)^0,f,c
  2131  000CCA  3615               	rlcf	(___aomod@divisor+6)^0,f,c
  2132  000CCC  3616               	rlcf	(___aomod@divisor+7)^0,f,c
  2133  000CCE  2A17               	incf	___aomod@counter^0,f,c
  2134  000CD0                     l1992:
  2135  000CD0  AE16               	btfss	(___aomod@divisor+7)^0,7,c
  2136  000CD2  EF6D  F006         	goto	u1641
  2137  000CD6  EF6F  F006         	goto	u1640
  2138  000CDA                     u1641:
  2139  000CDA  EF5E  F006         	goto	l1990
  2140  000CDE                     u1640:
  2141  000CDE                     l1994:
  2142  000CDE  500F               	movf	___aomod@divisor^0,w,c
  2143  000CE0  5C07               	subwf	___aomod@dividend^0,w,c
  2144  000CE2  5010               	movf	(___aomod@divisor+1)^0,w,c
  2145  000CE4  5808               	subwfb	(___aomod@dividend+1)^0,w,c
  2146  000CE6  5011               	movf	(___aomod@divisor+2)^0,w,c
  2147  000CE8  5809               	subwfb	(___aomod@dividend+2)^0,w,c
  2148  000CEA  5012               	movf	(___aomod@divisor+3)^0,w,c
  2149  000CEC  580A               	subwfb	(___aomod@dividend+3)^0,w,c
  2150  000CEE  5013               	movf	(___aomod@divisor+4)^0,w,c
  2151  000CF0  580B               	subwfb	(___aomod@dividend+4)^0,w,c
  2152  000CF2  5014               	movf	(___aomod@divisor+5)^0,w,c
  2153  000CF4  580C               	subwfb	(___aomod@dividend+5)^0,w,c
  2154  000CF6  5015               	movf	(___aomod@divisor+6)^0,w,c
  2155  000CF8  580D               	subwfb	(___aomod@dividend+6)^0,w,c
  2156  000CFA  5016               	movf	(___aomod@divisor+7)^0,w,c
  2157  000CFC  580E               	subwfb	(___aomod@dividend+7)^0,w,c
  2158  000CFE  A0D8               	btfss	status,0,c
  2159  000D00  EF84  F006         	goto	u1651
  2160  000D04  EF86  F006         	goto	u1650
  2161  000D08                     u1651:
  2162  000D08  EF96  F006         	goto	l1998
  2163  000D0C                     u1650:
  2164  000D0C  500F               	movf	___aomod@divisor^0,w,c
  2165  000D0E  5E07               	subwf	___aomod@dividend^0,f,c
  2166  000D10  5010               	movf	(___aomod@divisor+1)^0,w,c
  2167  000D12  5A08               	subwfb	(___aomod@dividend+1)^0,f,c
  2168  000D14  5011               	movf	(___aomod@divisor+2)^0,w,c
  2169  000D16  5A09               	subwfb	(___aomod@dividend+2)^0,f,c
  2170  000D18  5012               	movf	(___aomod@divisor+3)^0,w,c
  2171  000D1A  5A0A               	subwfb	(___aomod@dividend+3)^0,f,c
  2172  000D1C  5013               	movf	(___aomod@divisor+4)^0,w,c
  2173  000D1E  5A0B               	subwfb	(___aomod@dividend+4)^0,f,c
  2174  000D20  5014               	movf	(___aomod@divisor+5)^0,w,c
  2175  000D22  5A0C               	subwfb	(___aomod@dividend+5)^0,f,c
  2176  000D24  5015               	movf	(___aomod@divisor+6)^0,w,c
  2177  000D26  5A0D               	subwfb	(___aomod@dividend+6)^0,f,c
  2178  000D28  5016               	movf	(___aomod@divisor+7)^0,w,c
  2179  000D2A  5A0E               	subwfb	(___aomod@dividend+7)^0,f,c
  2180  000D2C                     l1998:
  2181  000D2C  90D8               	bcf	status,0,c
  2182  000D2E  3216               	rrcf	(___aomod@divisor+7)^0,f,c
  2183  000D30  3215               	rrcf	(___aomod@divisor+6)^0,f,c
  2184  000D32  3214               	rrcf	(___aomod@divisor+5)^0,f,c
  2185  000D34  3213               	rrcf	(___aomod@divisor+4)^0,f,c
  2186  000D36  3212               	rrcf	(___aomod@divisor+3)^0,f,c
  2187  000D38  3211               	rrcf	(___aomod@divisor+2)^0,f,c
  2188  000D3A  3210               	rrcf	(___aomod@divisor+1)^0,f,c
  2189  000D3C  320F               	rrcf	___aomod@divisor^0,f,c
  2190  000D3E  2E17               	decfsz	___aomod@counter^0,f,c
  2191  000D40  EF6F  F006         	goto	l1994
  2192  000D44                     l2002:
  2193  000D44  5018               	movf	___aomod@sign^0,w,c
  2194  000D46  B4D8               	btfsc	status,2,c
  2195  000D48  EFA8  F006         	goto	u1661
  2196  000D4C  EFAA  F006         	goto	u1660
  2197  000D50                     u1661:
  2198  000D50  EFBA  F006         	goto	l2006
  2199  000D54                     u1660:
  2200  000D54  1E0E               	comf	(___aomod@dividend+7)^0,f,c
  2201  000D56  1E0D               	comf	(___aomod@dividend+6)^0,f,c
  2202  000D58  1E0C               	comf	(___aomod@dividend+5)^0,f,c
  2203  000D5A  1E0B               	comf	(___aomod@dividend+4)^0,f,c
  2204  000D5C  1E0A               	comf	(___aomod@dividend+3)^0,f,c
  2205  000D5E  1E09               	comf	(___aomod@dividend+2)^0,f,c
  2206  000D60  1E08               	comf	(___aomod@dividend+1)^0,f,c
  2207  000D62  6C07               	negf	___aomod@dividend^0,c
  2208  000D64  0E00               	movlw	0
  2209  000D66  2208               	addwfc	(___aomod@dividend+1)^0,f,c
  2210  000D68  2209               	addwfc	(___aomod@dividend+2)^0,f,c
  2211  000D6A  220A               	addwfc	(___aomod@dividend+3)^0,f,c
  2212  000D6C  220B               	addwfc	(___aomod@dividend+4)^0,f,c
  2213  000D6E  220C               	addwfc	(___aomod@dividend+5)^0,f,c
  2214  000D70  220D               	addwfc	(___aomod@dividend+6)^0,f,c
  2215  000D72  220E               	addwfc	(___aomod@dividend+7)^0,f,c
  2216  000D74                     l2006:
  2217  000D74  C007  F007         	movff	___aomod@dividend,?___aomod
  2218  000D78  C008  F008         	movff	___aomod@dividend+1,?___aomod+1
  2219  000D7C  C009  F009         	movff	___aomod@dividend+2,?___aomod+2
  2220  000D80  C00A  F00A         	movff	___aomod@dividend+3,?___aomod+3
  2221  000D84  C00B  F00B         	movff	___aomod@dividend+4,?___aomod+4
  2222  000D88  C00C  F00C         	movff	___aomod@dividend+5,?___aomod+5
  2223  000D8C  C00D  F00D         	movff	___aomod@dividend+6,?___aomod+6
  2224  000D90  C00E  F00E         	movff	___aomod@dividend+7,?___aomod+7
  2225  000D94  0012               	return		;funcret
  2226  000D96                     __end_of___aomod:
  2227                           	opt callstack 0
  2228                           
  2229 ;; *************** function ___aodiv *****************
  2230 ;; Defined at:
  2231 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
  2232 ;; Parameters:    Size  Location     Type
  2233 ;;  dividend        8    6[COMRAM] long long 
  2234 ;;  divisor         8   14[COMRAM] long long 
  2235 ;; Auto vars:     Size  Location     Type
  2236 ;;  quotient        8   24[COMRAM] long long 
  2237 ;;  sign            1   23[COMRAM] unsigned char 
  2238 ;;  counter         1   22[COMRAM] unsigned char 
  2239 ;; Return value:  Size  Location     Type
  2240 ;;                  8    6[COMRAM] long long 
  2241 ;; Registers used:
  2242 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2243 ;; Tracked objects:
  2244 ;;		On entry : 0/0
  2245 ;;		On exit  : 0/0
  2246 ;;		Unchanged: 0/0
  2247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2248 ;;      Params:        16       0       0       0       0       0       0
  2249 ;;      Locals:        10       0       0       0       0       0       0
  2250 ;;      Temps:          0       0       0       0       0       0       0
  2251 ;;      Totals:        26       0       0       0       0       0       0
  2252 ;;Total ram usage:       26 bytes
  2253 ;; Hardware stack levels used:    1
  2254 ;; Hardware stack levels required when called:    3
  2255 ;; This function calls:
  2256 ;;		Nothing
  2257 ;; This function is called by:
  2258 ;;		_dtoa
  2259 ;; This function uses a non-reentrant model
  2260 ;;
  2261                           
  2262                           	psect	text12
  2263  000AAA                     __ptext12:
  2264                           	opt callstack 0
  2265  000AAA                     ___aodiv:
  2266                           	opt callstack 23
  2267  000AAA  0E00               	movlw	0
  2268  000AAC  6E18               	movwf	___aodiv@sign^0,c
  2269  000AAE  BE16               	btfsc	(___aodiv@divisor+7)^0,7,c
  2270  000AB0  EF5E  F005         	goto	u1540
  2271  000AB4  EF5C  F005         	goto	u1541
  2272  000AB8                     u1541:
  2273  000AB8  EF70  F005         	goto	l1938
  2274  000ABC                     u1540:
  2275  000ABC  1E16               	comf	(___aodiv@divisor+7)^0,f,c
  2276  000ABE  1E15               	comf	(___aodiv@divisor+6)^0,f,c
  2277  000AC0  1E14               	comf	(___aodiv@divisor+5)^0,f,c
  2278  000AC2  1E13               	comf	(___aodiv@divisor+4)^0,f,c
  2279  000AC4  1E12               	comf	(___aodiv@divisor+3)^0,f,c
  2280  000AC6  1E11               	comf	(___aodiv@divisor+2)^0,f,c
  2281  000AC8  1E10               	comf	(___aodiv@divisor+1)^0,f,c
  2282  000ACA  6C0F               	negf	___aodiv@divisor^0,c
  2283  000ACC  0E00               	movlw	0
  2284  000ACE  2210               	addwfc	(___aodiv@divisor+1)^0,f,c
  2285  000AD0  2211               	addwfc	(___aodiv@divisor+2)^0,f,c
  2286  000AD2  2212               	addwfc	(___aodiv@divisor+3)^0,f,c
  2287  000AD4  2213               	addwfc	(___aodiv@divisor+4)^0,f,c
  2288  000AD6  2214               	addwfc	(___aodiv@divisor+5)^0,f,c
  2289  000AD8  2215               	addwfc	(___aodiv@divisor+6)^0,f,c
  2290  000ADA  2216               	addwfc	(___aodiv@divisor+7)^0,f,c
  2291  000ADC  0E01               	movlw	1
  2292  000ADE  6E18               	movwf	___aodiv@sign^0,c
  2293  000AE0                     l1938:
  2294  000AE0  BE0E               	btfsc	(___aodiv@dividend+7)^0,7,c
  2295  000AE2  EF77  F005         	goto	u1550
  2296  000AE6  EF75  F005         	goto	u1551
  2297  000AEA                     u1551:
  2298  000AEA  EF89  F005         	goto	l1944
  2299  000AEE                     u1550:
  2300  000AEE  1E0E               	comf	(___aodiv@dividend+7)^0,f,c
  2301  000AF0  1E0D               	comf	(___aodiv@dividend+6)^0,f,c
  2302  000AF2  1E0C               	comf	(___aodiv@dividend+5)^0,f,c
  2303  000AF4  1E0B               	comf	(___aodiv@dividend+4)^0,f,c
  2304  000AF6  1E0A               	comf	(___aodiv@dividend+3)^0,f,c
  2305  000AF8  1E09               	comf	(___aodiv@dividend+2)^0,f,c
  2306  000AFA  1E08               	comf	(___aodiv@dividend+1)^0,f,c
  2307  000AFC  6C07               	negf	___aodiv@dividend^0,c
  2308  000AFE  0E00               	movlw	0
  2309  000B00  2208               	addwfc	(___aodiv@dividend+1)^0,f,c
  2310  000B02  2209               	addwfc	(___aodiv@dividend+2)^0,f,c
  2311  000B04  220A               	addwfc	(___aodiv@dividend+3)^0,f,c
  2312  000B06  220B               	addwfc	(___aodiv@dividend+4)^0,f,c
  2313  000B08  220C               	addwfc	(___aodiv@dividend+5)^0,f,c
  2314  000B0A  220D               	addwfc	(___aodiv@dividend+6)^0,f,c
  2315  000B0C  220E               	addwfc	(___aodiv@dividend+7)^0,f,c
  2316  000B0E  0E01               	movlw	1
  2317  000B10  1A18               	xorwf	___aodiv@sign^0,f,c
  2318  000B12                     l1944:
  2319  000B12  EE20  F019         	lfsr	2,___aodiv@quotient
  2320  000B16  0E07               	movlw	7
  2321  000B18                     u1561:
  2322  000B18  6ADE               	clrf	postinc2,c
  2323  000B1A  06E8               	decf	wreg,f,c
  2324  000B1C  E2FD               	bc	u1561
  2325  000B1E  500F               	movf	___aodiv@divisor^0,w,c
  2326  000B20  1010               	iorwf	(___aodiv@divisor+1)^0,w,c
  2327  000B22  1011               	iorwf	(___aodiv@divisor+2)^0,w,c
  2328  000B24  1012               	iorwf	(___aodiv@divisor+3)^0,w,c
  2329  000B26  1013               	iorwf	(___aodiv@divisor+4)^0,w,c
  2330  000B28  1014               	iorwf	(___aodiv@divisor+5)^0,w,c
  2331  000B2A  1015               	iorwf	(___aodiv@divisor+6)^0,w,c
  2332  000B2C  1016               	iorwf	(___aodiv@divisor+7)^0,w,c
  2333  000B2E  B4D8               	btfsc	status,2,c
  2334  000B30  EF9C  F005         	goto	u1571
  2335  000B34  EF9E  F005         	goto	u1570
  2336  000B38                     u1571:
  2337  000B38  EFF0  F005         	goto	l1966
  2338  000B3C                     u1570:
  2339  000B3C  0E01               	movlw	1
  2340  000B3E  6E17               	movwf	___aodiv@counter^0,c
  2341  000B40  EFAC  F005         	goto	l1952
  2342  000B44                     l1950:
  2343  000B44  90D8               	bcf	status,0,c
  2344  000B46  360F               	rlcf	___aodiv@divisor^0,f,c
  2345  000B48  3610               	rlcf	(___aodiv@divisor+1)^0,f,c
  2346  000B4A  3611               	rlcf	(___aodiv@divisor+2)^0,f,c
  2347  000B4C  3612               	rlcf	(___aodiv@divisor+3)^0,f,c
  2348  000B4E  3613               	rlcf	(___aodiv@divisor+4)^0,f,c
  2349  000B50  3614               	rlcf	(___aodiv@divisor+5)^0,f,c
  2350  000B52  3615               	rlcf	(___aodiv@divisor+6)^0,f,c
  2351  000B54  3616               	rlcf	(___aodiv@divisor+7)^0,f,c
  2352  000B56  2A17               	incf	___aodiv@counter^0,f,c
  2353  000B58                     l1952:
  2354  000B58  AE16               	btfss	(___aodiv@divisor+7)^0,7,c
  2355  000B5A  EFB1  F005         	goto	u1581
  2356  000B5E  EFB3  F005         	goto	u1580
  2357  000B62                     u1581:
  2358  000B62  EFA2  F005         	goto	l1950
  2359  000B66                     u1580:
  2360  000B66                     l1954:
  2361  000B66  90D8               	bcf	status,0,c
  2362  000B68  3619               	rlcf	___aodiv@quotient^0,f,c
  2363  000B6A  361A               	rlcf	(___aodiv@quotient+1)^0,f,c
  2364  000B6C  361B               	rlcf	(___aodiv@quotient+2)^0,f,c
  2365  000B6E  361C               	rlcf	(___aodiv@quotient+3)^0,f,c
  2366  000B70  361D               	rlcf	(___aodiv@quotient+4)^0,f,c
  2367  000B72  361E               	rlcf	(___aodiv@quotient+5)^0,f,c
  2368  000B74  361F               	rlcf	(___aodiv@quotient+6)^0,f,c
  2369  000B76  3620               	rlcf	(___aodiv@quotient+7)^0,f,c
  2370  000B78  500F               	movf	___aodiv@divisor^0,w,c
  2371  000B7A  5C07               	subwf	___aodiv@dividend^0,w,c
  2372  000B7C  5010               	movf	(___aodiv@divisor+1)^0,w,c
  2373  000B7E  5808               	subwfb	(___aodiv@dividend+1)^0,w,c
  2374  000B80  5011               	movf	(___aodiv@divisor+2)^0,w,c
  2375  000B82  5809               	subwfb	(___aodiv@dividend+2)^0,w,c
  2376  000B84  5012               	movf	(___aodiv@divisor+3)^0,w,c
  2377  000B86  580A               	subwfb	(___aodiv@dividend+3)^0,w,c
  2378  000B88  5013               	movf	(___aodiv@divisor+4)^0,w,c
  2379  000B8A  580B               	subwfb	(___aodiv@dividend+4)^0,w,c
  2380  000B8C  5014               	movf	(___aodiv@divisor+5)^0,w,c
  2381  000B8E  580C               	subwfb	(___aodiv@dividend+5)^0,w,c
  2382  000B90  5015               	movf	(___aodiv@divisor+6)^0,w,c
  2383  000B92  580D               	subwfb	(___aodiv@dividend+6)^0,w,c
  2384  000B94  5016               	movf	(___aodiv@divisor+7)^0,w,c
  2385  000B96  580E               	subwfb	(___aodiv@dividend+7)^0,w,c
  2386  000B98  A0D8               	btfss	status,0,c
  2387  000B9A  EFD1  F005         	goto	u1591
  2388  000B9E  EFD3  F005         	goto	u1590
  2389  000BA2                     u1591:
  2390  000BA2  EFE4  F005         	goto	l1962
  2391  000BA6                     u1590:
  2392  000BA6  500F               	movf	___aodiv@divisor^0,w,c
  2393  000BA8  5E07               	subwf	___aodiv@dividend^0,f,c
  2394  000BAA  5010               	movf	(___aodiv@divisor+1)^0,w,c
  2395  000BAC  5A08               	subwfb	(___aodiv@dividend+1)^0,f,c
  2396  000BAE  5011               	movf	(___aodiv@divisor+2)^0,w,c
  2397  000BB0  5A09               	subwfb	(___aodiv@dividend+2)^0,f,c
  2398  000BB2  5012               	movf	(___aodiv@divisor+3)^0,w,c
  2399  000BB4  5A0A               	subwfb	(___aodiv@dividend+3)^0,f,c
  2400  000BB6  5013               	movf	(___aodiv@divisor+4)^0,w,c
  2401  000BB8  5A0B               	subwfb	(___aodiv@dividend+4)^0,f,c
  2402  000BBA  5014               	movf	(___aodiv@divisor+5)^0,w,c
  2403  000BBC  5A0C               	subwfb	(___aodiv@dividend+5)^0,f,c
  2404  000BBE  5015               	movf	(___aodiv@divisor+6)^0,w,c
  2405  000BC0  5A0D               	subwfb	(___aodiv@dividend+6)^0,f,c
  2406  000BC2  5016               	movf	(___aodiv@divisor+7)^0,w,c
  2407  000BC4  5A0E               	subwfb	(___aodiv@dividend+7)^0,f,c
  2408  000BC6  8019               	bsf	___aodiv@quotient^0,0,c
  2409  000BC8                     l1962:
  2410  000BC8  90D8               	bcf	status,0,c
  2411  000BCA  3216               	rrcf	(___aodiv@divisor+7)^0,f,c
  2412  000BCC  3215               	rrcf	(___aodiv@divisor+6)^0,f,c
  2413  000BCE  3214               	rrcf	(___aodiv@divisor+5)^0,f,c
  2414  000BD0  3213               	rrcf	(___aodiv@divisor+4)^0,f,c
  2415  000BD2  3212               	rrcf	(___aodiv@divisor+3)^0,f,c
  2416  000BD4  3211               	rrcf	(___aodiv@divisor+2)^0,f,c
  2417  000BD6  3210               	rrcf	(___aodiv@divisor+1)^0,f,c
  2418  000BD8  320F               	rrcf	___aodiv@divisor^0,f,c
  2419  000BDA  2E17               	decfsz	___aodiv@counter^0,f,c
  2420  000BDC  EFB3  F005         	goto	l1954
  2421  000BE0                     l1966:
  2422  000BE0  5018               	movf	___aodiv@sign^0,w,c
  2423  000BE2  B4D8               	btfsc	status,2,c
  2424  000BE4  EFF6  F005         	goto	u1601
  2425  000BE8  EFF8  F005         	goto	u1600
  2426  000BEC                     u1601:
  2427  000BEC  EF08  F006         	goto	l1970
  2428  000BF0                     u1600:
  2429  000BF0  1E20               	comf	(___aodiv@quotient+7)^0,f,c
  2430  000BF2  1E1F               	comf	(___aodiv@quotient+6)^0,f,c
  2431  000BF4  1E1E               	comf	(___aodiv@quotient+5)^0,f,c
  2432  000BF6  1E1D               	comf	(___aodiv@quotient+4)^0,f,c
  2433  000BF8  1E1C               	comf	(___aodiv@quotient+3)^0,f,c
  2434  000BFA  1E1B               	comf	(___aodiv@quotient+2)^0,f,c
  2435  000BFC  1E1A               	comf	(___aodiv@quotient+1)^0,f,c
  2436  000BFE  6C19               	negf	___aodiv@quotient^0,c
  2437  000C00  0E00               	movlw	0
  2438  000C02  221A               	addwfc	(___aodiv@quotient+1)^0,f,c
  2439  000C04  221B               	addwfc	(___aodiv@quotient+2)^0,f,c
  2440  000C06  221C               	addwfc	(___aodiv@quotient+3)^0,f,c
  2441  000C08  221D               	addwfc	(___aodiv@quotient+4)^0,f,c
  2442  000C0A  221E               	addwfc	(___aodiv@quotient+5)^0,f,c
  2443  000C0C  221F               	addwfc	(___aodiv@quotient+6)^0,f,c
  2444  000C0E  2220               	addwfc	(___aodiv@quotient+7)^0,f,c
  2445  000C10                     l1970:
  2446  000C10  C019  F007         	movff	___aodiv@quotient,?___aodiv
  2447  000C14  C01A  F008         	movff	___aodiv@quotient+1,?___aodiv+1
  2448  000C18  C01B  F009         	movff	___aodiv@quotient+2,?___aodiv+2
  2449  000C1C  C01C  F00A         	movff	___aodiv@quotient+3,?___aodiv+3
  2450  000C20  C01D  F00B         	movff	___aodiv@quotient+4,?___aodiv+4
  2451  000C24  C01E  F00C         	movff	___aodiv@quotient+5,?___aodiv+5
  2452  000C28  C01F  F00D         	movff	___aodiv@quotient+6,?___aodiv+6
  2453  000C2C  C020  F00E         	movff	___aodiv@quotient+7,?___aodiv+7
  2454  000C30  0012               	return		;funcret
  2455  000C32                     __end_of___aodiv:
  2456                           	opt callstack 0
  2457                           
  2458 ;; *************** function _Send2Lcd *****************
  2459 ;; Defined at:
  2460 ;;		line 199 in file "main.c"
  2461 ;; Parameters:    Size  Location     Type
  2462 ;;  Adr             1    wreg     const unsigned char 
  2463 ;;  Lcd             2   12[COMRAM] PTR const unsigned char 
  2464 ;;		 -> STR_2(18), main@s(10), 
  2465 ;; Auto vars:     Size  Location     Type
  2466 ;;  Adr             1   14[COMRAM] const unsigned char 
  2467 ;; Return value:  Size  Location     Type
  2468 ;;                  1    wreg      void 
  2469 ;; Registers used:
  2470 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2471 ;; Tracked objects:
  2472 ;;		On entry : 0/0
  2473 ;;		On exit  : 0/0
  2474 ;;		Unchanged: 0/0
  2475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2476 ;;      Params:         2       0       0       0       0       0       0
  2477 ;;      Locals:         1       0       0       0       0       0       0
  2478 ;;      Temps:          0       0       0       0       0       0       0
  2479 ;;      Totals:         3       0       0       0       0       0       0
  2480 ;;Total ram usage:        3 bytes
  2481 ;; Hardware stack levels used:    1
  2482 ;; Hardware stack levels required when called:    5
  2483 ;; This function calls:
  2484 ;;		_Cmd
  2485 ;;		_Data
  2486 ;; This function is called by:
  2487 ;;		_main
  2488 ;; This function uses a non-reentrant model
  2489 ;;
  2490                           
  2491                           	psect	text13
  2492  0010F6                     __ptext13:
  2493                           	opt callstack 0
  2494  0010F6                     _Send2Lcd:
  2495                           	opt callstack 25
  2496                           
  2497                           ;incstack = 0
  2498                           ;Send2Lcd@Adr stored from wreg
  2499  0010F6  6E0F               	movwf	Send2Lcd@Adr^0,c
  2500  0010F8                     
  2501                           ;main.c: 199: void Send2Lcd(const char Adr, const char *Lcd);main.c: 200: {;main.c: 201:
      +                            Cmd(Adr);
  2502  0010F8  C00F  F00B         	movff	Send2Lcd@Adr,Cmd@Value
  2503  0010FC  6A0C               	clrf	(Cmd@Value+1)^0,c
  2504  0010FE  ECB5  F009         	call	_Cmd	;wreg free
  2505                           
  2506                           ;main.c: 202:  while(*Lcd!='\0')
  2507  001102  EF97  F008         	goto	l1762
  2508  001106                     l1758:
  2509                           
  2510                           ;main.c: 203:  {;main.c: 204:   Data(*Lcd);
  2511  001106  C00D  FFF6         	movff	Send2Lcd@Lcd,tblptrl
  2512  00110A  C00E  FFF7         	movff	Send2Lcd@Lcd+1,tblptrh
  2513  00110E  6AF8               	clrf	tblptru,c
  2514  001110  0E05               	movlw	(high __ramtop+-1)
  2515  001112  64F7               	cpfsgt	tblptrh,c
  2516  001114  D003               	bra	u1317
  2517  001116  0008               	tblrd		*
  2518  001118  50F5               	movf	tablat,w,c
  2519  00111A  D005               	bra	u1310
  2520  00111C                     u1317:
  2521  00111C  CFF6 FFE1          	movff	tblptrl,fsr1l
  2522  001120  CFF7 FFE2          	movff	tblptrh,fsr1h
  2523  001124  50E7               	movf	indf1,w,c
  2524  001126                     u1310:
  2525  001126  ECA6  F009         	call	_Data
  2526  00112A                     
  2527                           ;main.c: 205:   Lcd++;
  2528  00112A  4A0D               	infsnz	Send2Lcd@Lcd^0,f,c
  2529  00112C  2A0E               	incf	(Send2Lcd@Lcd+1)^0,f,c
  2530  00112E                     l1762:
  2531                           
  2532                           ;main.c: 202:  while(*Lcd!='\0')
  2533  00112E  C00D  FFF6         	movff	Send2Lcd@Lcd,tblptrl
  2534  001132  C00E  FFF7         	movff	Send2Lcd@Lcd+1,tblptrh
  2535  001136  6AF8               	clrf	tblptru,c
  2536  001138  0E05               	movlw	(high __ramtop+-1)
  2537  00113A  64F7               	cpfsgt	tblptrh,c
  2538  00113C  D003               	bra	u1327
  2539  00113E  0008               	tblrd		*
  2540  001140  50F5               	movf	tablat,w,c
  2541  001142  D005               	bra	u1320
  2542  001144                     u1327:
  2543  001144  CFF6 FFE1          	movff	tblptrl,fsr1l
  2544  001148  CFF7 FFE2          	movff	tblptrh,fsr1h
  2545  00114C  50E7               	movf	indf1,w,c
  2546  00114E                     u1320:
  2547  00114E  0900               	iorlw	0
  2548  001150  A4D8               	btfss	status,2,c
  2549  001152  EFAD  F008         	goto	u1331
  2550  001156  EFAF  F008         	goto	u1330
  2551  00115A                     u1331:
  2552  00115A  EF83  F008         	goto	l1758
  2553  00115E                     u1330:
  2554  00115E  0012               	return		;funcret
  2555  001160                     __end_of_Send2Lcd:
  2556                           	opt callstack 0
  2557                           
  2558 ;; *************** function _Data *****************
  2559 ;; Defined at:
  2560 ;;		line 181 in file "main.c"
  2561 ;; Parameters:    Size  Location     Type
  2562 ;;  Value           1    wreg     unsigned char 
  2563 ;; Auto vars:     Size  Location     Type
  2564 ;;  Value           1   11[COMRAM] unsigned char 
  2565 ;;  v               1   10[COMRAM] volatile unsigned char 
  2566 ;; Return value:  Size  Location     Type
  2567 ;;                  1    wreg      void 
  2568 ;; Registers used:
  2569 ;;		wreg, status,2, status,0, cstack
  2570 ;; Tracked objects:
  2571 ;;		On entry : 0/0
  2572 ;;		On exit  : 0/0
  2573 ;;		Unchanged: 0/0
  2574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2575 ;;      Params:         0       0       0       0       0       0       0
  2576 ;;      Locals:         2       0       0       0       0       0       0
  2577 ;;      Temps:          0       0       0       0       0       0       0
  2578 ;;      Totals:         2       0       0       0       0       0       0
  2579 ;;Total ram usage:        2 bytes
  2580 ;; Hardware stack levels used:    1
  2581 ;; Hardware stack levels required when called:    4
  2582 ;; This function calls:
  2583 ;;		_Delay_us
  2584 ;; This function is called by:
  2585 ;;		_Send2Lcd
  2586 ;; This function uses a non-reentrant model
  2587 ;;
  2588                           
  2589                           	psect	text14
  2590  00134C                     __ptext14:
  2591                           	opt callstack 0
  2592  00134C                     _Data:
  2593                           	opt callstack 25
  2594                           
  2595                           ;incstack = 0
  2596                           ;Data@Value stored from wreg
  2597  00134C  6E0C               	movwf	Data@Value^0,c
  2598  00134E                     
  2599                           ;main.c: 181: void Data(char Value);main.c: 182: {;main.c: 183:  volatile char v = Value
      +                          ;
  2600  00134E  C00C  F00B         	movff	Data@Value,Data@v	;volatile
  2601                           
  2602                           ;main.c: 184:  PORTD = Value;
  2603  001352  C00C  FF83         	movff	Data@Value,3971	;volatile
  2604  001356                     
  2605                           ;main.c: 185:  RC0 = 1;
  2606  001356  8082               	bsf	3970,0,c	;volatile
  2607  001358                     
  2608                           ;main.c: 186:  RC1 = 1;
  2609  001358  8282               	bsf	3970,1,c	;volatile
  2610  00135A                     
  2611                           ;main.c: 187:  Delay_us(25);
  2612  00135A  0E00               	movlw	0
  2613  00135C  6E08               	movwf	(Delay_us@us+1)^0,c
  2614  00135E  0E19               	movlw	25
  2615  001360  6E07               	movwf	Delay_us@us^0,c
  2616  001362  EC67  F009         	call	_Delay_us	;wreg free
  2617  001366                     
  2618                           ;main.c: 188:  RC1 = 0;
  2619  001366  9282               	bcf	3970,1,c	;volatile
  2620  001368  0012               	return		;funcret
  2621  00136A                     __end_of_Data:
  2622                           	opt callstack 0
  2623                           
  2624 ;; *************** function _Cmd *****************
  2625 ;; Defined at:
  2626 ;;		line 165 in file "main.c"
  2627 ;; Parameters:    Size  Location     Type
  2628 ;;  Value           2   10[COMRAM] int 
  2629 ;; Auto vars:     Size  Location     Type
  2630 ;;		None
  2631 ;; Return value:  Size  Location     Type
  2632 ;;                  1    wreg      void 
  2633 ;; Registers used:
  2634 ;;		wreg, status,2, status,0, cstack
  2635 ;; Tracked objects:
  2636 ;;		On entry : 0/0
  2637 ;;		On exit  : 0/0
  2638 ;;		Unchanged: 0/0
  2639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2640 ;;      Params:         2       0       0       0       0       0       0
  2641 ;;      Locals:         0       0       0       0       0       0       0
  2642 ;;      Temps:          0       0       0       0       0       0       0
  2643 ;;      Totals:         2       0       0       0       0       0       0
  2644 ;;Total ram usage:        2 bytes
  2645 ;; Hardware stack levels used:    1
  2646 ;; Hardware stack levels required when called:    4
  2647 ;; This function calls:
  2648 ;;		_Delay_us
  2649 ;; This function is called by:
  2650 ;;		_main
  2651 ;;		_Send2Lcd
  2652 ;; This function uses a non-reentrant model
  2653 ;;
  2654                           
  2655                           	psect	text15
  2656  00136A                     __ptext15:
  2657                           	opt callstack 0
  2658  00136A                     _Cmd:
  2659                           	opt callstack 25
  2660  00136A                     
  2661                           ;main.c: 165: void Cmd(int Value);main.c: 166: {;main.c: 167:  PORTD = Value;
  2662  00136A  C00B  FF83         	movff	Cmd@Value,3971	;volatile
  2663                           
  2664                           ;main.c: 168:  RC0 = 0;
  2665  00136E  9082               	bcf	3970,0,c	;volatile
  2666                           
  2667                           ;main.c: 169:  RC1 = 1;
  2668  001370  8282               	bsf	3970,1,c	;volatile
  2669  001372                     
  2670                           ;main.c: 170:  Delay_us(25);
  2671  001372  0E00               	movlw	0
  2672  001374  6E08               	movwf	(Delay_us@us+1)^0,c
  2673  001376  0E19               	movlw	25
  2674  001378  6E07               	movwf	Delay_us@us^0,c
  2675  00137A  EC67  F009         	call	_Delay_us	;wreg free
  2676  00137E                     
  2677                           ;main.c: 171:  RC1 = 0;
  2678  00137E  9282               	bcf	3970,1,c	;volatile
  2679  001380  0012               	return		;funcret
  2680  001382                     __end_of_Cmd:
  2681                           	opt callstack 0
  2682                           
  2683 ;; *************** function _Delay_us *****************
  2684 ;; Defined at:
  2685 ;;		line 216 in file "main.c"
  2686 ;; Parameters:    Size  Location     Type
  2687 ;;  us              2    6[COMRAM] int 
  2688 ;; Auto vars:     Size  Location     Type
  2689 ;;		None
  2690 ;; Return value:  Size  Location     Type
  2691 ;;                  1    wreg      void 
  2692 ;; Registers used:
  2693 ;;		wreg, status,2, status,0
  2694 ;; Tracked objects:
  2695 ;;		On entry : 0/0
  2696 ;;		On exit  : 0/0
  2697 ;;		Unchanged: 0/0
  2698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2699 ;;      Params:         2       0       0       0       0       0       0
  2700 ;;      Locals:         0       0       0       0       0       0       0
  2701 ;;      Temps:          2       0       0       0       0       0       0
  2702 ;;      Totals:         4       0       0       0       0       0       0
  2703 ;;Total ram usage:        4 bytes
  2704 ;; Hardware stack levels used:    1
  2705 ;; Hardware stack levels required when called:    3
  2706 ;; This function calls:
  2707 ;;		Nothing
  2708 ;; This function is called by:
  2709 ;;		_main
  2710 ;;		_Cmd
  2711 ;;		_Data
  2712 ;; This function uses a non-reentrant model
  2713 ;;
  2714                           
  2715                           	psect	text16
  2716  0012CE                     __ptext16:
  2717                           	opt callstack 0
  2718  0012CE                     _Delay_us:
  2719                           	opt callstack 25
  2720  0012CE                     
  2721                           ;main.c: 216: void Delay_us(int us);main.c: 217: {;main.c: 218:  us=us>>1;
  2722  0012CE  3408               	rlcf	(Delay_us@us+1)^0,w,c
  2723  0012D0  3008               	rrcf	(Delay_us@us+1)^0,w,c
  2724  0012D2  6E09               	movwf	??_Delay_us^0,c
  2725  0012D4  3007               	rrcf	Delay_us@us^0,w,c
  2726  0012D6  6E07               	movwf	Delay_us@us^0,c
  2727  0012D8  C009  F008         	movff	??_Delay_us,Delay_us@us+1
  2728                           
  2729                           ;main.c: 219:  while(us!=1)
  2730  0012DC  EF73  F009         	goto	l1670
  2731  0012E0                     l1668:
  2732                           
  2733                           ;main.c: 220:  us--;
  2734  0012E0  0607               	decf	Delay_us@us^0,f,c
  2735  0012E2  A0D8               	btfss	status,0,c
  2736  0012E4  0608               	decf	(Delay_us@us+1)^0,f,c
  2737  0012E6                     l1670:
  2738                           
  2739                           ;main.c: 219:  while(us!=1)
  2740  0012E6  0407               	decf	Delay_us@us^0,w,c
  2741  0012E8  1008               	iorwf	(Delay_us@us+1)^0,w,c
  2742  0012EA  A4D8               	btfss	status,2,c
  2743  0012EC  EF7A  F009         	goto	u1241
  2744  0012F0  EF7C  F009         	goto	u1240
  2745  0012F4                     u1241:
  2746  0012F4  EF70  F009         	goto	l1668
  2747  0012F8                     u1240:
  2748  0012F8  0012               	return		;funcret
  2749  0012FA                     __end_of_Delay_us:
  2750                           	opt callstack 0
  2751                           
  2752 ;; *************** function _isr *****************
  2753 ;; Defined at:
  2754 ;;		line 82 in file "main.c"
  2755 ;; Parameters:    Size  Location     Type
  2756 ;;		None
  2757 ;; Auto vars:     Size  Location     Type
  2758 ;;		None
  2759 ;; Return value:  Size  Location     Type
  2760 ;;                  1    wreg      void 
  2761 ;; Registers used:
  2762 ;;		wreg, status,2, status,0, cstack
  2763 ;; Tracked objects:
  2764 ;;		On entry : 0/0
  2765 ;;		On exit  : 0/0
  2766 ;;		Unchanged: 0/0
  2767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2768 ;;      Params:         0       0       0       0       0       0       0
  2769 ;;      Locals:         0       0       0       0       0       0       0
  2770 ;;      Temps:          0       0       0       0       0       0       0
  2771 ;;      Totals:         0       0       0       0       0       0       0
  2772 ;;Total ram usage:        0 bytes
  2773 ;; Hardware stack levels used:    1
  2774 ;; Hardware stack levels required when called:    2
  2775 ;; This function calls:
  2776 ;;		i2_Cmd
  2777 ;; This function is called by:
  2778 ;;		Interrupt level 2
  2779 ;; This function uses a non-reentrant model
  2780 ;;
  2781                           
  2782                           	psect	intcode
  2783  000008                     __pintcode:
  2784                           	opt callstack 0
  2785  000008                     _isr:
  2786                           	opt callstack 20
  2787                           
  2788                           ;incstack = 0
  2789  000008  8275               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2790  00000A  EDCB  F006         	call	int_func,f	;refresh shadow registers
  2791                           
  2792                           	psect	intcode_body
  2793  000D96                     __pintcode_body:
  2794                           	opt callstack 20
  2795  000D96                     int_func:
  2796                           	opt callstack 20
  2797  000D96  0006               	pop		; remove dummy address from shadow register refresh
  2798  000D98                     
  2799                           ;main.c: 84:     if(PIR1bits.TMR2IF == 1){
  2800  000D98  A29E               	btfss	158,1,c	;volatile
  2801  000D9A  EFD1  F006         	goto	i2u134_41
  2802  000D9E  EFD3  F006         	goto	i2u134_40
  2803  000DA2                     i2u134_41:
  2804  000DA2  EF47  F007         	goto	i2l124
  2805  000DA6                     i2u134_40:
  2806  000DA6                     
  2807                           ;main.c: 85:         if(run){
  2808  000DA6  5071               	movf	_run^0,w,c
  2809  000DA8  1072               	iorwf	(_run+1)^0,w,c
  2810  000DAA  B4D8               	btfsc	status,2,c
  2811  000DAC  EFDA  F006         	goto	i2u135_41
  2812  000DB0  EFDC  F006         	goto	i2u135_40
  2813  000DB4                     i2u135_41:
  2814  000DB4  EFEF  F006         	goto	i2l1782
  2815  000DB8                     i2u135_40:
  2816  000DB8                     
  2817                           ;main.c: 86:             times++;
  2818  000DB8  4A73               	infsnz	_times^0,f,c
  2819  000DBA  2A74               	incf	(_times+1)^0,f,c
  2820  000DBC                     
  2821                           ;main.c: 87:             if(times == 100){
  2822  000DBC  0E64               	movlw	100
  2823  000DBE  1873               	xorwf	_times^0,w,c
  2824  000DC0  1074               	iorwf	(_times+1)^0,w,c
  2825  000DC2  A4D8               	btfss	status,2,c
  2826  000DC4  EFE6  F006         	goto	i2u136_41
  2827  000DC8  EFE8  F006         	goto	i2u136_40
  2828  000DCC                     i2u136_41:
  2829  000DCC  EFEF  F006         	goto	i2l1782
  2830  000DD0                     i2u136_40:
  2831  000DD0                     
  2832                           ;main.c: 88:                 i++;
  2833  000DD0  0100               	movlb	0	; () banked
  2834  000DD2  4B82               	infsnz	_i& (0+255),f,b
  2835  000DD4  2B83               	incf	(_i+1)& (0+255),f,b
  2836  000DD6                     
  2837                           ; BSR set to: 0
  2838                           ;main.c: 89:                 times = 0;
  2839  000DD6  0E00               	movlw	0
  2840  000DD8  6E74               	movwf	(_times+1)^0,c
  2841  000DDA  0E00               	movlw	0
  2842  000DDC  6E73               	movwf	_times^0,c
  2843  000DDE                     i2l1782:
  2844                           
  2845                           ;main.c: 92:         if(PORTCbits.RC5 == 0){
  2846  000DDE  BA82               	btfsc	130,5,c	;volatile
  2847  000DE0  EFF4  F006         	goto	i2u137_41
  2848  000DE4  EFF6  F006         	goto	i2u137_40
  2849  000DE8                     i2u137_41:
  2850  000DE8  EF04  F007         	goto	i2l1790
  2851  000DEC                     i2u137_40:
  2852  000DEC                     
  2853                           ;main.c: 93:             if(run == 1){
  2854  000DEC  0471               	decf	_run^0,w,c
  2855  000DEE  1072               	iorwf	(_run+1)^0,w,c
  2856  000DF0  A4D8               	btfss	status,2,c
  2857  000DF2  EFFD  F006         	goto	i2u138_41
  2858  000DF6  EFFF  F006         	goto	i2u138_40
  2859  000DFA                     i2u138_41:
  2860  000DFA  EF03  F007         	goto	i2l1788
  2861  000DFE                     i2u138_40:
  2862  000DFE                     
  2863                           ;main.c: 94:                 run = 0;
  2864  000DFE  0E00               	movlw	0
  2865  000E00  6E72               	movwf	(_run+1)^0,c
  2866  000E02  0E00               	movlw	0
  2867  000E04  6E71               	movwf	_run^0,c
  2868  000E06                     i2l1788:
  2869                           
  2870                           ;main.c: 96:             PORTCbits.RC5 = 1;
  2871  000E06  8A82               	bsf	130,5,c	;volatile
  2872  000E08                     i2l1790:
  2873                           
  2874                           ;main.c: 98:         if(PORTCbits.RC4 == 0){
  2875  000E08  B882               	btfsc	130,4,c	;volatile
  2876  000E0A  EF09  F007         	goto	i2u139_41
  2877  000E0E  EF0B  F007         	goto	i2u139_40
  2878  000E12                     i2u139_41:
  2879  000E12  EF31  F007         	goto	i2l1802
  2880  000E16                     i2u139_40:
  2881  000E16                     
  2882                           ;main.c: 99:             Cmd(0X38);
  2883  000E16  0E00               	movlw	0
  2884  000E18  6E06               	movwf	(i2Cmd@Value+1)^0,c
  2885  000E1A  0E38               	movlw	56
  2886  000E1C  6E05               	movwf	i2Cmd@Value^0,c
  2887  000E1E  ECC1  F009         	call	i2_Cmd	;wreg free
  2888                           
  2889                           ;main.c: 100:             Cmd(0X0C);
  2890  000E22  0E00               	movlw	0
  2891  000E24  6E06               	movwf	(i2Cmd@Value+1)^0,c
  2892  000E26  0E0C               	movlw	12
  2893  000E28  6E05               	movwf	i2Cmd@Value^0,c
  2894  000E2A  ECC1  F009         	call	i2_Cmd	;wreg free
  2895                           
  2896                           ;main.c: 101:             Cmd(0X01);
  2897  000E2E  0E00               	movlw	0
  2898  000E30  6E06               	movwf	(i2Cmd@Value+1)^0,c
  2899  000E32  0E01               	movlw	1
  2900  000E34  6E05               	movwf	i2Cmd@Value^0,c
  2901  000E36  ECC1  F009         	call	i2_Cmd	;wreg free
  2902                           
  2903                           ;main.c: 102:             Cmd(0X06);
  2904  000E3A  0E00               	movlw	0
  2905  000E3C  6E06               	movwf	(i2Cmd@Value+1)^0,c
  2906  000E3E  0E06               	movlw	6
  2907  000E40  6E05               	movwf	i2Cmd@Value^0,c
  2908  000E42  ECC1  F009         	call	i2_Cmd	;wreg free
  2909  000E46                     
  2910                           ;main.c: 103:             run = 1;
  2911  000E46  0E00               	movlw	0
  2912  000E48  6E72               	movwf	(_run+1)^0,c
  2913  000E4A  0E01               	movlw	1
  2914  000E4C  6E71               	movwf	_run^0,c
  2915  000E4E                     
  2916                           ;main.c: 104:             i = 0;
  2917  000E4E  0E00               	movlw	0
  2918  000E50  0100               	movlb	0	; () banked
  2919  000E52  6F83               	movwf	(_i+1)& (0+255),b
  2920  000E54  0E00               	movlw	0
  2921  000E56  6F82               	movwf	_i& (0+255),b
  2922  000E58                     
  2923                           ; BSR set to: 0
  2924                           ;main.c: 105:             times = 0;
  2925  000E58  0E00               	movlw	0
  2926  000E5A  6E74               	movwf	(_times+1)^0,c
  2927  000E5C  0E00               	movlw	0
  2928  000E5E  6E73               	movwf	_times^0,c
  2929  000E60                     
  2930                           ; BSR set to: 0
  2931                           ;main.c: 106:             PORTCbits.RC4 = 1;
  2932  000E60  8882               	bsf	130,4,c	;volatile
  2933  000E62                     i2l1802:
  2934                           
  2935                           ;main.c: 108:         if(PORTCbits.RC3 == 0){
  2936  000E62  B682               	btfsc	130,3,c	;volatile
  2937  000E64  EF36  F007         	goto	i2u140_41
  2938  000E68  EF38  F007         	goto	i2u140_40
  2939  000E6C                     i2u140_41:
  2940  000E6C  EF46  F007         	goto	i2l1810
  2941  000E70                     i2u140_40:
  2942  000E70                     
  2943                           ;main.c: 109:             if(run == 1){
  2944  000E70  0471               	decf	_run^0,w,c
  2945  000E72  1072               	iorwf	(_run+1)^0,w,c
  2946  000E74  A4D8               	btfss	status,2,c
  2947  000E76  EF3F  F007         	goto	i2u141_41
  2948  000E7A  EF41  F007         	goto	i2u141_40
  2949  000E7E                     i2u141_41:
  2950  000E7E  EF45  F007         	goto	i2l1808
  2951  000E82                     i2u141_40:
  2952  000E82                     
  2953                           ;main.c: 110:                 run = 0;
  2954  000E82  0E00               	movlw	0
  2955  000E84  6E72               	movwf	(_run+1)^0,c
  2956  000E86  0E00               	movlw	0
  2957  000E88  6E71               	movwf	_run^0,c
  2958  000E8A                     i2l1808:
  2959                           
  2960                           ;main.c: 112:             PORTCbits.RC3 = 1;
  2961  000E8A  8682               	bsf	130,3,c	;volatile
  2962  000E8C                     i2l1810:
  2963                           
  2964                           ;main.c: 114:         PIR1bits.TMR2IF = 0;
  2965  000E8C  929E               	bcf	158,1,c	;volatile
  2966  000E8E                     i2l124:
  2967  000E8E  9275               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2968  000E90  0011               	retfie		f
  2969  000E92                     __end_of_isr:
  2970                           	opt callstack 0
  2971                           
  2972 ;; *************** function i2_Cmd *****************
  2973 ;; Defined at:
  2974 ;;		line 165 in file "main.c"
  2975 ;; Parameters:    Size  Location     Type
  2976 ;;  Value           2    4[COMRAM] int 
  2977 ;; Auto vars:     Size  Location     Type
  2978 ;;		None
  2979 ;; Return value:  Size  Location     Type
  2980 ;;                  1    wreg      void 
  2981 ;; Registers used:
  2982 ;;		wreg, status,2, status,0, cstack
  2983 ;; Tracked objects:
  2984 ;;		On entry : 0/0
  2985 ;;		On exit  : 0/0
  2986 ;;		Unchanged: 0/0
  2987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2988 ;;      Params:         2       0       0       0       0       0       0
  2989 ;;      Locals:         0       0       0       0       0       0       0
  2990 ;;      Temps:          0       0       0       0       0       0       0
  2991 ;;      Totals:         2       0       0       0       0       0       0
  2992 ;;Total ram usage:        2 bytes
  2993 ;; Hardware stack levels used:    1
  2994 ;; Hardware stack levels required when called:    1
  2995 ;; This function calls:
  2996 ;;		i2_Delay_us
  2997 ;; This function is called by:
  2998 ;;		_isr
  2999 ;; This function uses a non-reentrant model
  3000 ;;
  3001                           
  3002                           	psect	text18
  3003  001382                     __ptext18:
  3004                           	opt callstack 0
  3005  001382                     i2_Cmd:
  3006                           	opt callstack 20
  3007  001382                     
  3008                           ;main.c: 165: void Cmd(int Value);main.c: 166: {;main.c: 167:  PORTD = Value;
  3009  001382  C005  FF83         	movff	i2Cmd@Value,3971	;volatile
  3010                           
  3011                           ;main.c: 168:  RC0 = 0;
  3012  001386  9082               	bcf	3970,0,c	;volatile
  3013                           
  3014                           ;main.c: 169:  RC1 = 1;
  3015  001388  8282               	bsf	3970,1,c	;volatile
  3016  00138A                     
  3017                           ;main.c: 170:  Delay_us(25);
  3018  00138A  0E00               	movlw	0
  3019  00138C  6E02               	movwf	(i2Delay_us@us+1)^0,c
  3020  00138E  0E19               	movlw	25
  3021  001390  6E01               	movwf	i2Delay_us@us^0,c
  3022  001392  EC7D  F009         	call	i2_Delay_us	;wreg free
  3023  001396                     
  3024                           ;main.c: 171:  RC1 = 0;
  3025  001396  9282               	bcf	3970,1,c	;volatile
  3026  001398  0012               	return		;funcret
  3027  00139A                     __end_ofi2_Cmd:
  3028                           	opt callstack 0
  3029                           
  3030 ;; *************** function i2_Delay_us *****************
  3031 ;; Defined at:
  3032 ;;		line 216 in file "main.c"
  3033 ;; Parameters:    Size  Location     Type
  3034 ;;  us              2    0[COMRAM] int 
  3035 ;; Auto vars:     Size  Location     Type
  3036 ;;		None
  3037 ;; Return value:  Size  Location     Type
  3038 ;;                  1    wreg      void 
  3039 ;; Registers used:
  3040 ;;		wreg, status,2, status,0
  3041 ;; Tracked objects:
  3042 ;;		On entry : 0/0
  3043 ;;		On exit  : 0/0
  3044 ;;		Unchanged: 0/0
  3045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3046 ;;      Params:         2       0       0       0       0       0       0
  3047 ;;      Locals:         0       0       0       0       0       0       0
  3048 ;;      Temps:          2       0       0       0       0       0       0
  3049 ;;      Totals:         4       0       0       0       0       0       0
  3050 ;;Total ram usage:        4 bytes
  3051 ;; Hardware stack levels used:    1
  3052 ;; This function calls:
  3053 ;;		Nothing
  3054 ;; This function is called by:
  3055 ;;		i2_Cmd
  3056 ;; This function uses a non-reentrant model
  3057 ;;
  3058                           
  3059                           	psect	text19
  3060  0012FA                     __ptext19:
  3061                           	opt callstack 0
  3062  0012FA                     i2_Delay_us:
  3063                           	opt callstack 20
  3064  0012FA                     
  3065                           ;main.c: 216: void Delay_us(int us);main.c: 217: {;main.c: 218:  us=us>>1;
  3066  0012FA  3402               	rlcf	(i2Delay_us@us+1)^0,w,c
  3067  0012FC  3002               	rrcf	(i2Delay_us@us+1)^0,w,c
  3068  0012FE  6E03               	movwf	??i2_Delay_us^0,c
  3069  001300  3001               	rrcf	i2Delay_us@us^0,w,c
  3070  001302  6E01               	movwf	i2Delay_us@us^0,c
  3071  001304  C003  F002         	movff	??i2_Delay_us,i2Delay_us@us+1
  3072                           
  3073                           ;main.c: 219:  while(us!=1)
  3074  001308  EF89  F009         	goto	i2l1742
  3075  00130C                     i2l1740:
  3076                           
  3077                           ;main.c: 220:  us--;
  3078  00130C  0601               	decf	i2Delay_us@us^0,f,c
  3079  00130E  A0D8               	btfss	status,0,c
  3080  001310  0602               	decf	(i2Delay_us@us+1)^0,f,c
  3081  001312                     i2l1742:
  3082                           
  3083                           ;main.c: 219:  while(us!=1)
  3084  001312  0401               	decf	i2Delay_us@us^0,w,c
  3085  001314  1002               	iorwf	(i2Delay_us@us+1)^0,w,c
  3086  001316  A4D8               	btfss	status,2,c
  3087  001318  EF90  F009         	goto	i2u130_41
  3088  00131C  EF92  F009         	goto	i2u130_40
  3089  001320                     i2u130_41:
  3090  001320  EF86  F009         	goto	i2l1740
  3091  001324                     i2u130_40:
  3092  001324  0012               	return		;funcret
  3093  001326                     __end_ofi2_Delay_us:
  3094                           	opt callstack 0
  3095                           
  3096                           	psect	rparam
  3097  0000                     
  3098                           	psect	temp
  3099  000075                     btemp:
  3100                           	opt callstack 0
  3101  000075                     	ds	1
  3102  0000                     int$flags	set	btemp
  3103  0000                     wtemp8	set	btemp+1
  3104  0000                     ttemp5	set	btemp+1
  3105  0000                     ttemp6	set	btemp+4
  3106  0000                     ttemp7	set	btemp+8
  3107                           tosu	equ	0xFFF
  3108                           tosh	equ	0xFFE
  3109                           tosl	equ	0xFFD
  3110                           stkptr	equ	0xFFC
  3111                           pclatu	equ	0xFFB
  3112                           pclath	equ	0xFFA
  3113                           pcl	equ	0xFF9
  3114                           tblptru	equ	0xFF8
  3115                           tblptrh	equ	0xFF7
  3116                           tblptrl	equ	0xFF6
  3117                           tablat	equ	0xFF5
  3118                           prodh	equ	0xFF4
  3119                           prodl	equ	0xFF3
  3120                           indf0	equ	0xFEF
  3121                           postinc0	equ	0xFEE
  3122                           postdec0	equ	0xFED
  3123                           preinc0	equ	0xFEC
  3124                           plusw0	equ	0xFEB
  3125                           fsr0h	equ	0xFEA
  3126                           fsr0l	equ	0xFE9
  3127                           wreg	equ	0xFE8
  3128                           indf1	equ	0xFE7
  3129                           postinc1	equ	0xFE6
  3130                           postdec1	equ	0xFE5
  3131                           preinc1	equ	0xFE4
  3132                           plusw1	equ	0xFE3
  3133                           fsr1h	equ	0xFE2
  3134                           fsr1l	equ	0xFE1
  3135                           bsr	equ	0xFE0
  3136                           indf2	equ	0xFDF
  3137                           postinc2	equ	0xFDE
  3138                           postdec2	equ	0xFDD
  3139                           preinc2	equ	0xFDC
  3140                           plusw2	equ	0xFDB
  3141                           fsr2h	equ	0xFDA
  3142                           fsr2l	equ	0xFD9
  3143                           status	equ	0xFD8


Data Sizes:
    Strings     24
    Constant    0
    Data        0
    BSS         51
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    101     116
    BANK0           128     20      56
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 10
		 -> main@s(BANK0[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@s(BANK0[10]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1109_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@s(BANK0[10]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@s(BANK0[10]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    Send2Lcd@Lcd	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_2(CODE[18]), main@s(BANK0[10]), 

    display.PORT	PTR volatile unsigned char  size(2) Largest target is 0

    S24$PORT	PTR volatile unsigned char  size(2) Largest target is 0

    lcd.PORT	PTR volatile unsigned char  size(2) Largest target is 0


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _Send2Lcd->_Cmd
    _Send2Lcd->_Data
    _Data->_Delay_us
    _Cmd->_Delay_us

Critical Paths under _isr in COMRAM

    _isr->i2_Cmd
    i2_Cmd->i2_Delay_us

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0   11365
                                             10 BANK0     10    10      0
                                _Cmd
                           _Delay_us
                           _Send2Lcd
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8    8417
                                             93 COMRAM     8     0      8
                                              0 BANK0     10    10      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    7931
                                             85 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6    7458
                                             69 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    5683
                                             33 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3417
                                             22 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                              6 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1537
                                             15 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1037
                                              6 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             24 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                              6 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              6 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _Send2Lcd                                             3     1      2    1566
                                             12 COMRAM     3     1      2
                                _Cmd
                               _Data
 ---------------------------------------------------------------------------------
 (2) _Data                                                 2     2      0     395
                                             10 COMRAM     2     2      0
                           _Delay_us
 ---------------------------------------------------------------------------------
 (2) _Cmd                                                  2     0      2     952
                                             10 COMRAM     2     0      2
                           _Delay_us
 ---------------------------------------------------------------------------------
 (3) _Delay_us                                             4     2      2     350
                                              6 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _isr                                                  0     0      0     198
                              i2_Cmd
 ---------------------------------------------------------------------------------
 (10) i2_Cmd                                               2     0      2     198
                                              4 COMRAM     2     0      2
                         i2_Delay_us
 ---------------------------------------------------------------------------------
 (11) i2_Delay_us                                          4     2      2      72
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Cmd
     _Delay_us
   _Delay_us
   _Send2Lcd
     _Cmd
       _Delay_us
     _Data
       _Delay_us
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _fputc
           _putch

 _isr (ROOT)
   i2_Cmd
     i2_Delay_us

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     14      38       5       43.8%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     65      74       1       92.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      AC      15        0.0%
DATA                 0      0      AC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Dec 30 21:12:10 2019

                      _i 0082              __CFG_BORV$3 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
                    l222 11B8                      l151 12F8                      l223 11C0  
                    l136 1380                      l216 0AA8                      l145 115E  
                    l209 08F6                      l139 1368                      l340 0C30  
                    l181 10BA                      l183 10F4                      l191 06C0  
                    l353 0D94                      l178 1078                      l189 06B8  
                    l901 128E                      l904 1296                      l931 1212  
                    l916 1032                      l924 1256                      l940 12CC  
                    l934 139A             __CFG_CPB$OFF 000000                      _RC0 007C10  
                    _RC1 007C11                      _PR2 000FCB             __CFG_CPD$OFF 000000  
                    _Cmd 136A                      _abs 1258                      _lcd 0066  
                    _pad 1034                      _isr 0008                      _run 0071  
                    wreg 000FE8             __CFG_IESO$ON 000000             __CFG_LVP$OFF 000000  
                   ?_Cmd 000B             __CFG_WDT$OFF 000000                     l2000 0D3E  
                   l2002 0D44                     l2010 061A                     ?_abs 0019  
                   l2004 0D54                     l2020 0692                     l2012 063A  
                   l2100 0A58                     l2006 0D74                     l2030 06EE  
                   l2022 06AC                     l2014 0662                     l2102 0A66  
                   l2040 078E                     l2032 06F6                     l2024 06C8  
                   l2016 0682                     l2120 119C                     l2050 084A  
                   l2042 0794                     l2034 0700                     l2026 06DA  
                   l2018 0690                     l2106 0A72                     l2114 1160  
                   l2130 1200                     l2122 11C2                     l2060 0898  
                   l2052 0864                     l2036 0706                     l2044 07F8  
                   l2028 06E8                     l2108 0A96                     l2116 1168  
                   l2124 11D4                     l2140 0E9E                     l2062 08AA  
                   l2046 0812                     l2054 0872                     l2038 0788  
                   l2118 1176                     l2126 11DC                     l2150 0EA8  
                   l2142 0EA0                     l2134 0E92                     l2064 08B6  
                   l2056 0884                     l2048 0830                     l2080 093E  
                   l2072 08F8                     l2128 11E4                     l2160 0EB2  
                   l2152 0EAA                     l2144 0EA2                     l2136 0E9A  
                   l2066 08BE                     l2058 0892                     l2090 0A06  
                   l2082 0962                     l2074 091C                     l2170 0EC0  
                   l2162 0EB4                     l2154 0EAC                     l2146 0EA4  
                   l2138 0E9C                     l2068 08CE                     l2092 0A2A  
                   l2084 0986                     l2076 092A                     l2180 0EFC  
                   l2172 0ECC                     l2164 0EB6                     l2156 0EAE  
                   l2148 0EA6                     l2094 0A38                     l2086 09CE  
                   l2078 093A                     l2190 0F54                     l2182 0F04  
                   l2174 0ED8                     l2166 0EB8                     l2158 0EB0  
                   l1720 134E                     l2096 0A4C                     l2184 0F16  
                   l2176 0EE4                     l2168 0EBA                     l1714 136A  
                   l1722 1356                     l2186 0F22                     l2178 0EF0  
                   l1716 1372                     l1724 1358                     l1900 12C0  
                   l2188 0F46                     l1670 12E6                     l1718 137E  
                   l1726 135A                     l1910 1064                     l1728 1366  
                   l1760 112A                     l1920 10C8                     l1912 1070  
                   l1904 1034                     l1666 12CE                     l1762 112E  
                   l1930 0AAA                     l1922 10DC                     l1914 1084  
                   l1906 1042                     l1668 12E0                     l1756 10F8  
                   l1940 0AEE                     l1932 0AAE                     l1916 1098  
                   l1908 1056                     l1758 1106                     l1950 0B44  
                   l1942 0B0E                     l1934 0ABC                     l1926 1258  
                   l1918 109C                     l1960 0BC6                     l1952 0B58  
                   l1944 0B12                     l1936 0ADC                     l1928 1272  
                   l1880 0FB6                     l1872 0F6A                     l1970 0C10  
                   l1962 0BC8                     l1954 0B66                     l1946 0B1E  
                   l1938 0AE0                     l1882 0FEC                     l1874 0F7C  
                   l1890 1232                     l1964 0BDA                     l1956 0B78  
                   l1948 0B3C                     l1980 0C64                     l1876 0F8E  
                   l1892 1236                     l1958 0BA6                     l1966 0BE0  
                   l1990 0CBC                     l1982 0C68                     l1974 0C32  
                   l1878 0F98                     l1886 1214                     l1894 1298  
                   ?_pad 0017                     l1968 0BF0                     l1992 0CD0  
                   l1984 0C76                     l1976 0C36                     l1888 1220  
                   l1896 12A4                     l1994 0CDE                     l1986 0C96  
                   l1978 0C44                     l1898 12A8                     l1996 0D0C  
                   l1988 0CB4                     l1998 0D2C                     ?_isr 0001  
                   STR_1 0613                     STR_2 0601                     u1310 1126  
                   u1240 12F8                     u1320 114E                     u1241 12F4  
                   u1330 115E                     u1331 115A                     u1500 1064  
                   u1317 111C                     u1501 1060                     u1430 0F7C  
                   u1510 10BA                     u1327 1144                     u1431 0F78  
                   u1511 10B6                     u1600 0BF0                     u1440 0F8E  
                   u1520 10C8                     u1601 0BEC                     u1441 0F8A  
                   u1521 10C4                     u1610 0C44                     u1530 1272  
                   u1450 0FB6                     u1611 0C40                     u1531 126E  
                   u1451 0FB2                     u1540 0ABC                     u1620 0C76  
                   u1460 0FEC                     u1700 0690                     u1541 0AB8  
                   u1621 0C72                     u1461 0FE8                     u1701 068C  
                   u1550 0AEE                     u1630 0CB4                     u1470 1256  
                   u1710 06AC                     u1551 0AEA                     u1631 0CB0  
                   u1471 1252                     u1711 06A8                     u1640 0CDE  
                   u1480 12C0                     u1800 0892                     u1720 06DA  
                   u1561 0B18                     u1641 0CDA                     u1481 12BC  
                   u1801 088E                     u1721 06D6                     u1570 0B3C  
                   u1650 0D0C                     u1490 1042                     u1810 08AA  
                   u1730 06E8                     u1571 0B38                     u1651 0D08  
                   u1491 103E                     u1811 08A6                     u1731 06E4  
                   u1580 0B66                     u1660 0D54                     u1740 0812  
                   u1820 091C                     u1581 0B62                     u1661 0D50  
                   u1741 080E                     u1821 0918                     u1590 0BA6  
                   u1750 0830                     u1670 064A                     u1830 0962  
                   u1591 0BA2                     u1751 082C                     u1671 0644  
                   u1831 095E                     u1760 084A                     u1680 064C  
                   u1840 0986                     u1761 0846                     u1841 0982  
                   u1770 0864                     u1690 0662                     u1850 0A2A  
                   u1771 0860                     u1691 065E                     u1851 0A26  
                   u1780 0872                     u1860 11B8                     u1781 086E  
                   u1861 11B4                     u1790 0884                     u1870 0F16  
                   u1791 0880                     u1871 0F12             __CFG_WDTPS$1 000000  
                   _Data 134C                     abs@a 0019                     _dbuf 0084  
                   _main 0E92                     _dtoa 061A                     _prec 006D  
                   _nout 0080                     pad@i 001E                     pad@p 001B  
                   fsr1h 000FE2                     fsr2h 000FDA                     indf1 000FE7  
                   indf2 000FDF                     fsr1l 000FE1                     pad@w 0020  
                   fsr2l 000FD9                     btemp 0075            __CFG_BOREN$ON 000000  
                   start 000E            __CFG_MCLRE$ON 000000             ___param_bank 000000  
                  ??_Cmd 000D                    ??_abs 001B                    ??_pad 001D  
                  ??_isr 0007                    ?_Data 0001          __end_of___aodiv 0C32  
                  ?_main 0001                    ?_dtoa 0022          __end_of___aomod 0D96  
                  Data@v 000B                    i2l124 0E8E                    i2l151 1324  
                  i2l136 1398             vfpfcnvrt@fmt 0048                    i2_Cmd 1382  
                  _PORTA 000F80                    _PORTB 000F81                    _PORTC 000F82  
                  _PORTD 000F83                    _TRISA 000F92                    _TRISB 000F93  
                  _TRISC 000F94                    _TRISD 000F95            __CFG_PWRT$OFF 000000  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000              ?i2_Delay_us 0001           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000  
         __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000                    _flags 006F  
                  _fputc 0F6A                    _fputs 1214                    _times 0073  
                  pad@fp 0017                    _width 006B                    _putch 139A  
                  dtoa@d 0024                    main@s 00AE                    dtoa@i 0044  
                  dtoa@n 003C                    dtoa@p 0036                    dtoa@s 003A  
                  dtoa@w 0038                    tablat 000FF5                    ttemp5 0076  
                  ttemp6 0079                    ttemp7 007D                    status 000FD8  
                  wtemp8 0076          __end_of_sprintf 1214         __end_of_Delay_us 12FA  
           __end_of_Data 136A          __initialization 1326             __end_of_main 0F6A  
           __end_of_dtoa 08F8                   ??_Data 000B         __end_of_Send2Lcd 1160  
                 ??_main 0066                   ??_dtoa 002C            __activetblptr 000002  
            Send2Lcd@Adr 000F              Send2Lcd@Lcd 000D                   ?i2_Cmd 0005  
                 ?_fputc 0007                   ?_fputs 0010                   ?_putch 0001  
                 i2l1800 0E60                   i2l1810 0E8C                   i2l1802 0E62  
                 i2l1740 130C                   i2l1804 0E70                   i2l1742 1312  
                 i2l1806 0E82                   i2l1808 0E8A                   i2l1738 12FA  
                 i2l1770 0D98                   i2l1764 1382                   i2l1780 0DD6  
                 i2l1772 0DA6                   i2l1766 138A                   i2l1790 0E08  
                 i2l1774 0DB8                   i2l1782 0DDE                   i2l1768 1396  
                 i2l1792 0E16                   i2l1784 0DEC                   i2l1776 0DBC  
                 i2l1794 0E46                   i2l1786 0DFE                   i2l1778 0DD0  
                 i2l1796 0E4E                   i2l1788 0E06                   i2l1798 0E58  
         __CFG_XINST$OFF 000000             vfprintf@cfmt 005C      __size_ofi2_Delay_us 002C  
              ??___aodiv 0017                ??___aomod 0017           __CFG_STVREN$ON 000000  
                 clear_0 132C                   clear_1 1338                   pad@buf 0019  
                 dtoa@fp 0022                   _strlen 1298                   fputc@c 0007  
                 fputs@c 0014                   fputs@i 0015                   fputs@s 0010  
           __mediumconst 0000                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8                   putch@c 0001         __end_of_vfprintf 11C2  
              ??_sprintf 0066               __accesstop 0080  __end_of__initialization 133E  
        __CFG_PBADEN$OFF 000000            ___rparam_used 000001            __end_ofi2_Cmd 139A  
         __pcstackCOMRAM 0001            __end_of_fputc 1034            __end_of_fputs 1258  
          __end_of_putch 139C                  ??i2_Cmd 0007                ?_Delay_us 0007  
                ??_fputc 000B                  ??_fputs 0014                  ??_putch 0007  
             __pbssBANK0 0080                ?_Send2Lcd 000D                  ?_strlen 0007  
           ??i2_Delay_us 0003               ??_Delay_us 0009       __size_of_vfpfcnvrt 01B2  
             ??_Send2Lcd 000F                  __Hparam 0000                  __Lparam 0000  
                ___aodiv 0AAA                  ___aomod 0C32       __end_ofi2_Delay_us 1326  
              ?_vfprintf 0056             __psmallconst 0600                  __pcinit 1326  
                __ramtop 0600                Data@Value 000C                  __ptext0 0E92  
                __ptext1 11C2                  __ptext2 1160                  __ptext3 08F8  
                __ptext4 061A                  __ptext5 1034                  __ptext6 1298  
                __ptext7 1214                  __ptext8 0F6A                  __ptext9 139A  
        __size_of_strlen 0036             __size_of_Cmd 0018                _T2CONbits 000FCA  
           __size_of_abs 0040             __size_of_pad 00C2             __size_of_isr 0E8A  
                _sprintf 11C2           __pintcode_body 0D96     end_of_initialization 133E  
                fputc@fp 0009            __Lmediumconst 0000                  int_func 0D96  
                fputs@fp 0012        __end_of_vfpfcnvrt 0AAA                  postdec2 000FDD  
                postinc0 000FEE                  postinc1 000FE6                  postinc2 000FDE  
             ??_vfprintf 005C                  strlen@a 0009                  strlen@s 0007  
              _PORTCbits 000F82                _TRISCbits 000F94              vfpfcnvrt@ap 004A  
            vfpfcnvrt@fp 0046              vfpfcnvrt@ll 004E           __end_of_strlen 12CE  
    start_initialization 1326              __end_of_Cmd 1382              __end_of_abs 1298  
            __end_of_pad 10F6              __end_of_isr 0E92        __size_of_Delay_us 002C  
       __CFG_OSC$INTIO67 000000        __size_of_Send2Lcd 006A              vfprintf@fmt 0058  
       __CFG_LPT1OSC$OFF 000000                 ??_strlen 0009              __pbssCOMRAM 0066  
          __pcstackBANK0 00A4         ___aodiv@dividend 0007        __CFG_CCP2MX$PORTC 000000  
              __pintcode 0008                 ?___aodiv 0007                 ?___aomod 0007  
       ___aodiv@quotient 0019        __size_of_vfprintf 0062              __smallconst 0600  
         __size_ofi2_Cmd 0018                 Cmd@Value 000B             i2Delay_us@us 0001  
               ?_sprintf 005E           __size_of_fputc 00CA           __size_of_fputs 0044  
         __size_of_putch 0002                 _IPR1bits 000F9F                 _PIE1bits 000F9D  
               i2u130_40 1324                 i2u130_41 1320                 i2u140_40 0E70  
               i2u140_41 0E6C                 i2u141_40 0E82                 i2u141_41 0E7E  
               i2u134_40 0DA6                 i2u134_41 0DA2                 i2u135_40 0DB8  
               i2u135_41 0DB4                 i2u136_40 0DD0                 i2u136_41 0DCC  
               i2u137_40 0DEC                 i2u137_41 0DE8                 i2u138_40 0DFE  
               i2u138_41 0DFA                 i2u139_40 0E16                 i2u139_41 0E12  
               _PIR1bits 000F9E                 _RCONbits 000FD0                _vfpfcnvrt 08F8  
               _Delay_us 12CE                 _Send2Lcd 10F6                 __Hrparam 0000  
             vfprintf@ap 005A                 __Lrparam 0000               vfprintf@fp 0056  
       __size_of___aodiv 0188         __size_of___aomod 0164               ?_vfpfcnvrt 0046  
        ___aodiv@divisor 000F          ___aodiv@counter 0017               sprintf@fmt 0060  
               _dtoa$648 0034                 __ptext10 1258                 __ptext11 0C32  
               __ptext12 0AAA                 __ptext13 10F6                 __ptext14 134C  
               __ptext15 136A                 __ptext16 12CE                 __ptext18 1382  
               __ptext19 12FA         __size_of_sprintf 0052            __size_of_Data 001E  
          __size_of_main 00D8            __size_of_dtoa 02DE                 int$flags 0075  
               _vfprintf 1160         ___aomod@dividend 0007               _INTCONbits 000FF2  
             Delay_us@us 0007               i2Cmd@Value 0005                 intlevel2 0000  
              sprintf@ap 00A6               _OSCCONbits 000FD3          ___aomod@divisor 000F  
            ??_vfpfcnvrt 004C          ___aomod@counter 0017                 sprintf@f 00A8  
               sprintf@s 005E               i2_Delay_us 12FA             ___aodiv@sign 0018  
           ___aomod@sign 0018  
