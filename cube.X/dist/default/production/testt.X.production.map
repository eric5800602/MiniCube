Microchip MPLAB XC8 Compiler V2.10 ()

Linker command line:

-W-3 --edf=C:\Program Files (x86)\Microchip\xc8\v2.10\pic\dat\en_msgs.txt \
  -cs -h+dist/default/production\testt.X.production.sym \
  --cmf=dist/default/production\testt.X.production.cmf -z -Q18F4520 \
  -oC:\Users\User\AppData\Local\Temp\stko.2 --defsym=__MPLAB_BUILD=1 \
  -Mdist/default/production/testt.X.production.map -E1 -ver=XC8 \
  --acfsm=1493 -ASTACK=0196h-05FFh -pstack=STACK -ACODE=00h-07FFFh \
  -ACONST=00h-07FFFh -ASMALLCONST=0600h-06FFhx122 \
  -AMEDIUMCONST=0600h-07FFFh -ACOMRAM=01h-07Fh -AABS1=00h-05FFh \
  -ABIGRAM=01h-05FFh -ARAM=080h-0FFh,0100h-01FFhx5 -ABANK0=080h-0FFh \
  -ABANK1=0100h-01FFh -ABANK2=0200h-02FFh -ABANK3=0300h-03FFh \
  -ABANK4=0400h-04FFh -ABANK5=0500h-05FFh -ASFR=0F80h-0FFFh \
  -preset_vec=00h,intcode=08h,intcodelo,powerup,init -pramtop=0600h \
  -psmallconst=SMALLCONST -pmediumconst=MEDIUMCONST -pconst=CONST \
  -AFARRAM=00h-00h -ACONFIG=0300000h-030000Dh -pconfig=CONFIG \
  -AIDLOC=0200000h-0200007h -pidloc=IDLOC -AEEDATA=0F00000h-0F000FFh \
  -peeprom_data=EEDATA \
  -prdata=COMRAM,nvrram=COMRAM,nvbit=COMRAM,rbss=COMRAM,rbit=COMRAM \
  -pfarbss=FARRAM,fardata=FARRAM,nvFARRAM=FARRAM \
  -pintsave_regs=BIGRAM,bigbss=BIGRAM,bigdata=BIGRAM -pbss=RAM \
  -pidata=CODE,irdata=CODE,ibigdata=CODE,ifardata=CODE -prparam=COMRAM \
  C:\Users\User\AppData\Local\Temp\stko.o \
  dist/default/production\testt.X.production.o 

Object code version is 3.11

Machine type is 18F4520

Call graph: (short form)




                Name                               Link     Load   Length Selector   Space Scale
C:\Users\User\AppData\Local\Temp\stko.o
                init                                  E        E        4        4       0
                reset_vec                             0        0        4        0       0
                idloc                            200000   200000        8   200000       0
                config                           300000   300000        E   300000       0
dist/default/production\testt.X.production.o
                intcode                               8        8        6        4       0
                temp                                 6E       6E        1        1       1
                smallconst                          600      600       2A      300       0
                text41                             4166     4166       44      315       0
                text40                             3DAA     3DAA       B0      315       0
                text39                             41E0     41E0       34      315       0
                text38                             4250     4250       16      315       0
                text37                             3F7A     3F7A       7E      315       0
                text36                             426E     426E        2     2137       0
                text35                             3B68     3B68       CA      315       0
                text34                             41AA     41AA       36      315       0
                text33                             3102     3102      182      315       0
                text32                             3284     3284      164      315       0
                text31                             4068     4068       5E      315       0
                text30                             4118     4118       4E      315       0
                text29                             3FF8     3FF8       70      315       0
                intcode_body                        62A      62A      9C6      315       0
                text27                             4236     4236       1A      315       0
                text26                             3EFA     3EFA       80      315       0
                text25                             4214     4214       22      315       0
                text24                             3C32     3C32       C6      315       0
                text23                             3CF8     3CF8       B2      315       0
                text22                             180E     180E      244      315       0
                text21                             3E5A     3E5A       A0      315       0
                text20                             33E8     33E8      100      315       0
                text19                             2F1E     2F1E      1E4      315       0
                text18                             2D3A     2D3A      1E4      315       0
                text17                             2B56     2B56      1E4      315       0
                text16                             2972     2972      1E4      315       0
                text15                             278E     278E      1E4      315       0
                text14                             25AA     25AA      1E4      315       0
                text13                             3A88     3A88       E0      315       0
                text12                             23C6     23C6      1E4      315       0
                text11                             3998     3998       F0      315       0
                text10                             21E2     21E2      1E4      315       0
                text9                              38A8     38A8       F0      315       0
                text8                              1FFE     1FFE      1E4      315       0
                text7                              37B8     37B8       F0      315       0
                text6                              1E1A     1E1A      1E4      315       0
                text5                              36C8     36C8       F0      315       0
                text4                              1C36     1C36      1E4      315       0
                text3                              35D8     35D8       F0      315       0
                text2                              1A52     1A52      1E4      315       0
                text1                              34E8     34E8       F0      315       0
                text0                               FF0      FF0      81E      315       0
                cstackCOMRAM                          1        1       4A        1       1
                cstackBANK0                          80       80       39       80       1
                cstackBANK1                         152      152       44      100       1
                bssBANK1                            100      100       52      100       1
                bssBANK0                             B9       B9       30       80       1
                dataCOMRAM                           67       67        7        1       1
                bssCOMRAM                            4B       4B       1C        1       1
                cinit                              40C6     40C6       52      315       0
                idataCOMRAM                        4266     4266        7      315       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                intcode                               8        8        6         0
                init                                  E        E        4         0
                reset_vec                             0        0        4         0
                text41                             4166     4166       44         0
                text40                             3DAA     3DAA       B0         0
                text39                             41E0     41E0       34         0
                text38                             4250     4250       16         0
                text37                             3F7A     3F7A       7E         0
                text36                             426E     426E        2         0
                text35                             3B68     3B68       CA         0
                text34                             41AA     41AA       36         0
                text33                             3102     3102      182         0
                text32                             3284     3284      164         0
                text31                             4068     4068       5E         0
                text30                             4118     4118       4E         0
                text29                             3FF8     3FF8       70         0
                intcode_body                        62A      62A      9C6         0
                text27                             4236     4236       1A         0
                text26                             3EFA     3EFA       80         0
                text25                             4214     4214       22         0
                text24                             3C32     3C32       C6         0
                text23                             3CF8     3CF8       B2         0
                text22                             180E     180E      244         0
                text21                             3E5A     3E5A       A0         0
                text20                             33E8     33E8      100         0
                text19                             2F1E     2F1E      1E4         0
                text18                             2D3A     2D3A      1E4         0
                text17                             2B56     2B56      1E4         0
                text16                             2972     2972      1E4         0
                text15                             278E     278E      1E4         0
                text14                             25AA     25AA      1E4         0
                text13                             3A88     3A88       E0         0
                text12                             23C6     23C6      1E4         0
                text11                             3998     3998       F0         0
                text10                             21E2     21E2      1E4         0
                text9                              38A8     38A8       F0         0
                text8                              1FFE     1FFE      1E4         0
                text7                              37B8     37B8       F0         0
                text6                              1E1A     1E1A      1E4         0
                text5                              36C8     36C8       F0         0
                text4                              1C36     1C36      1E4         0
                text3                              35D8     35D8       F0         0
                text2                              1A52     1A52      1E4         0
                text1                              34E8     34E8       F0         0
                text0                               FF0      FF0      81E         0
                cinit                              40C6     40C6       52         0
                idataCOMRAM                        4266     4266        7         0

        CLASS   CONST          

        CLASS   SMALLCONST     
                smallconst                          600      600       2A         0

        CLASS   MEDIUMCONST    

        CLASS   COMRAM         
                temp                                 6E       6E        1         1
                cstackCOMRAM                          1        1       4A         1
                dataCOMRAM                           67       67        7         1
                bssCOMRAM                            4B       4B       1C         1

        CLASS   ABS1           

        CLASS   BIGRAM         

        CLASS   RAM            

        CLASS   BANK0          
                cstackBANK0                          80       80       39         1
                bssBANK0                             B9       B9       30         1

        CLASS   BANK1          
                cstackBANK1                         152      152       44         1
                bssBANK1                            100      100       52         1

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   BANK4          

        CLASS   BANK5          

        CLASS   SFR            

        CLASS   FARRAM         

        CLASS   CONFIG         
                config                           300000   300000        E         0

        CLASS   IDLOC          
                idloc                            200000   200000        8         0

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class

                reset_vec                      000000  000004  000004         0       0  CODE    
                cstackCOMRAM                   000001  00006E  00006F         1       1  COMRAM  
                intcode                        000008  00000A  000012         4       0  CODE    
                cstackBANK0                    000080  000069  0000E9        80       1  BANK0   
                bssBANK1                       000100  000096  000196       100       1  BANK1   
                smallconst                     000600  00002A  00062A       300       0  SMALLCON
                intcode_body                   00062A  003C43  00426D       315       0  CODE    
                text36                         00426E  000002  004270      2137       0  CODE    
                idloc                          200000  000008  200008    200000       0  IDLOC   
                config                         300000  00000E  30000E    300000       0  CONFIG  


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            0000E9-0000FF               17
        BANK1            000196-0001FF               6A
        BANK2            000200-0002FF              100
        BANK3            000300-0003FF              100
        BANK4            000400-0004FF              100
        BANK5            000500-0005FF              100
        BIGRAM           00006F-00007F               11
                         0000E9-0000FF               17
                         000196-0005FF              46A
        CODE             000004-000007                4
                         000012-0005FF              5EE
                         00426D-00426D                1
                         004270-007FFF             3D90
        COMRAM           00006F-00007F               11
        CONST            000004-000007                4
                         000012-0005FF              5EE
                         00426D-00426D                1
                         004270-007FFF             3D90
        EEDATA           F00000-F000FF              100
        MEDIUMCONST      00426D-00426D                1
                         004270-007FFF             3D90
        RAM              0000E9-0000FF               17
                         000196-0005FF              100
        SFR              000F80-000FFF               80
        SMALLCONST       00426D-00426D                1
                         004270-007FFF              100
        STACK            000196-0005FF              46A

                                  Symbol Table

?_ADC_Read                cstackBANK1  000152
?___awdiv                 cstackBANK1  000152
?___awmod                 cstackBANK1  000174
?___omul                  cstackBANK1  000152
?_rand                    cstackBANK1  00016A
?_sprintf                 cstackCOMRAM 000032
?_stoa                    cstackCOMRAM 00000A
?_strcmp                  cstackCOMRAM 000001
?_strlen                  cstackCOMRAM 000001
?_vfpfcnvrt               cstackCOMRAM 000020
?_vfprintf                cstackCOMRAM 00002A
?i2___awmod               cstackCOMRAM 000001
ADC_Read@channle          cstackBANK1  000152
ADC_Read@digital          cstackBANK1  000156
ClearBuffer@i             cstackCOMRAM 000001
UART_Write@data           cstackCOMRAM 000001
UART_Write_Text@i         cstackCOMRAM 000006
UART_Write_Text@text      cstackCOMRAM 000002
_ADCON0bits               (abs)        000FC2
_ADCON1                   (abs)        000FC1
_ADCON2                   (abs)        000FC0
_ADCON2bits               (abs)        000FC0
_ADC_Initialize           text27       004236
_ADC_Read                 text26       003EFA
_ADFM                     (abs)        007E07
_ADRESH                   (abs)        000FC4
_ADRESL                   (abs)        000FC3
_BAUDCONbits              (abs)        000FB8
_CREN                     (abs)        007D5C
_ClearBuffer              text41       004166
_INTCONbits               (abs)        000FF2
_IPR1bits                 (abs)        000F9F
_LATA                     (abs)        000F89
_LATAbits                 (abs)        000F89
_LATB                     (abs)        000F8A
_LATBbits                 (abs)        000F8A
_LATC                     (abs)        000F8B
_LATCbits                 (abs)        000F8B
_LATD                     (abs)        000F8C
_LATDbits                 (abs)        000F8C
_MyusartRead              text39       0041E0
_OSCCONbits               (abs)        000FD3
_PIE1bits                 (abs)        000F9D
_PIR1bits                 (abs)        000F9E
_PORTA                    (abs)        000F80
_PORTAbits                (abs)        000F80
_PR2                      (abs)        000FCB
_RCIF                     (abs)        007CF5
_RCONbits                 (abs)        000FD0
_RCREG                    (abs)        000FAE
_RCSTAbits                (abs)        000FAB
_SPBRG                    (abs)        000FAF
_T2CONbits                (abs)        000FCA
_TRISA                    (abs)        000F92
_TRISAbits                (abs)        000F92
_TRISB                    (abs)        000F93
_TRISC                    (abs)        000F94
_TRISCbits                (abs)        000F94
_TRISD                    (abs)        000F95
_TXREG                    (abs)        000FAD
_TXSTAbits                (abs)        000FAC
_UART_Initialize          text25       004214
_UART_Write               text38       004250
_UART_Write_Text          text37       003F7A
__CFG_BOREN$SBORDIS       (abs)        000000
__CFG_BORV$3              (abs)        000000
__CFG_CCP2MX$PORTC        (abs)        000000
__CFG_CP0$OFF             (abs)        000000
__CFG_CP1$OFF             (abs)        000000
__CFG_CP2$OFF             (abs)        000000
__CFG_CP3$OFF             (abs)        000000
__CFG_CPB$OFF             (abs)        000000
__CFG_CPD$OFF             (abs)        000000
__CFG_EBTR0$OFF           (abs)        000000
__CFG_EBTR1$OFF           (abs)        000000
__CFG_EBTR2$OFF           (abs)        000000
__CFG_EBTR3$OFF           (abs)        000000
__CFG_EBTRB$OFF           (abs)        000000
__CFG_FCMEN$OFF           (abs)        000000
__CFG_IESO$OFF            (abs)        000000
__CFG_LPT1OSC$OFF         (abs)        000000
__CFG_LVP$OFF             (abs)        000000
__CFG_MCLRE$ON            (abs)        000000
__CFG_OSC$INTIO67         (abs)        000000
__CFG_PBADEN$OFF          (abs)        000000
__CFG_PWRT$OFF            (abs)        000000
__CFG_STVREN$ON           (abs)        000000
__CFG_WDT$OFF             (abs)        000000
__CFG_WDTPS$32768         (abs)        000000
__CFG_WRT0$OFF            (abs)        000000
__CFG_WRT1$OFF            (abs)        000000
__CFG_WRT2$OFF            (abs)        000000
__CFG_WRT3$OFF            (abs)        000000
__CFG_WRTB$OFF            (abs)        000000
__CFG_WRTC$OFF            (abs)        000000
__CFG_WRTD$OFF            (abs)        000000
__CFG_XINST$OFF           (abs)        000000
__HRAM                    (abs)        000000
__Habs1                   abs1         000000
__Hbank0                  bank0        000000
__Hbank1                  bank1        000000
__Hbank2                  bank2        000000
__Hbank3                  bank3        000000
__Hbank4                  bank4        000000
__Hbank5                  bank5        000000
__Hbigbss                 bigbss       000000
__Hbigdata                bigdata      000000
__Hbigram                 bigram       000000
__Hbss                    bss          000000
__HbssBANK0               bssBANK0     000000
__HbssBANK1               bssBANK1     000000
__HbssCOMRAM              bssCOMRAM    000000
__Hcinit                  cinit        000000
__Hclrtext                clrtext      000000
__Hcomram                 comram       000000
__Hconfig                 config       30000E
__Hconst                  const        000000
__HcstackBANK0            cstackBANK0  000000
__HcstackBANK1            cstackBANK1  000000
__HcstackCOMRAM           cstackCOMRAM 000000
__Hdata                   data         000000
__HdataCOMRAM             dataCOMRAM   000000
__Heeprom_data            eeprom_data  000000
__Hfarbss                 farbss       000000
__Hfardata                fardata      000000
__Hibigdata               ibigdata     000000
__Hidata                  idata        000000
__HidataCOMRAM            idataCOMRAM  000000
__Hidloc                  idloc        200008
__Hifardata               ifardata     000000
__Hinit                   init         000012
__Hintcode                intcode      00000E
__Hintcode_body           intcode_body 000000
__Hintcodelo              intcodelo    00000E
__Hintentry               intentry     000000
__Hintret                 intret       000000
__Hintsave_regs           intsave_regs 000000
__Hirdata                 irdata       000000
__Hmediumconst            mediumconst  000000
__HnvFARRAM               nvFARRAM     000000
__Hnvbit                  nvbit        000000
__Hnvrram                 nvrram       000000
__Hparam                  rparam       000000
__Hpowerup                powerup      00000E
__Hram                    ram          000000
__Hramtop                 ramtop       000600
__Hrbit                   rbit         000000
__Hrbss                   rbss         000000
__Hrdata                  rdata        000000
__Hreset_vec              reset_vec    000004
__Hrparam                 rparam       000000
__Hsfr                    sfr          000000
__Hsmallconst             smallconst   00062A
__Hspace_0                (abs)        30000E
__Hspace_1                (abs)        000196
__Hspace_2                (abs)        000000
__Hstack                  stack        000000
__Hstruct                 struct       000000
__Htemp                   temp         00006F
__Htext                   text         000000
__Htext0                  text0        000000
__Htext1                  text1        000000
__Htext10                 text10       000000
__Htext11                 text11       000000
__Htext12                 text12       000000
__Htext13                 text13       000000
__Htext14                 text14       000000
__Htext15                 text15       000000
__Htext16                 text16       000000
__Htext17                 text17       000000
__Htext18                 text18       000000
__Htext19                 text19       000000
__Htext2                  text2        000000
__Htext20                 text20       000000
__Htext21                 text21       000000
__Htext22                 text22       000000
__Htext23                 text23       000000
__Htext24                 text24       000000
__Htext25                 text25       000000
__Htext26                 text26       000000
__Htext27                 text27       000000
__Htext29                 text29       000000
__Htext3                  text3        000000
__Htext30                 text30       000000
__Htext31                 text31       000000
__Htext32                 text32       000000
__Htext33                 text33       000000
__Htext34                 text34       000000
__Htext35                 text35       000000
__Htext36                 text36       000000
__Htext37                 text37       000000
__Htext38                 text38       000000
__Htext39                 text39       000000
__Htext4                  text4        000000
__Htext40                 text40       000000
__Htext41                 text41       000000
__Htext5                  text5        000000
__Htext6                  text6        000000
__Htext7                  text7        000000
__Htext8                  text8        000000
__Htext9                  text9        000000
__LRAM                    (abs)        000001
__Labs1                   abs1         000000
__Lbank0                  bank0        000000
__Lbank1                  bank1        000000
__Lbank2                  bank2        000000
__Lbank3                  bank3        000000
__Lbank4                  bank4        000000
__Lbank5                  bank5        000000
__Lbigbss                 bigbss       000000
__Lbigdata                bigdata      000000
__Lbigram                 bigram       000000
__Lbss                    bss          000000
__LbssBANK0               bssBANK0     000000
__LbssBANK1               bssBANK1     000000
__LbssCOMRAM              bssCOMRAM    000000
__Lcinit                  cinit        000000
__Lclrtext                clrtext      000000
__Lcomram                 comram       000000
__Lconfig                 config       300000
__Lconst                  const        000000
__LcstackBANK0            cstackBANK0  000000
__LcstackBANK1            cstackBANK1  000000
__LcstackCOMRAM           cstackCOMRAM 000000
__Ldata                   data         000000
__LdataCOMRAM             dataCOMRAM   000000
__Leeprom_data            eeprom_data  000000
__Lfarbss                 farbss       000000
__Lfardata                fardata      000000
__Libigdata               ibigdata     000000
__Lidata                  idata        000000
__LidataCOMRAM            idataCOMRAM  000000
__Lidloc                  idloc        200000
__Lifardata               ifardata     000000
__Linit                   init         00000E
__Lintcode                intcode      000008
__Lintcode_body           intcode_body 000000
__Lintcodelo              intcodelo    00000E
__Lintentry               intentry     000000
__Lintret                 intret       000000
__Lintsave_regs           intsave_regs 000000
__Lirdata                 irdata       000000
__Lmediumconst            mediumconst  000000
__LnvFARRAM               nvFARRAM     000000
__Lnvbit                  nvbit        000000
__Lnvrram                 nvrram       000000
__Lparam                  rparam       000000
__Lpowerup                powerup      00000E
__Lram                    ram          000000
__Lramtop                 ramtop       000600
__Lrbit                   rbit         000000
__Lrbss                   rbss         000000
__Lrdata                  rdata        000000
__Lreset_vec              reset_vec    000000
__Lrparam                 rparam       000000
__Lsfr                    sfr          000000
__Lsmallconst             smallconst   000600
__Lspace_0                (abs)        000000
__Lspace_1                (abs)        000000
__Lspace_2                (abs)        000000
__Lstack                  stack        000000
__Lstruct                 struct       000000
__Ltemp                   temp         00006E
__Ltext                   text         000000
__Ltext0                  text0        000000
__Ltext1                  text1        000000
__Ltext10                 text10       000000
__Ltext11                 text11       000000
__Ltext12                 text12       000000
__Ltext13                 text13       000000
__Ltext14                 text14       000000
__Ltext15                 text15       000000
__Ltext16                 text16       000000
__Ltext17                 text17       000000
__Ltext18                 text18       000000
__Ltext19                 text19       000000
__Ltext2                  text2        000000
__Ltext20                 text20       000000
__Ltext21                 text21       000000
__Ltext22                 text22       000000
__Ltext23                 text23       000000
__Ltext24                 text24       000000
__Ltext25                 text25       000000
__Ltext26                 text26       000000
__Ltext27                 text27       000000
__Ltext29                 text29       000000
__Ltext3                  text3        000000
__Ltext30                 text30       000000
__Ltext31                 text31       000000
__Ltext32                 text32       000000
__Ltext33                 text33       000000
__Ltext34                 text34       000000
__Ltext35                 text35       000000
__Ltext36                 text36       000000
__Ltext37                 text37       000000
__Ltext38                 text38       000000
__Ltext39                 text39       000000
__Ltext4                  text4        000000
__Ltext40                 text40       000000
__Ltext41                 text41       000000
__Ltext5                  text5        000000
__Ltext6                  text6        000000
__Ltext7                  text7        000000
__Ltext8                  text8        000000
__Ltext9                  text9        000000
__S0                      (abs)        30000E
__S1                      (abs)        000196
__S2                      (abs)        000000
___awdiv                  text24       003C32
___awdiv@counter          cstackBANK1  000156
___awdiv@dividend         cstackBANK1  000152
___awdiv@divisor          cstackBANK1  000154
___awdiv@quotient         cstackBANK1  000158
___awdiv@sign             cstackBANK1  000157
___awmod                  text23       003CF8
___awmod@counter          cstackBANK1  000178
___awmod@dividend         cstackBANK1  000174
___awmod@divisor          cstackBANK1  000176
___awmod@sign             cstackBANK1  000179
___inthi_sp               stack        000000
___intlo_sp               stack        000000
___omul                   text21       003E5A
___omul@multiplicand      cstackBANK1  00015A
___omul@multiplier        cstackBANK1  000152
___omul@product           cstackBANK1  000162
___param_bank             (abs)        000000
___rparam_used            (abs)        000001
___sp                     stack        000000
__accesstop               (abs)        000080
__activetblptr            (abs)        000002
__end_of_ADC_Initialize   text27       004250
__end_of_ADC_Read         text26       003F7A
__end_of_ClearBuffer      text41       0041AA
__end_of_MyusartRead      text39       004214
__end_of_UART_Initialize  text25       004236
__end_of_UART_Write       text38       004266
__end_of_UART_Write_Text  text37       003FF8
__end_of___awdiv          text24       003CF8
__end_of___awmod          text23       003DAA
__end_of___omul           text21       003EFA
__end_of__initialization  cinit        00410A
__end_of_fputc            text35       003C32
__end_of_initial          text22       001A52
__end_of_isr              intcode_body 000FF0
__end_of_main             text0        00180E
__end_of_putch            text36       004270
__end_of_rand             text20       0034E8
__end_of_random_cube      text13       003B68
__end_of_rb               text19       003102
__end_of_rb_u             text12       0025AA
__end_of_rl               text18       002F1E
__end_of_rl_u             text10       0023C6
__end_of_rotate_bot       text11       003A88
__end_of_rotate_l         text9        003998
__end_of_rotate_r         text7        0038A8
__end_of_rotate_sidebot   text5        0037B8
__end_of_rotate_sidetop   text3        0036C8
__end_of_rotate_top       text1        0035D8
__end_of_rr               text17       002D3A
__end_of_rr_u             text8        0021E2
__end_of_rsb              text16       002B56
__end_of_rsb_u            text6        001FFE
__end_of_rst              text15       002972
__end_of_rst_u            text4        001E1A
__end_of_rt               text14       00278E
__end_of_rt_u             text2        001C36
__end_of_sprintf          text30       004166
__end_of_stoa             text33       003284
__end_of_strcmp           text29       004068
__end_of_strlen           text34       0041E0
__end_of_vfpfcnvrt        text32       0033E8
__end_of_vfprintf         text31       0040C6
__end_ofi2___awmod        text40       003E5A
__initialization          cinit        0040C6
__mediumconst             mediumconst  000000
__pbssBANK0               bssBANK0     0000B9
__pbssBANK1               bssBANK1     000100
__pbssCOMRAM              bssCOMRAM    00004B
__pcinit                  cinit        0040C6
__pcstackBANK0            cstackBANK0  000080
__pcstackBANK1            cstackBANK1  000152
__pcstackCOMRAM           cstackCOMRAM 000001
__pdataCOMRAM             dataCOMRAM   000067
__pidataCOMRAM            idataCOMRAM  004266
__pintcode                intcode      000008
__pintcode_body           intcode_body 00062A
__psmallconst             smallconst   000600
__ptext0                  text0        000FF0
__ptext1                  text1        0034E8
__ptext10                 text10       0021E2
__ptext11                 text11       003998
__ptext12                 text12       0023C6
__ptext13                 text13       003A88
__ptext14                 text14       0025AA
__ptext15                 text15       00278E
__ptext16                 text16       002972
__ptext17                 text17       002B56
__ptext18                 text18       002D3A
__ptext19                 text19       002F1E
__ptext2                  text2        001A52
__ptext20                 text20       0033E8
__ptext21                 text21       003E5A
__ptext22                 text22       00180E
__ptext23                 text23       003CF8
__ptext24                 text24       003C32
__ptext25                 text25       004214
__ptext26                 text26       003EFA
__ptext27                 text27       004236
__ptext29                 text29       003FF8
__ptext3                  text3        0035D8
__ptext30                 text30       004118
__ptext31                 text31       004068
__ptext32                 text32       003284
__ptext33                 text33       003102
__ptext34                 text34       0041AA
__ptext35                 text35       003B68
__ptext36                 text36       00426E
__ptext37                 text37       003F7A
__ptext38                 text38       004250
__ptext39                 text39       0041E0
__ptext4                  text4        001C36
__ptext40                 text40       003DAA
__ptext41                 text41       004166
__ptext5                  text5        0036C8
__ptext6                  text6        001E1A
__ptext7                  text7        0037B8
__ptext8                  text8        001FFE
__ptext9                  text9        0038A8
__ramtop                  ramtop       000600
__size_of_ADC_Initialize  (abs)        000000
__size_of_ADC_Read        (abs)        000000
__size_of_ClearBuffer     (abs)        000000
__size_of_MyusartRead     (abs)        000000
__size_of_UART_Initialize (abs)        000000
__size_of_UART_Write      (abs)        000000
__size_of_UART_Write_Text (abs)        000000
__size_of___awdiv         (abs)        000000
__size_of___awmod         (abs)        000000
__size_of___omul          (abs)        000000
__size_of_fputc           (abs)        000000
__size_of_initial         (abs)        000000
__size_of_isr             (abs)        000000
__size_of_main            (abs)        000000
__size_of_putch           (abs)        000000
__size_of_rand            (abs)        000000
__size_of_random_cube     (abs)        000000
__size_of_rb              (abs)        000000
__size_of_rb_u            (abs)        000000
__size_of_rl              (abs)        000000
__size_of_rl_u            (abs)        000000
__size_of_rotate_bot      (abs)        000000
__size_of_rotate_l        (abs)        000000
__size_of_rotate_r        (abs)        000000
__size_of_rotate_sidebot  (abs)        000000
__size_of_rotate_sidetop  (abs)        000000
__size_of_rotate_top      (abs)        000000
__size_of_rr              (abs)        000000
__size_of_rr_u            (abs)        000000
__size_of_rsb             (abs)        000000
__size_of_rsb_u           (abs)        000000
__size_of_rst             (abs)        000000
__size_of_rst_u           (abs)        000000
__size_of_rt              (abs)        000000
__size_of_rt_u            (abs)        000000
__size_of_sprintf         (abs)        000000
__size_of_stoa            (abs)        000000
__size_of_strcmp          (abs)        000000
__size_of_strlen          (abs)        000000
__size_of_vfpfcnvrt       (abs)        000000
__size_of_vfprintf        (abs)        000000
__size_ofi2___awmod       (abs)        000000
__smallconst              smallconst   000600
_flags                    bssCOMRAM    000051
_fputc                    text35       003B68
_initial                  text22       00180E
_isr                      intcode      000008
_lenStr                   bssBANK0     0000DF
_main                     text0        000FF0
_mystring                 bssCOMRAM    000053
_need_to_check            bssBANK0     0000DD
_nout                     bssCOMRAM    00004B
_original                 bssBANK0     0000D1
_prec                     bssCOMRAM    00004F
_putch                    text36       00426E
_rand                     text20       0033E8
_random_cube              text13       003A88
_rb                       text19       002F1E
_rb_u                     text12       0023C6
_rgb                      bssBANK0     0000B9
_rl                       text18       002D3A
_rl_u                     text10       0021E2
_rotate_bot               text11       003998
_rotate_l                 text9        0038A8
_rotate_r                 text7        0037B8
_rotate_sidebot           text5        0036C8
_rotate_sidetop           text3        0035D8
_rotate_top               text1        0034E8
_rr                       text17       002B56
_rr_u                     text8        001FFE
_rsb                      text16       002972
_rsb_u                    text6        001E1A
_rst                      text15       00278E
_rst_u                    text4        001C36
_rt                       text14       0025AA
_rt_u                     text2        001A52
_seed                     bssBANK0     0000E1
_sprintf                  text30       004118
_stoa                     text33       003102
_strcmp                   text29       003FF8
_strlen                   text34       0041AA
_vfpfcnvrt                text32       003284
_vfprintf                 text31       004068
_width                    bssCOMRAM    00004D
btemp                     temp         00006E
end_of_initialization     cinit        00410A
fputc@c                   cstackCOMRAM 000001
fputc@fp                  cstackCOMRAM 000003
i2___awmod                text40       003DAA
i2___awmod@counter        cstackCOMRAM 000005
i2___awmod@dividend       cstackCOMRAM 000001
i2___awmod@divisor        cstackCOMRAM 000003
i2___awmod@sign           cstackCOMRAM 000006
initial@i                 cstackBANK1  000152
int$flags                 temp         00006E
int_func                  intcode_body 00062A
intlevel0                 text         000000
intlevel1                 text         000000
intlevel2                 text         000000
intlevel3                 text         000000
isr@F2876                 bssBANK1     000100
isr@check                 cstackBANK0  0000B2
isr@i                     cstackBANK0  0000B7
isr@k                     cstackBANK0  0000B5
isr@str                   cstackBANK0  000080
isr@temp                  cstackBANK0  0000B4
main@i                    cstackBANK1  000192
main@j                    cstackBANK1  000190
main@temp                 cstackBANK1  000182
main@turn                 cstackBANK1  000194
main@val                  cstackBANK1  000184
main@val_1743             cstackBANK1  000186
main@val_1745             cstackBANK1  000188
main@val_1747             cstackBANK1  00018A
main@val_1749             cstackBANK1  00018C
main@val_1751             cstackBANK1  00018E
random_cube@j             cstackBANK1  00017E
random_cube@r             cstackBANK1  00017C
rb@tempa                  cstackBANK1  000152
rb@tempb                  cstackBANK1  000153
rb@tempc                  cstackBANK1  000154
rb_u@tempa                cstackBANK1  000154
rb_u@tempc                cstackBANK1  000152
rb_u@tempd                cstackBANK1  000153
rl@tempa                  cstackBANK1  000152
rl@tempb                  cstackBANK1  000153
rl@tempf                  cstackBANK1  000154
rl_u@tempc                cstackBANK1  000152
rl_u@tempd                cstackBANK1  000153
rl_u@tempf                cstackBANK1  000154
rotate_bot@buf            cstackBANK1  00015D
rotate_bot@buf_1409       cstackBANK1  00015F
rotate_bot@val            cstackBANK1  00015A
rotate_l@buf              cstackBANK1  00015D
rotate_l@buf_1165         cstackBANK1  00015F
rotate_l@val              cstackBANK1  00015A
rotate_r@buf              cstackBANK1  00015D
rotate_r@buf_1043         cstackBANK1  00015F
rotate_r@val              cstackBANK1  00015A
rotate_sidebot@buf        cstackBANK1  00015D
rotate_sidebot@buf_1653   cstackBANK1  00015F
rotate_sidebot@val        cstackBANK1  00015A
rotate_sidetop@buf        cstackBANK1  00015D
rotate_sidetop@buf_1531   cstackBANK1  00015F
rotate_sidetop@val        cstackBANK1  00015A
rotate_top@buf            cstackBANK1  00015D
rotate_top@buf_1287       cstackBANK1  00015F
rotate_top@val            cstackBANK1  00015A
rr@tempa                  cstackBANK1  000152
rr@tempb                  cstackBANK1  000153
rr@tempc                  cstackBANK1  000154
rr_u@tempc                cstackBANK1  000152
rr_u@tempd                cstackBANK1  000153
rr_u@tempf                cstackBANK1  000154
rsb@tempa                 cstackBANK1  000152
rsb@tempb                 cstackBANK1  000153
rsb@tempc                 cstackBANK1  000154
rsb_u@tempa               cstackBANK1  000154
rsb_u@tempc               cstackBANK1  000152
rsb_u@tempd               cstackBANK1  000153
rst@tempa                 cstackBANK1  000152
rst@tempb                 cstackBANK1  000153
rst@tempc                 cstackBANK1  000154
rst_u@tempa               cstackBANK1  000154
rst_u@tempc               cstackBANK1  000152
rst_u@tempd               cstackBANK1  000153
rt@tempa                  cstackBANK1  000152
rt@tempb                  cstackBANK1  000153
rt@tempc                  cstackBANK1  000154
rt_u@tempa                cstackBANK1  000154
rt_u@tempc                cstackBANK1  000152
rt_u@tempd                cstackBANK1  000153
sprintf@ap                cstackCOMRAM 00003A
sprintf@f                 cstackCOMRAM 00003C
sprintf@fmt               cstackCOMRAM 000034
sprintf@s                 cstackCOMRAM 000032
stackhi                   (abs)        0005FF
stacklo                   (abs)        000196
start                     init         00000E
start_initialization      cinit        0040C6
stoa@F1131                dataCOMRAM   000067
stoa@cp                   cstackCOMRAM 00001A
stoa@fp                   cstackCOMRAM 00000A
stoa@i                    cstackCOMRAM 000016
stoa@l                    cstackCOMRAM 00001E
stoa@nuls                 cstackCOMRAM 00000F
stoa@p                    cstackCOMRAM 00001C
stoa@s                    cstackCOMRAM 00000C
stoa@w                    cstackCOMRAM 000018
strcmp@l                  cstackCOMRAM 000001
strcmp@r                  cstackCOMRAM 000003
strlen@a                  cstackCOMRAM 000003
strlen@s                  cstackCOMRAM 000001
ttemp5                    temp         00006F
ttemp6                    temp         000072
ttemp7                    temp         000076
vfpfcnvrt@ap              cstackCOMRAM 000024
vfpfcnvrt@cp              cstackCOMRAM 000028
vfpfcnvrt@fmt             cstackCOMRAM 000022
vfpfcnvrt@fp              cstackCOMRAM 000020
vfprintf@ap               cstackCOMRAM 00002E
vfprintf@cfmt             cstackCOMRAM 000030
vfprintf@fmt              cstackCOMRAM 00002C
vfprintf@fp               cstackCOMRAM 00002A
wtemp8                    temp         00006F


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 671 in file "newmain.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  temp            2   48[BANK1 ] int 
  val             2   60[BANK1 ] int 
  val             2   58[BANK1 ] int 
  val             2   56[BANK1 ] int 
  val             2   54[BANK1 ] int 
  val             2   52[BANK1 ] int 
  val             2   50[BANK1 ] int 
  turn            2   66[BANK1 ] int 
  i               2   64[BANK1 ] int 
  j               2   62[BANK1 ] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0      20       0       0       0       0
      Temps:          0       0       2       0       0       0       0
      Totals:         0       0      22       0       0       0       0
Total ram usage:       22 bytes
 Hardware stack levels required when called:   10
 This function calls:
		_ADC_Initialize
		_ADC_Read
		_UART_Initialize
		___awdiv
		_initial
		_random_cube
		_rotate_bot
		_rotate_l
		_rotate_r
		_rotate_sidebot
		_rotate_sidetop
		_rotate_top
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _rotate_top *****************
 Defined at:
		line 424 in file "newmain.c"
 Parameters:    Size  Location     Type
  val             2    8[BANK1 ] int 
 Auto vars:     Size  Location     Type
  buf             2   13[BANK1 ] int 
  buf             2   11[BANK1 ] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       2       0       0       0       0
      Locals:         0       0       4       0       0       0       0
      Temps:          0       0       1       0       0       0       0
      Totals:         0       0       7       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_rt
		_rt_u
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _rt_u *****************
 Defined at:
		line 401 in file "newmain.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  tempa           1    2[BANK1 ] struct RGB
  tempd           1    1[BANK1 ] struct RGB
  tempc           1    0[BANK1 ] struct RGB
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       3       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_rotate_top
 This function uses a non-reentrant model


 *************** function _rotate_sidetop *****************
 Defined at:
		line 557 in file "newmain.c"
 Parameters:    Size  Location     Type
  val             2    8[BANK1 ] int 
 Auto vars:     Size  Location     Type
  buf             2   13[BANK1 ] int 
  buf             2   11[BANK1 ] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       2       0       0       0       0
      Locals:         0       0       4       0       0       0       0
      Temps:          0       0       1       0       0       0       0
      Totals:         0       0       7       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_rst
		_rst_u
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _rst_u *****************
 Defined at:
		line 534 in file "newmain.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  tempa           1    2[BANK1 ] struct RGB
  tempd           1    1[BANK1 ] struct RGB
  tempc           1    0[BANK1 ] struct RGB
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       3       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_rotate_sidetop
 This function uses a non-reentrant model


 *************** function _rotate_sidebot *****************
 Defined at:
		line 623 in file "newmain.c"
 Parameters:    Size  Location     Type
  val             2    8[BANK1 ] int 
 Auto vars:     Size  Location     Type
  buf             2   13[BANK1 ] int 
  buf             2   11[BANK1 ] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       2       0       0       0       0
      Locals:         0       0       4       0       0       0       0
      Temps:          0       0       1       0       0       0       0
      Totals:         0       0       7       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_rsb
		_rsb_u
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _rsb_u *****************
 Defined at:
		line 600 in file "newmain.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  tempa           1    2[BANK1 ] struct RGB
  tempd           1    1[BANK1 ] struct RGB
  tempc           1    0[BANK1 ] struct RGB
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       3       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_rotate_sidebot
 This function uses a non-reentrant model


 *************** function _rotate_r *****************
 Defined at:
		line 292 in file "newmain.c"
 Parameters:    Size  Location     Type
  val             2    8[BANK1 ] int 
 Auto vars:     Size  Location     Type
  buf             2   13[BANK1 ] int 
  buf             2   11[BANK1 ] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       2       0       0       0       0
      Locals:         0       0       4       0       0       0       0
      Temps:          0       0       1       0       0       0       0
      Totals:         0       0       7       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_rr
		_rr_u
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _rr_u *****************
 Defined at:
		line 269 in file "newmain.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  tempf           1    2[BANK1 ] struct RGB
  tempd           1    1[BANK1 ] struct RGB
  tempc           1    0[BANK1 ] struct RGB
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       3       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_rotate_r
 This function uses a non-reentrant model


 *************** function _rotate_l *****************
 Defined at:
		line 358 in file "newmain.c"
 Parameters:    Size  Location     Type
  val             2    8[BANK1 ] int 
 Auto vars:     Size  Location     Type
  buf             2   13[BANK1 ] int 
  buf             2   11[BANK1 ] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       2       0       0       0       0
      Locals:         0       0       4       0       0       0       0
      Temps:          0       0       1       0       0       0       0
      Totals:         0       0       7       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_rl
		_rl_u
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _rl_u *****************
 Defined at:
		line 335 in file "newmain.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  tempf           1    2[BANK1 ] struct RGB
  tempd           1    1[BANK1 ] struct RGB
  tempc           1    0[BANK1 ] struct RGB
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       3       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_rotate_l
 This function uses a non-reentrant model


 *************** function _rotate_bot *****************
 Defined at:
		line 491 in file "newmain.c"
 Parameters:    Size  Location     Type
  val             2    8[BANK1 ] int 
 Auto vars:     Size  Location     Type
  buf             2   13[BANK1 ] int 
  buf             2   11[BANK1 ] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       2       0       0       0       0
      Locals:         0       0       4       0       0       0       0
      Temps:          0       0       1       0       0       0       0
      Totals:         0       0       7       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_rb
		_rb_u
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _rb_u *****************
 Defined at:
		line 468 in file "newmain.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  tempa           1    2[BANK1 ] struct RGB
  tempd           1    1[BANK1 ] struct RGB
  tempc           1    0[BANK1 ] struct RGB
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       3       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_rotate_bot
 This function uses a non-reentrant model


 *************** function _random_cube *****************
 Defined at:
		line 643 in file "newmain.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  r               2   42[BANK1 ] int 
  j               2   44[BANK1 ] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       4       0       0       0       0
      Temps:          0       0       2       0       0       0       0
      Totals:         0       0       6       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    9
 This function calls:
		___awmod
		_initial
		_rand
		_rb
		_rl
		_rr
		_rsb
		_rst
		_rt
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _rt *****************
 Defined at:
		line 378 in file "newmain.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  tempc           1    2[BANK1 ] struct RGB
  tempb           1    1[BANK1 ] struct RGB
  tempa           1    0[BANK1 ] struct RGB
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       3       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_rotate_top
		_random_cube
 This function uses a non-reentrant model


 *************** function _rst *****************
 Defined at:
		line 511 in file "newmain.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  tempc           1    2[BANK1 ] struct RGB
  tempb           1    1[BANK1 ] struct RGB
  tempa           1    0[BANK1 ] struct RGB
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       3       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_rotate_sidetop
		_random_cube
 This function uses a non-reentrant model


 *************** function _rsb *****************
 Defined at:
		line 577 in file "newmain.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  tempc           1    2[BANK1 ] struct RGB
  tempb           1    1[BANK1 ] struct RGB
  tempa           1    0[BANK1 ] struct RGB
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       3       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_rotate_sidebot
		_random_cube
 This function uses a non-reentrant model


 *************** function _rr *****************
 Defined at:
		line 245 in file "newmain.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  tempc           1    2[BANK1 ] struct RGB
  tempb           1    1[BANK1 ] struct RGB
  tempa           1    0[BANK1 ] struct RGB
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       3       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_rotate_r
		_random_cube
 This function uses a non-reentrant model


 *************** function _rl *****************
 Defined at:
		line 312 in file "newmain.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  tempf           1    2[BANK1 ] struct RGB
  tempb           1    1[BANK1 ] struct RGB
  tempa           1    0[BANK1 ] struct RGB
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       3       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_rotate_l
		_random_cube
 This function uses a non-reentrant model


 *************** function _rb *****************
 Defined at:
		line 445 in file "newmain.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  tempc           1    2[BANK1 ] struct RGB
  tempb           1    1[BANK1 ] struct RGB
  tempa           1    0[BANK1 ] struct RGB
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       3       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_rotate_bot
		_random_cube
 This function uses a non-reentrant model


 *************** function _rand *****************
 Defined at:
		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\rand.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  2   24[BANK1 ] int 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       2       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       8       0       0       0       0
      Totals:         0       0      10       0       0       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		___omul
 This function is called by:
		_random_cube
 This function uses a non-reentrant model


 *************** function ___omul *****************
 Defined at:
		line 91 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul64.c"
 Parameters:    Size  Location     Type
  multiplier      8    0[BANK1 ] unsigned long long 
  multiplicand    8    8[BANK1 ] unsigned long long 
 Auto vars:     Size  Location     Type
  product         8   16[BANK1 ] unsigned long long 
 Return value:  Size  Location     Type
                  8    0[BANK1 ] unsigned long long 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0      16       0       0       0       0
      Locals:         0       0       8       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0      24       0       0       0       0
Total ram usage:       24 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_rand
 This function uses a non-reentrant model


 *************** function _initial *****************
 Defined at:
		line 210 in file "newmain.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               2    0[BANK1 ] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       2       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_random_cube
		_main
 This function uses a non-reentrant model


 *************** function ___awmod *****************
 Defined at:
		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
 Parameters:    Size  Location     Type
  dividend        2   34[BANK1 ] int 
  divisor         2   36[BANK1 ] int 
 Auto vars:     Size  Location     Type
  sign            1   39[BANK1 ] unsigned char 
  counter         1   38[BANK1 ] unsigned char 
 Return value:  Size  Location     Type
                  2   34[BANK1 ] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       4       0       0       0       0
      Locals:         0       0       2       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       6       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_random_cube
 This function uses a non-reentrant model


 *************** function ___awdiv *****************
 Defined at:
		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
 Parameters:    Size  Location     Type
  dividend        2    0[BANK1 ] int 
  divisor         2    2[BANK1 ] int 
 Auto vars:     Size  Location     Type
  quotient        2    6[BANK1 ] int 
  sign            1    5[BANK1 ] unsigned char 
  counter         1    4[BANK1 ] unsigned char 
 Return value:  Size  Location     Type
                  2    0[BANK1 ] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       4       0       0       0       0
      Locals:         0       0       4       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       8       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _UART_Initialize *****************
 Defined at:
		line 10 in file "uart.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _ADC_Read *****************
 Defined at:
		line 196 in file "newmain.c"
 Parameters:    Size  Location     Type
  channle         2    0[BANK1 ] int 
 Auto vars:     Size  Location     Type
  digital         2    4[BANK1 ] volatile int 
 Return value:  Size  Location     Type
                  2    0[BANK1 ] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       2       0       0       0       0
      Locals:         0       0       2       0       0       0       0
      Temps:          0       0       2       0       0       0       0
      Totals:         0       0       6       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _ADC_Initialize *****************
 Defined at:
		line 186 in file "newmain.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _isr *****************
 Defined at:
		line 88 in file "newmain.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  str            50    0[BANK0 ] unsigned char [50]
  k               2   53[BANK0 ] int 
  i               2   55[BANK0 ] int 
  check           2   50[BANK0 ] int 
  temp            1   52[BANK0 ] struct RGB
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0      57       0       0       0       0       0
      Temps:          9       0       0       0       0       0       0
      Totals:         9      57       0       0       0       0       0
Total ram usage:       66 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_ClearBuffer
		_MyusartRead
		_UART_Write_Text
		_sprintf
		_strcmp
 This function is called by:
		Interrupt level 2
 This function uses a non-reentrant model


 *************** function _strcmp *****************
 Defined at:
		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcmp.c"
 Parameters:    Size  Location     Type
  l               2    0[COMRAM] PTR const unsigned char 
		 -> mystring(20), 
  r               2    2[COMRAM] PTR const unsigned char 
		 -> STR_2(3), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  2    0[COMRAM] int 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         4       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0
      Totals:         5       0       0       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_isr
 This function uses a non-reentrant model


 *************** function _sprintf *****************
 Defined at:
		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
 Parameters:    Size  Location     Type
  s               2   49[COMRAM] PTR unsigned char 
		 -> isr@str(50), 
  fmt             2   51[COMRAM] PTR const unsigned char 
		 -> STR_8(5), STR_7(5), STR_6(5), STR_5(5), 
		 -> STR_4(5), STR_3(5), 
 Auto vars:     Size  Location     Type
  f               6   59[COMRAM] struct _IO_FILE
  ap              2   57[COMRAM] PTR void [1]
		 -> ?_sprintf(2), 
  ret             2    0        int 
 Return value:  Size  Location     Type
                  2   49[COMRAM] int 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         6       0       0       0       0       0       0
      Locals:        10       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:        16       0       0       0       0       0       0
Total ram usage:       16 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_vfprintf
 This function is called by:
		_isr
 This function uses a non-reentrant model


 *************** function _vfprintf *****************
 Defined at:
		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 Parameters:    Size  Location     Type
  fp              2   41[COMRAM] PTR struct _IO_FILE
		 -> sprintf@f(6), 
  fmt             2   43[COMRAM] PTR const unsigned char 
		 -> STR_8(5), STR_7(5), STR_6(5), STR_5(5), 
		 -> STR_4(5), STR_3(5), 
  ap              2   45[COMRAM] PTR PTR void 
		 -> sprintf@ap(2), 
 Auto vars:     Size  Location     Type
  cfmt            2   47[COMRAM] PTR unsigned char 
		 -> STR_8(5), STR_7(5), STR_6(5), STR_5(5), 
		 -> STR_4(5), STR_3(5), 
 Return value:  Size  Location     Type
                  2   41[COMRAM] int 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         6       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         8       0       0       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_vfpfcnvrt
 This function is called by:
		_sprintf
 This function uses a non-reentrant model


 *************** function _vfpfcnvrt *****************
 Defined at:
		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 Parameters:    Size  Location     Type
  fp              2   31[COMRAM] PTR struct _IO_FILE
		 -> sprintf@f(6), 
  fmt             2   33[COMRAM] PTR PTR unsigned char 
		 -> vfprintf@cfmt(2), 
  ap              2   35[COMRAM] PTR PTR void 
		 -> sprintf@ap(2), 
 Auto vars:     Size  Location     Type
  llu             8    0        unsigned long long 
  ll              8    0        long long 
  f               4    0        long long 
  vp              3    0        PTR void 
  ct              3    0        unsigned char [3]
  cp              2   39[COMRAM] PTR unsigned char 
		 -> ?_sprintf(2), isr@str(50), 
  i               2    0        int 
  done            2    0        int 
  c               1    0        unsigned char 
 Return value:  Size  Location     Type
                  2   31[COMRAM] int 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         6       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0
      Totals:        10       0       0       0       0       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_fputc
		_stoa
 This function is called by:
		_vfprintf
 This function uses a non-reentrant model


 *************** function _stoa *****************
 Defined at:
		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 Parameters:    Size  Location     Type
  fp              2    9[COMRAM] PTR struct _IO_FILE
		 -> sprintf@f(6), 
  s               2   11[COMRAM] PTR unsigned char 
		 -> ?_sprintf(2), isr@str(50), 
 Auto vars:     Size  Location     Type
  nuls            7   14[COMRAM] unsigned char [7]
  l               2   29[COMRAM] int 
  p               2   27[COMRAM] int 
  cp              2   25[COMRAM] PTR unsigned char 
		 -> ?_sprintf(2), stoa@nuls(7), isr@str(50), 
  w               2   23[COMRAM] int 
  i               2   21[COMRAM] int 
 Return value:  Size  Location     Type
                  2    9[COMRAM] int 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         4       0       0       0       0       0       0
      Locals:        17       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0
      Totals:        22       0       0       0       0       0       0
Total ram usage:       22 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_fputc
		_strlen
 This function is called by:
		_vfpfcnvrt
 This function uses a non-reentrant model


 *************** function _strlen *****************
 Defined at:
		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
 Parameters:    Size  Location     Type
  s               2    0[COMRAM] PTR const unsigned char 
		 -> ?_sprintf(2), stoa@nuls(7), isr@str(50), 
 Auto vars:     Size  Location     Type
  a               2    2[COMRAM] PTR const unsigned char 
		 -> ?_sprintf(2), stoa@nuls(7), isr@str(50), 
 Return value:  Size  Location     Type
                  2    0[COMRAM] unsigned int 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_stoa
 This function uses a non-reentrant model


 *************** function _fputc *****************
 Defined at:
		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
 Parameters:    Size  Location     Type
  c               2    0[COMRAM] int 
  fp              2    2[COMRAM] PTR struct _IO_FILE
		 -> sprintf@f(6), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  2    0[COMRAM] int 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         4       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          5       0       0       0       0       0       0
      Totals:         9       0       0       0       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_putch
 This function is called by:
		_stoa
		_vfpfcnvrt
 This function uses a non-reentrant model


 *************** function _putch *****************
 Defined at:
		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
 Parameters:    Size  Location     Type
  c               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  c               1    0[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_fputc
 This function uses a non-reentrant model


 *************** function _UART_Write_Text *****************
 Defined at:
		line 53 in file "uart.c"
 Parameters:    Size  Location     Type
  text            2    1[COMRAM] PTR unsigned char 
		 -> isr@str(50), STR_1(7), 
 Auto vars:     Size  Location     Type
  i               2    5[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0
      Totals:         6       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_UART_Write
 This function is called by:
		_isr
 This function uses a non-reentrant model


 *************** function _UART_Write *****************
 Defined at:
		line 43 in file "uart.c"
 Parameters:    Size  Location     Type
  data            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  data            1    0[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_UART_Write_Text
 This function uses a non-reentrant model


 *************** function _MyusartRead *****************
 Defined at:
		line 64 in file "uart.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		i2___awmod
 This function is called by:
		_isr
 This function uses a non-reentrant model


 *************** function i2___awmod *****************
 Defined at:
		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
 Parameters:    Size  Location     Type
  dividend        2    0[COMRAM] int 
  divisor         2    2[COMRAM] int 
 Auto vars:     Size  Location     Type
  __awmod         1    5[COMRAM] unsigned char 
  __awmod         1    4[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  2    0[COMRAM] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         4       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         6       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_MyusartRead
 This function uses a non-reentrant model


 *************** function _ClearBuffer *****************
 Defined at:
		line 58 in file "uart.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               2    0[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_isr
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\rand.c
		_rand          		CODE           	33E8	0000	257

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\rand.c estimated size: 257

uart.c
		_MyusartRead   		CODE           	41E0	0000	53
		_UART_Write_Text		CODE           	3F7A	0000	127
		_ClearBuffer   		CODE           	4166	0000	69
		_UART_Initialize		CODE           	4214	0000	35
		_UART_Write    		CODE           	4250	0000	23

uart.c estimated size: 307

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c
		___awdiv       		CODE           	3C32	0000	199

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c estimated size: 199

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c
		_strlen        		CODE           	41AA	0000	55

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c estimated size: 55

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcmp.c
		_strcmp        		CODE           	3FF8	0000	113

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcmp.c estimated size: 113

newmain.c
		_rst_u         		CODE           	1C36	0000	485
		_rotate_l      		CODE           	38A8	0000	241
		_rotate_r      		CODE           	37B8	0000	241
		_rotate_bot    		CODE           	3998	0000	241
		_rotate_top    		CODE           	34E8	0000	241
		_ADC_Initialize		CODE           	4236	0000	27
		_rsb_u         		CODE           	1E1A	0000	485
		_main          		CODE           	0FF0	0000	2079
		_rotate_sidebot		CODE           	36C8	0000	241
		_rotate_sidetop		CODE           	35D8	0000	241
		_rb            		CODE           	2F1E	0000	485
		_rb_u          		CODE           	23C6	0000	485
		_isr           		CODE           	0008	0000	2509
		_rl            		CODE           	2D3A	0000	485
		_random_cube   		CODE           	3A88	0000	225
		_rr            		CODE           	2B56	0000	485
		_rst           		CODE           	278E	0000	485
		_rl_u          		CODE           	21E2	0000	485
		_initial       		CODE           	180E	0000	581
		_rt            		CODE           	25AA	0000	485
		_ADC_Read      		CODE           	3EFA	0000	129
		_rr_u          		CODE           	1FFE	0000	485
		_rt_u          		CODE           	1A52	0000	485
		_rsb           		CODE           	2972	0000	485

newmain.c estimated size: 12816

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c
		_vfpfcnvrt     		CODE           	3284	0000	357
		_vfprintf      		CODE           	4068	0000	95
		_stoa          		CODE           	3102	0000	387

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c estimated size: 839

shared
		__initialization		CODE           	40C6	0000	69
		i2___awmod     		CODE           	3DAA	0000	177

shared estimated size: 246

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c
		_putch         		CODE           	426E	0000	3

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c estimated size: 3

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c
		_sprintf       		CODE           	4118	0000	79

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c estimated size: 79

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul64.c
		___omul        		CODE           	3E5A	0000	161

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul64.c estimated size: 161

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c
		___awmod       		CODE           	3CF8	0000	179

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c estimated size: 179

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c
		_fputc         		CODE           	3B68	0000	203

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c estimated size: 203

